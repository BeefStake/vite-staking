{"version":3,"sources":["util/coin.util.ts","common/queue.ts","util/task.ts","clients/coingecko.client.ts","util/types.ts","common/constants.ts","util/logger.ts","util/file.util.ts","bg.svg","clients/vitex.client.ts","util/ensure.ts","util/moment.util.ts","datasources/base.datasource.ts","datasources/mock.datasource.ts","util/cache.ts","datasources/vite.datasource.ts","contexts/common.ts","mutations/pool.ts","queries/account.ts","queries/network.ts","queries/token.ts","queries/pool.ts","clients/apollo.client.ts","common/network.ts","features/common/components/tooltip/component.tsx","features/layout/components/footer/component.tsx","features/layout/components/header-loading/component.tsx","features/layout/components/main-scroll/component.tsx","features/layout/components/main-wrapper/component.tsx","contexts/web3.tsx","contexts/connectedWeb3.tsx","features/main/components/loading/component.tsx","util/format.util.ts","util/snackbar.util.ts","features/main/components/qrcode/component.tsx","features/main/components/login/component.tsx","features/main/components/network-list/component.tsx","features/layout/components/header/component.tsx","features/common/components/alert/component.tsx","features/pool/components/filter/component.tsx","factories/moment.factory.ts","util/filter.util.ts","services/pool.service.ts","util/vite.util.ts","features/common/components/click-once-button/component.tsx","features/pool/components/countdown/component.tsx","features/pool/components/dialog-deposit/component.tsx","services/account.service.ts","features/pool/components/dialog-withdraw/component.tsx","features/pool/components/dialog/component.tsx","features/pool/components/rewards/component.tsx","features/pool/components/tokens/component.tsx","features/pool/components/list-item/component.tsx","features/pool/components/list/component.tsx","features/pool/components/main/component.tsx","features/main/components/dialog-transaction/component.tsx","features/main/components/network/component.tsx","features/main/components/main/component.tsx","App.tsx","reportWebVitals.ts","theme.tsx","index.tsx","util/common.util.ts","util/emitter.util.ts","wallet/types.ts","wallet/connector.ts","wallet/factory.ts","wallet/store.ts","wallet/manager.ts","clients/vite.client.ts"],"names":["util","_iconUrlMap","_coinMarketCapMap","_coingeckoMap","this","Map","iconUrl","existing","get","name","replace","toLowerCase","getCoinUtil","ActionQueue","actionQueues","key","nextStep","a","has","set","processing","queue","acc","push","then","resolve","reject","Promise","r","j","action","shift","delete","Task","task","interval","_taskTimer","_taskInterval","_task","_callback","setTimeout","_onStop","_run","callback","window","clearTimeout","undefined","logger","getLogger","CoingeckoClient","_client","_coinUtil","_cache","_queue","_coinsToFetch","process","emitWarning","console","warn","CoinGecko","Set","mappedName","mapCoingeckoName","queueAction","add","setImmediate","params","ids","Array","from","simple","price","result","BigNumber","data","usd","error","client","getCoingeckoClient","PoolSortType","PoolDialogType","GlobalEvent","VmLogEvent","CommonConstants","APP_NAME","WEB_WALLET_STORAGE_SPACE","SESSION_WALLET_STORAGE_SPACE","VITE_TOKEN_ID","REWARD_FACTOR","Networks","id","networkId","rpcUrl","connectorUrl","contract","TypeNames","Pool","PoolUserInfo","Token","UnknownToken","__typename","symbol","originalSymbol","decimals","url","PoolSortTypes","type","DefaultPoolFilterValues","stakedOnly","showLive","sortBy","DEFAULT","search","LogEventModel","init","banner","args","Object","assign","noop","ExtendedConsoleLogger","Boolean","Date","toLocaleTimeString","mapFn","e","CommonUtil","isString","Error","message","toJsonString","timestamp","map","isArray","e1","isEnabled","createLogEventModel","Function","prototype","bind","call","debug","info","length","FileUtilType","VitexClient","_baseUrl","tokenId","axios","Ensure","property","propertyName","trim","maxLength","MomentUtil","locale","_locale","navigator","language","moment","seconds","duration","date","unix","utc","local","getLocal","format","getLocalTime","getLocalDate","BaseDataSource","_emitter","_walletManager","_coingeckoClient","_vitexClient","_tokens","_tokensURL","_moment","getEmitter","getWalletManager","network","initAsyncProtected","clear","disposeProtected","account","getActiveAccount","notNull","pool","endTimestamp","isExpired","latestRewardBlock","endBlock","all","getTokenPriceUSDAsync","rewardToken","stakingToken","rewardTokenPrice","stakingTokenPrice","totalTime","minus","startBlock","secondsInYear","usdRewardAmount","times","totalRewards","shiftedBy","usdStakingAmount","totalStaked","log","toFixed","apr","div","isFinite","isNaN","lte","getNetworkBlockHeightAsync","networkBlockHeight","remainingSeconds","toNumber","getTokenDetailAsync","token","tokenDecimals","urlIcon","mapCoinMarketCapName","unknownToken","p","getTokenAsync","stakingTokenId","rewardTokenId","getEndTimestampAsync","totalStakingBalance","totalRewardBalance","rewardPerPeriod","rewardPerToken","paidOut","fetchTimestamp","u","address","poolId","stakingBalance","rewardDebt","FileUtil","BrowserFileUtil","path","fetch","response","text","MockDataSource","fileUtil","_fileUtil","_pools","_users","_networkBlockHeight","_networkBlockHeightInterval","setInterval","plus","readFileAsync","pools","JSON","parse","index","toPoolAsync","getAprAsync","users","toPoolUserInfoAsync","initNetworkBlockHeight","initPoolsAsync","initPoolUsersAsync","clearInterval","_account","_id","timeout","random","getPoolUserInfoAsync","userInfo","getPoolAsync","_poolId","isNullOrWhitespace","find","blockNumber","latestBlock","eq","period","latestReward","_tokenId","_amount","_updatePoolAsync","amount","getAccount","gt","pendingAmount","toString","emitPoolDeposit","emitPoolWithdraw","ds","getMockDataSource","CachedFunctionCall","callbackFn","_duration","_callbackFn","_currentValue","_lastExecution","getTime","ViteDataSource","_offchainMethods","_cachedNetworkBlockHeight","_contract","_listener","handleResponseAsync","height","waitForAccountBlockAsync","status","statusTxt","objectFromEntries","entries","fromEntries","entry","value","getViteClient","requestAsync","contractName","createAddressListenerAsync","on","results","abi","vmLog","decodeVmLog","vmlog","handleVmLogAsync","removeAddressListener","removeListener","balanceInfoMap","balance","pow","getAsync","callOffChainMethodAsync","getOffchainMethodAbi","offChain","getTotalPoolsAsync","promises","Number","callContractAsync","event","Deposit","addr","pid","Withdraw","CommonContext","_vite","_datasource","initViteClientAsync","initAsync","dispose","context","getCommonContext","DEPOSIT_MUTATION","gql","WITHDRAW_MUTATION","PoolMutations","deposit","parent","datasource","depositAsync","withdraw","withdrawAsync","GET_ACCOUNT_BALANCE_QUERY","AccountQueries","accountBalance","getAccountBalanceAsync","GET_NETWORK_BLOCK_HEIGHT_QUERY","NetworkQueries","TOKEN_FIELDS","TokenQueries","POOL_FIELDS","POOL_USER_INFO_FIELDS","GET_POOL_QUERY","GET_POOLS_QUERY","GET_POOL_USER_INFO_QUERY","PoolQueries","getPoolsAsync","totalPools","poolUserInfo","ApolloClientWrapper","ApolloClient","cache","InMemoryCache","typePolicies","Query","fields","resolvers","GraphQLScalarType","description","serialize","parseValue","Mutation","headers","getApolloClient","manager","_networkHeight","_network","_setNetworkCallback","cb","split","filter","includes","getNetworkManager","BootstrapTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","arrow","black","Footer","maxWidth","typography","pxToRem","border","useState","setNetworkBlockHeight","rotated","setRotated","emitter","useEffect","handleEvent","heightString","heightRef","substr","mod","NetworkBlockHeightChanged","off","Box","sx","py","px","Grid","container","direction","justifyContent","alignItems","spacing","item","title","placement","Typography","variant","verticalAlign","display","mr","transform","Chip","label","size","Root","TitleTypography","HeaderLoading","AppBar","position","Toolbar","MainScrollStyled","MainScrollInner","MainScroll","children","restProps","Container","MainWrapperStyled","MainWrapper","Web3Context","React","createContext","Web3Provider","setError","wallet","setWallet","setNetwork","onSetWalletCallback","onSetNetworkCallback","Provider","ConnectedWeb3Context","useConnectedWeb3Context","useContext","ConnectedWeb3","connection","setConnection","web3Context","useWeb3Context","commonContext","initWallet","networkManager","getNetwork","logout","useCallback","removeWallet","location","reload","active","FormatUtil","defaultMessage","graphQLErrors","stringify","SnackbarUtil","snackbar","enqueueSnackbar","formatMessage","QrCode","elementRef","useRef","defaultOpt","ecLevel","HIGH","minVersion","background","mode","modes","DRAW_WITH_IMAGE_BOX","radius","image","mSize","current","innerHTML","qrcode","generate","ref","LoginDialog","onClose","open","setOpen","viteClient","ConnectWalletDialog","connector","Dialog","DialogTitle","DialogContent","DialogContentText","mt","textAlign","uri","NetworksFormControl","FormControl","margin","NetworkList","networks","getNetworks","Select","labelId","onChange","selectedNetwork","target","MenuItem","Header","loginOpen","setLoginOpen","src","alt","width","icon","truncateStringInTheMiddle","Button","onClick","Alert","Paper","padding","PoolFilter","prop","values","setValues","emitEvent","oldValues","newValues","emitPoolFilterValuesChanged","handleCheckedChange","checked","mb","xs","md","FormGroup","Stack","FormControlLabel","control","Checkbox","Switch","minWidth","InputLabel","TextField","autoComplete","factory","_map","getMomentFactory","FilterUtil","create","partition","closedPools","openPools","filtered","sorted","sortPools","searchPools","APR","orderBy","TOTAL_STAKED","term","lowerCaseTerm","PoolService","_apollo","_fetchPolicy","query","variables","fetchPolicy","poolQuery","userInfoQuery","mutate","mutation","lt","service","getPoolService","ViteUtil","bn","decimalPlaces","ROUND_DOWN","toFormat","ClickOnceButton","isDisabled","setIsDisabled","handleClick","LoadingButton","loading","fullWidth","disabled","PoolCountdown","hasStarted","setHasStarted","remainingBlocks","setRemainingBlocks","countdown","setCountdown","useMemo","networkHeight","gte","getDuration","days","hours","minutes","ml","Skeleton","animation","PoolDepositDialog","setAmount","setDisabled","poolService","changeAmount","state","handleClose","setState","handleConfirmAsync","enqueueError","htmlFor","Input","autoFocus","startAdornment","InputAdornment","DialogActions","AccountService","PoolWithdrawDialog","getStakedAmount","formatBigNumber","accountService","getBalanceAsync","PoolDialog","WITHDRAW","DEPOSIT","Rewards","setPool","rewardTokens","setRewardTokens","newRewardTokens","calculateRewardTokens","setCanClaim","updateRewardPerToken","newPool","Tokens","BigCoin","Avatar","SmallCoin","grey","coinUtil","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","mapIconUrl","TransparentPaper","paddingTop","PoolListItem","dialogState","setDialogState","canStake","setCanStake","canClaim","canWithdraw","setCanWithdraw","localStorage","getItem","expanded","setExpanded","handleClickClaimAsync","Accordion","ev","setItem","String","AccordionSummary","expandIcon","AccordionDetails","pt","Link","underline","href","cursor","lg","zeroMinWidth","noWrap","showStaked","emitConnectWalletDialog","PoolList","isLoading","setIsLoading","allPools","setAllPools","setPools","setFilter","filterPools","PoolFilterValuesChanged","replacePool","findIndex","updatedPools","handlePoolEvent","PoolDeposit","PoolWithdraw","Pools","useQuery","pb","Transition","forwardRef","Slide","ConfirmTransactionDialog","TransitionComponent","keepMounted","style","zIndex","Network","refetch","emitNetworkBlockHeightChanged","Main","useSnackbar","Background","BackgroundSVG","App","apolloClient","config","EXPONENTIAL_AT","maxSnack","ApolloProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","secondary","red","A400","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector","defaultValue","ms","blob","min","max","Math","floor","lh","rh","truncateString","str","strPositionStart","strPositionEnd","GlobalEmitter","emit","PoolUpdate","EventEmitter","WalletType","WalletAccountType","Wallet","_type","accounts","baseInitinit","createAccount","forEach","Web","WebWallet","Session","SessionWallet","mnemonic","WebWalletAccount","session","SessionWalletAccount","WalletAccount","baseInit","privateKey","WalletConnector","walletManager","opts","meta","err","payload","saveSession","stopBizHeartBeat","listener","sessionAccounts","getWallet","updateWalletStore","res","rej","sendCustomRequest","method","updateSession","catch","Connector","WalletConnectorFactory","getValidSession","bridge","lastAccount","createSession","WalletStore","_webWalletKey","_sessionWalletKey","removeItem","sessionStorage","fromJS","saveData","WalletManager","_store","_wallet","_mnemonicDeriveIndex","_setWalletCallback","updateWallet","validateMnemonic","resetWallet","createWebWalletAccount","setActiveAccount","deriveAddress","mnemonics","createAddressByPrivateKey","validateMnemonics","WS_RPC","require","providerOptions","retryTimes","retryInterval","ViteClient","_isConnected","_connector","_provider","_connectorFactory","isResolved","ViteAPI","disconnect","request","methodName","toAddress","block","accountBlock","createAccountBlock","setProvider","setPrivateKey","autoSetPreviousAccountBlock","sign","send","emitConfirmTransactionDialog","sendTransactionAsync","contractAddress","offchaincode","abiutils","encodeFunctionCall","dataBase64","Buffer","selfAddr","offChainCode","resultBytes","outputs","i","offchainDecodeResult","decodeParameters","resultList","topics","abiItem","encodeLogSignature","topic","decodeLog","inputs","utils","_Buffer","slice","addressHeightRange","placeholder","fromHeight","toHeight","tempPayload","subscribe","unsubscribe","blockByHeight","receiveBlockHash","blockByHash","getAccountBlockStatus","start","resolveAccountBlockData","blockType","bytes"],"mappings":"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","file":"static/js/main.37e86e0d.chunk.js","sourcesContent":["export class CoinUtil {\n  private readonly _iconUrlMap: Map<string, string>;\n  private readonly _coinMarketCapMap: Map<string, string>;\n  private readonly _coingeckoMap: Map<string, string>;\n\n  constructor() {\n    this._iconUrlMap = new Map<string, string>([\n      [\"https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png\", \"./assets/coins/vite.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/5faa1fa2b952137081e36c51af2b493c.png\", \"./assets/coins/usdc.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/3c231a8309999ad226afa097488a6158.png\", \"./assets/coins/dai.png\"]\n    ]);\n    this._coinMarketCapMap = new Map<string, string>();\n    this._coingeckoMap = new Map<string, string>([\n      [\n        \"Avalanche\",\n        \"avalanche-2\"\n      ],\n      [\n        \"Terra\",\n        \"terra-luna\"\n      ]\n    ]);\n  }\n\n  mapIconUrl(iconUrl?: Maybe<string>): string {\n    if (!iconUrl) {\n      return \"\";\n    }\n    const existing = this._iconUrlMap.get(iconUrl);\n    return existing ?? iconUrl;\n  }\n\n  mapCoinMarketCapName(name: string): string {\n    const existing = this._coinMarketCapMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n\n  mapCoingeckoName(name: string): string {\n    const existing = this._coingeckoMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n}\n\nconst util = new CoinUtil();\n\nexport const getCoinUtil = (): CoinUtil => {\n  return util;\n}","export type Queue = {\n    processing: boolean;\n    queue: Action[];\n};\nexport type Action = (()=>Promise<void>);\n\nexport default class ActionQueue<keyType = any> {\n    private readonly actionQueues:Map<keyType, Queue> = new Map();\n\n    async queueAction<T=void>(key:keyType, nextStep:()=>Promise<T>):Promise<T>{\n        if(!this.actionQueues.has(key)){\n            this.actionQueues.set(key, {\n                processing: false,\n                queue: []\n            });\n        }\n        const acc = this.actionQueues.get(key) as Queue;\n        acc.queue.push(()=>nextStep().then(resolve, reject));\n        let resolve:((value:T)=>void);\n        let reject:((error?:Error)=>void);\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise<T>(async (r, j) => {\n            resolve = r;\n            reject = j;\n\n            if(acc.processing)return;\n            acc.processing = true;\n            while(acc.queue[0]){\n                const action = acc.queue.shift() as Action;\n                await action();\n            }\n            this.actionQueues.delete(key);\n        });\n    }\n}","export class Task {\n  private _taskTimer: NodeJS.Timeout | undefined\n  private _taskInterval: number\n  private _task: () => Promise<boolean>\n  private _callback?: () => any\n\n  constructor(task: () => Promise<boolean>, interval: number) {\n    this._task = task;\n    this._taskInterval = interval;\n\n    return this;\n  }\n\n  _run(): void {\n    this._taskTimer = setTimeout(async () => {\n      if (!this._task) {\n        this._onStop();\n        return;\n      }\n      if (!(await this._task())) {\n        this._onStop();\n        return;\n      }\n      this._run();\n    }, this._taskInterval);\n  }\n\n  _onStop() {\n    this._callback && this._callback();\n  }\n\n  start(callback?: () => any): void {\n    this._callback = callback;\n    if (this._taskTimer) {\n      return;\n    }\n\n    this._run();\n  }\n\n\n  stop(): void {\n    this._onStop();\n    if (!this._taskTimer) {\n      return;\n    }\n    window.clearTimeout(this._taskTimer);\n    this._taskTimer = undefined;\n  }\n}","import BigNumber from \"bignumber.js\";\nimport CoinGecko from \"coingecko-api\";\nimport ActionQueue from \"../common/queue\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getLogger } from \"../util/logger\";\n\nconst logger = getLogger();\n\nexport class CoingeckoClient {\n  private readonly _client: any;\n  private readonly _coinUtil: CoinUtil;\n  private readonly _cache: Map<string, BigNumber>;\n  private readonly _queue: ActionQueue<string>;\n  private _coinsToFetch: Set<string>;\n\n  constructor() {\n    process.emitWarning = console.warn\n    this._client = new CoinGecko();\n    this._coinUtil = getCoinUtil();\n    this._cache = new Map<string, BigNumber>();\n    this._queue = new ActionQueue<string>();\n    this._coinsToFetch = new Set<string>();\n  }\n\n  async getTokenPriceUSDAsync(name: string): Promise<BigNumber> {\n    try {\n      const mappedName = this._coinUtil.mapCoingeckoName(name);\n      if(this._cache.has(mappedName))return this._cache.get(mappedName) as BigNumber;\n      return await this._queue.queueAction(mappedName, async () => {\n        if(this._cache.has(mappedName))return this._cache.get(mappedName) as BigNumber;\n        this._coinsToFetch.add(mappedName);\n        return await this._queue.queueAction(\"global\", async () => {\n          if(this._cache.has(mappedName))return this._cache.get(mappedName) as BigNumber;\n          // let other requests to batch them\n          await new Promise(r=>setImmediate(r));\n          const params = { ids: Array.from(this._coinsToFetch) };\n          this._coinsToFetch = new Set<string>();\n          const result = await this._client.simple.price(params);\n  \n          for(const mappedName in result.data){\n            const price = new BigNumber(result.data[mappedName].usd);\n    \n            this._cache.set(mappedName, price);\n            setTimeout(() => {\n              this._cache.delete(mappedName)\n            }, 2*60*1000);\n          }\n  \n          return this._cache.get(mappedName) || new BigNumber(0);\n        });\n      })\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst client = new CoingeckoClient();\n\nexport const getCoingeckoClient = () => {\n  return client;\n}","import BigNumber from \"bignumber.js\"\n\nexport interface GenericType {\n  name: string;\n  type: string;\n}\n\nexport type Contract = {\n  address: string\n  contractName: string\n  binary: string\n  offChain: string\n  abi: any[]\n}\n\nexport type Network = {\n  id: number\n  networkId: number\n  name: string\n  rpcUrl: string\n  connectorUrl: string,\n  contract: string\n}\n\nexport type Token = {\n  __typename: string\n  id: string\n  name: string\n  symbol: string\n  originalSymbol: string\n  decimals: number\n  iconUrl: Maybe<string>\n  url: Maybe<string>\n}\n\nexport type Pool = {\n  __typename: string\n  id: number\n  stakingToken: Token\n  rewardToken: Token\n  apr?: Maybe<BigNumber>\n  totalStaked: BigNumber\n  totalRewards: BigNumber\n  startBlock: BigNumber\n  endBlock: BigNumber\n  endTimestamp: number\n  latestRewardBlock: BigNumber\n  rewardPerPeriod: BigNumber\n  rewardPerToken: BigNumber\n  paidOut: BigNumber\n  userInfo?: Maybe<PoolUserInfo>\n  fetchTimestamp: number\n}\n\nexport type ContractPool = {\n  stakingTokenId: string\n  rewardTokenId: string\n  totalStakingBalance: string\n  totalRewardBalance: string\n  startBlock: string\n  endBlock: string\n  latestRewardBlock: string\n  rewardPerPeriod: string\n  rewardPerToken: string\n  paidOut: string\n}\n\nexport type PoolUserInfo = {\n  __typename: string\n  id: string\n  poolId: number\n  account: string\n  stakingBalance: BigNumber\n  rewardDebt: BigNumber\n}\n\nexport type ContractPoolUserInfo = {\n  poolId: number\n  address: string\n  stakingBalance: string\n  rewardDebt: string\n}\n\nexport type PoolFilterValues = {\n  stakedOnly: boolean\n  showLive: boolean\n  sortBy: string\n  search: string\n}\n\nexport enum PoolSortType {\n  DEFAULT = 0,\n  APR = 1,\n  TOTAL_STAKED = 2\n}\n\nexport type PoolDialogState = {\n  type: PoolDialogType\n  open: boolean\n}\n\nexport enum PoolDialogType {\n  DEPOSIT = 0,\n  WITHDRAW = 1,\n  CLAIM = 2\n}\n\nexport enum GlobalEvent {\n  ConfirmTransactionDialog = 'ConfirmTransactionDialog',\n  ConnectWalletDialog = 'ConnectWalletDialog',\n  NetworkBlockHeightChanged = 'NetworkBlockHeightChanged',\n  PoolFilterValuesChanged = 'PoolFilterValuesChanged',\n  PoolDeposit = 'PoolDeposit',\n  PoolWithdraw = 'PoolWithdraw',\n  PoolUpdate = 'PoolUpdate'\n}\n\nexport type VmLog = {\n  event: string\n  topic: string\n  args: any\n}\n\nexport enum VmLogEvent {\n  PoolCreated = 'PoolCreated',\n  Deposit = 'Deposit',\n  Withdraw = 'Withdraw'\n}","import { GenericType, Network, PoolFilterValues, PoolSortType, Token } from \"../util/types\"\n\nexport const CommonConstants = {\n  APP_NAME: 'BeefStake',\n  WEB_WALLET_STORAGE_SPACE: 'VSP_WEB_WALLET',\n  SESSION_WALLET_STORAGE_SPACE: 'VSP_SESSION_WALLET',\n  VITE_TOKEN_ID: 'tti_5649544520544f4b454e6e40',\n  REWARD_FACTOR: 1e36 // 10^36 = new BigNumber(10).pow(36)\n}\n\nexport const Networks: Network[] = [\n  {\n    id: 1,\n    networkId: 1,\n    name: 'BeefStake v0.1',\n    rpcUrl: 'wss://node-vite.thomiz.dev/ws',\n    connectorUrl: 'wss://viteconnect.thomiz.dev',\n    contract: \"vite_cc2d0c2c34ae6af8bd58e111ca8c958d002c2b3199f449c8d7\"\n  }/*,\n  {\n    id: 2,\n    networkId: 2,\n    name: 'TESTNET',\n    rpcUrl: 'wss://buidl.vite.net/gvite/ws', // https://buidl.vite.net/gvite\n    connectorUrl: 'wss://viteconnect.thomiz.dev',\n    contract: \"vite_dcd10d6c5e72d616d5352c891040b49f5b333cfc039e40d5b6\"\n  },\n  {\n    id: 4,\n    networkId: 5,\n    name: 'DEBUG',\n    rpcUrl: 'ws://localhost:23457',\n    connectorUrl: 'wss://viteconnect.thomiz.dev',\n    contract: null\n  }*/\n]\n\nexport const TypeNames = {\n  Pool: \"Pool\",\n  PoolUserInfo: \"PoolUserInfo\",\n  Token: \"Token\"\n}\n\nexport const UnknownToken: Token = {\n  __typename: TypeNames.Token,\n  id: \"-1\",\n  name: \"UNKNOWN\",\n  symbol: \"UNKNOWN\",\n  originalSymbol: \"UNKNOWN\",\n  decimals: 0,\n  iconUrl: undefined,\n  url: undefined\n}\n\nexport const PoolSortTypes: GenericType[] = [\n  {\n    name: \"\",\n    type: \"DEFAULT\"\n  },\n  {\n    name: \"APR\",\n    type: \"APR\"\n  },\n  {\n    name: \"Total staked\",\n    type: \"TOTAL_STAKED\"\n  }\n]\n\nexport const DefaultPoolFilterValues: PoolFilterValues = {\n  stakedOnly: false,\n  showLive: true,\n  sortBy: PoolSortTypes[PoolSortType.DEFAULT].type,\n  search: \"\"\n}","import { CommonUtil } from './common.util';\n\nexport class LogEventModel {\n  banner?: string;\n  args?: any[];\n\n  public constructor(init?: Partial<LogEventModel>) {\n    Object.assign(this, init);\n  }\n}\n\nexport interface ILogger {\n  // Make sure level is selected e.g. 'Verbose' in Chrome\n  readonly debug: any;\n  readonly info: any;\n  readonly warn: any;\n  readonly error: any;\n}\n\nconst noop = (): any => undefined;\n\nexport class ConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return console.debug.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return console.info.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return console.warn.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return console.error.bind(console);\n    } else {\n      return noop;\n    }\n  }\n}\n\nexport class ExtendedConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  private timestamp(type: string): string {\n    return `[${type} ${new Date().toLocaleTimeString()}]`;\n  }\n\n  private createLogEventModel(type: string, ...args: any[]): LogEventModel {\n    const mapFn = (e: any) => {\n      if (CommonUtil.isString(e)) {\n        return e;\n      } else if (e instanceof Error) {\n        return e.message;\n      }\n      return CommonUtil.toJsonString(e);\n    };\n    const result = new LogEventModel({\n      banner: this.timestamp(type),\n      args: args?.map(e => Array.isArray(e) ? e.map(e1 => mapFn(e1)) : mapFn(e))\n    });\n    return result;\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('DEBUG', args);\n        return Function.prototype.bind.call(console.debug, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('INFO', args);\n        return Function.prototype.bind.call(console.info, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('WARN', args);\n        return Function.prototype.bind.call(console.warn, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        if (args?.length > 0) {\n          if (!CommonUtil.isString(args[0])) {\n            args.push('(See console output for more information.)');\n          }\n        }\n        const result = this.createLogEventModel('ERROR', args);\n        return Function.prototype.bind.call(console.error, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n}\n\nconst logger = new ExtendedConsoleLogger();\n\nexport const getLogger = (): ILogger => {\n  return logger;\n}","import fs from 'fs';\n\nexport abstract class FileUtil {\n  abstract readFileAsync(path: string): Promise<any>;\n}\n\nexport class BrowserFileUtil extends FileUtil {\n  async readFileAsync(path: string): Promise<any> {\n    const response = await fetch(path);\n    return response.text();\n  }\n}\n\nexport class LocalFileUtil extends FileUtil {\n  public async readFileAsync(path: string): Promise<any> {\n    return Promise.resolve(fs.readFileSync(path, 'utf8'));\n  }\n}\n\nexport enum FileUtilType {\n  Browser = 0,\n  Local = 1\n}\n\nexport const getFileUtil = (type: FileUtilType = FileUtilType.Browser) => {\n  switch (type) {\n    case FileUtilType.Local:\n      return new LocalFileUtil();\n    default:\n      return new BrowserFileUtil();\n  }\n}","export default __webpack_public_path__ + \"static/media/bg.fa049dbd.svg\";","import axios from 'axios';\n\ntype BaseResult<T> = {\n  code: number,\n  data: T\n}\n\nexport type TokenDetailResult = {\n  name: string\n  symbol: string\n  originalSymbol: string\n  tokenDecimals: number\n  urlIcon: string\n}\n\nexport class VitexClient {\n  private readonly _baseUrl: string;\n\n  constructor() {\n    this._baseUrl = \"https://vitex.vite.net\"\n  }\n\n  async getTokenDetailAsync(tokenId: string): Promise<Maybe<TokenDetailResult>> {\n    const result = await axios.get<BaseResult<TokenDetailResult>>(this._baseUrl + \"/api/v1/token/detail?tokenId=\" + tokenId);\n    return result.data.data;\n  }\n}\n\nconst client = new VitexClient();\n\nexport const getVitexClient = () => {\n  return client;\n}\n","export class Ensure {\n\n  public static notNull(property: any, propertyName: string, message?: string) {\n    if (property === null || property === undefined) {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static notNullOrWhiteSpace(property: Maybe<string>, propertyName: string, message?: string) {\n    if (property === null || property === undefined || property?.trim() === '') {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static maxLength(property: Maybe<string>, propertyName: string, maxLength: number) {\n    if (property && property.length > maxLength) {\n      throw new Error(`${propertyName} exceeds the maximum length of ${maxLength}`);\n    }\n  }\n\n}\n","import moment from 'moment';\n\nexport class MomentUtil {\n  private readonly _locale: string;\n\n  constructor(locale?: Maybe<string>) {\n    if (locale) {\n      this._locale = locale;\n    } else {\n      this._locale = navigator.language;\n    }\n    moment.locale(this._locale);\n  }\n\n  public getLocale(): string {\n    return this._locale;\n  }\n\n  public get(): moment.Moment {\n    return moment();\n  }\n\n  public getDuration(seconds: number): moment.Duration {\n    return moment.duration(seconds, 'seconds');\n  }\n\n  public getFromUnix(date: number) {\n    return moment.unix(date);\n  }\n\n  public getFromMilliseconds(date: number) {\n    return moment(date, 'x');\n  }\n\n  public getLocal(date: any): moment.Moment {\n    return moment.utc(date).local();\n  }\n\n  public getLocalTime(date: any): string {\n    return this.getLocal(date).format('LTS');\n  }\n\n  public getLocalDate(date: any): string {\n    return this.getLocal(date).format('L');\n  }\n\n  public getLocalFormatted(date: any): string {\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\n  }\n\n  public getLocalReverseFormatted(date: any): string {\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\n  }\n\n  public isExpired(timestamp: number): boolean {\n    try {\n      if (timestamp >= 0) {\n        return moment.utc().unix() >= timestamp;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { CoingeckoClient, getCoingeckoClient } from \"../clients/coingecko.client\";\nimport { getVitexClient, VitexClient } from \"../clients/vitex.client\";\nimport { TypeNames, UnknownToken } from \"../common/constants\";\nimport ActionQueue from \"../common/queue\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { Ensure } from \"../util/ensure\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { ContractPool, ContractPoolUserInfo, Network, Pool, PoolUserInfo, Token } from \"../util/types\";\nimport { getWalletManager, WalletAccount, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport interface IDataSource {\n  initAsync(network: Network): Promise<void>;\n  dispose(): void;\n  getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n  getNetworkBlockHeightAsync(): Promise<BigNumber>;\n  getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n  getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n  getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n  getTokenAsync(_id: string): Promise<Token>;\n  getTotalPoolsAsync(): Promise<number>;\n  depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n  withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}\n\nexport abstract class BaseDataSource implements IDataSource {\n  protected readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _coingeckoClient: CoingeckoClient;\n  private readonly _vitexClient: VitexClient;\n  private readonly _coinUtil: CoinUtil;\n  private readonly _tokens: Map<string, Token>;\n  private readonly _queue: ActionQueue<string>;\n  private readonly _tokensURL: Map<string, string>;\n  private _moment: MomentUtil = new MomentUtil();\n\n  constructor() {\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._coingeckoClient = getCoingeckoClient();\n    this._vitexClient = getVitexClient();\n    this._coinUtil = getCoinUtil();\n    this._tokens = new Map<string, Token>();\n    this._tokensURL = new Map<string, string>([\n      [\"tti_22d0b205bed4d268a05dfc3c\", \"https://vitamincoin.org/home\"]\n    ])\n    this._queue = new ActionQueue<string>();\n  }\n\n  async initAsync(network: Network): Promise<void> {\n    logger.info(\"Init BaseDataSource\")();\n    this._moment = new MomentUtil();\n    await this.initAsyncProtected(network);\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing BaseDataSource\")();\n    this._tokens.clear();\n    this.disposeProtected();\n  }\n\n  getAccount(): WalletAccount {\n    const account = this._walletManager.getActiveAccount();\n    Ensure.notNull(account, \"account\", \"Please connect your wallet first.\");\n    return account as WalletAccount;\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    try {\n      if (pool.endTimestamp >= 0 && (this._moment.isExpired(pool.endTimestamp) || pool.latestRewardBlock === pool.endBlock)) {\n        // pool is closed, should not display numeric APR.\n        return undefined;\n      }\n      const [\n        rewardTokenPrice,\n        stakingTokenPrice\n      ] = await Promise.all([\n        this._coingeckoClient.getTokenPriceUSDAsync(pool.rewardToken.name),\n        this._coingeckoClient.getTokenPriceUSDAsync(pool.stakingToken.name)\n      ]);\n      const totalTime = pool.endBlock.minus(pool.startBlock);\n      const secondsInYear = new BigNumber(365 * 24 * 60 * 60);\n      const usdRewardAmount = rewardTokenPrice.times(pool.totalRewards).shiftedBy(-pool.rewardToken.decimals);\n      const usdStakingAmount = stakingTokenPrice.times(pool.totalStaked).shiftedBy(-pool.stakingToken.decimals);\n      console.log(usdRewardAmount.toFixed(), usdStakingAmount.toFixed())\n      const apr = new BigNumber(usdRewardAmount)\n      .div(usdStakingAmount)\n      .div(totalTime)\n      .times(secondsInYear)\n      .times(100)\n      return !apr.isFinite() || apr.isNaN() ? undefined : apr;\n    } catch (error) {\n      logger.error(error)();\n      return undefined;\n    }\n  }\n\n  async getEndTimestampAsync(endBlock: BigNumber): Promise<number> {\n    try {\n      if (!endBlock || endBlock.lte(0)) {\n        return -1;\n      }\n      const networkBlockHeight = await this.getNetworkBlockHeightAsync();\n      const remainingSeconds = endBlock.minus(networkBlockHeight);\n      if (remainingSeconds.lte(0)) {\n        return 0;\n      }\n      return this._moment.get().add(remainingSeconds.toNumber(), \"seconds\").unix();\n    } catch (error) {\n      logger.error(error)();\n    }\n    return 0;\n  }\n\n  async getTokenAsync(id: string): Promise<Token> {\n    try {\n      if(this._tokens.has(id))return this._tokens.get(id) as Token;\n      // @ts-ignore\n      return await this._queue.queueAction<Token>(id, async () => {\n        if(this._tokens.has(id))return this._tokens.get(id) as Token;\n        const result = await this._vitexClient.getTokenDetailAsync(id);\n        if(!result)return\n        const token:Token = {\n          __typename: \"Token\",\n          id,\n          name: result.name,\n          symbol: result.symbol,\n          originalSymbol: result.originalSymbol,\n          decimals: result.tokenDecimals,\n          iconUrl: result.urlIcon,\n          url: this._tokensURL.get(id) || \"https://coinmarketcap.com/currencies/\" + this._coinUtil.mapCoinMarketCapName(result.name)\n        }\n        this._tokens.set(id, token);\n        return token;\n      });\n    } catch (error) {\n      logger.error(error)();\n    }\n    const unknownToken = {\n      ...UnknownToken,\n      id\n    }\n    this._tokens.set(id, unknownToken);\n    return unknownToken;\n  }\n\n  protected async toPoolAsync(id: number, p: ContractPool): Promise<Pool> {\n    const [\n      stakingToken,\n      rewardToken,\n      endTimestamp\n    ] = await Promise.all([\n      this.getTokenAsync(p.stakingTokenId),\n      this.getTokenAsync(p.rewardTokenId),\n      this.getEndTimestampAsync(new BigNumber(p.endBlock))\n    ]);\n    const pool: Pool = {\n      __typename: TypeNames.Pool,\n      id,\n      stakingToken,\n      rewardToken,\n      totalStaked: new BigNumber(p.totalStakingBalance),\n      totalRewards: new BigNumber(p.totalRewardBalance),\n      startBlock: new BigNumber(p.startBlock),\n      endBlock: new BigNumber(p.endBlock),\n      endTimestamp,\n      latestRewardBlock: new BigNumber(p.latestRewardBlock),\n      rewardPerPeriod: new BigNumber(p.rewardPerPeriod),\n      rewardPerToken: new BigNumber(p.rewardPerToken),\n      paidOut: new BigNumber(p.paidOut),\n      fetchTimestamp: this._moment.get().unix()\n    };\n    return pool;\n  }\n\n  protected async toPoolUserInfoAsync(u: ContractPoolUserInfo): Promise<PoolUserInfo> {\n    return {\n      __typename: TypeNames.PoolUserInfo,\n      id: `${u.address}_${u.poolId}`,\n      poolId: u.poolId,\n      account: u.address,\n      stakingBalance: new BigNumber(u.stakingBalance),\n      rewardDebt: new BigNumber(u.rewardDebt)\n    }\n  }\n\n  protected abstract initAsyncProtected(network: Network): Promise<void>;\n\n  protected abstract disposeProtected(): void;\n\n  abstract getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n\n  abstract getNetworkBlockHeightAsync(): Promise<BigNumber>;\n\n  abstract getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n\n  abstract getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n\n  abstract getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n\n  abstract getTotalPoolsAsync(): Promise<number>;\n\n  abstract depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n\n  abstract withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\n\nconst logger = getLogger();\n\nexport class MockDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private _pools: Pool[];\n  private _users: PoolUserInfo[];\n  private _networkBlockHeight: BigNumber;\n  private _networkBlockHeightInterval?: NodeJS.Timeout;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._pools = [];\n    this._users = [];\n    this._networkBlockHeight = new BigNumber(0);\n    logger.info(\"MockDataSource loaded\")();\n  }\n\n  private initNetworkBlockHeight() {\n    this._networkBlockHeight = new BigNumber(0);\n    this._networkBlockHeightInterval = setInterval(() => {\n      this._networkBlockHeight = this._networkBlockHeight.plus(1);\n      // console.log(this._networkBlockHeight.toString())\n    }, 1000);\n  }\n\n  private async initPoolsAsync(): Promise<void> {\n    let pools = await this._fileUtil.readFileAsync(\"./assets/data/mock_pool_info.json\");\n    pools = JSON.parse(pools);\n    this._pools = [];\n    for (let index = 0; index < pools.length; index++) {\n      const p: ContractPool = pools[index];\n      const pool = await this.toPoolAsync(index, p);\n      pool.apr = await this.getAprAsync(pool);\n      this._pools.push(pool);\n    }\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    switch (pool.id) {\n      case 0:\n        return new BigNumber(2.12345678)\n      case 1:\n        return new BigNumber(3.55555555)\n      default:\n        return super.getAprAsync(pool)\n    };\n  }\n\n  private async initPoolUsersAsync(): Promise<void> {\n    let users = await this._fileUtil.readFileAsync(\"./assets/data/mock_user_info.json\");\n    users = JSON.parse(users);\n    this._users = [];\n    for (let index = 0; index < users.length; index++) {\n      const u: ContractPoolUserInfo = users[index];\n      const info = await this.toPoolUserInfoAsync(u);\n      this._users.push(info);\n    }\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    logger.info(\"MockDataSource initAsyncProtected\")();\n    this.initNetworkBlockHeight();\n    await this.initPoolsAsync();\n    await this.initPoolUsersAsync();\n  }\n\n  protected disposeProtected(): void {\n    if (this._networkBlockHeightInterval) {\n      clearInterval(this._networkBlockHeightInterval);\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    return new BigNumber(0);\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    return this._networkBlockHeight;\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    await CommonUtil.timeout(CommonUtil.random(100, 500));\n    const pool = this._pools[_id];\n    if (!_account) {\n      return pool;\n    }\n    return {\n      ...pool,\n      userInfo: await this.getPoolUserInfoAsync(_id, _account)\n    }\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    await CommonUtil.timeout(1000);\n    if (!_account) {\n      return this._pools;\n    }\n    const pools = [];\n    for (const p of this._pools) {\n      pools.push(await this.getPoolAsync(p.id, _account))\n    }\n    return pools;\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    return this._users.find(e => e.poolId === _poolId && e.account.toLowerCase() === _account?.toLowerCase());\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    return this._pools.length;\n  }\n\n  private async _updatePoolAsync(pool: Pool): Promise<void> {\n    const blockNumber = await this.getNetworkBlockHeightAsync();\n    const latestBlock = blockNumber < pool.endBlock ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock <= pool.latestRewardBlock) {\n      return;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(0)) {\n      pool.latestRewardBlock = latestBlock;\n      return;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    let userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (userInfo) {\n      // dispense rewards\n      if (userInfo.stakingBalance.gt(0)) {\n        const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n        pool.paidOut = pool.paidOut.plus(pendingAmount);\n      }\n      // update balances & recompute rewardDebt\n      userInfo.stakingBalance = userInfo.stakingBalance.plus(amount);\n      userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n    } else {\n      userInfo = await this.toPoolUserInfoAsync({\n        poolId: _id,\n        address: account,\n        stakingBalance: amount.toString(),\n        rewardDebt: \"0\"\n      });\n      this._users.push(userInfo);\n    }\n    pool.totalStaked = pool.totalStaked.plus(amount);\n    this._emitter.emitPoolDeposit(_id, new BigNumber(_amount), account);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    const userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (!userInfo) {\n      throw new Error(\"Withdraw not possible\")\n    }\n    if (userInfo.stakingBalance.lte(0) || amount.gt(userInfo.stakingBalance)) {\n      throw new Error(\"Insufficient balance\")\n    }\n\n    // dispense rewards\n    const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n    pool.paidOut = pool.paidOut.plus(pendingAmount);\n\n    // update balances & recompute rewardDebt\n    userInfo.stakingBalance = userInfo.stakingBalance.minus(amount);\n    pool.totalStaked = pool.totalStaked.minus(amount);\n    userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n\n    this._emitter.emitPoolWithdraw(_id, new BigNumber(_amount), account);\n    return true;\n  }\n}\n\nconst ds = new MockDataSource();\n\nexport const getMockDataSource = () => {\n  return ds;\n}","export class CachedFunctionCall<T> {\n  private readonly _duration: number;\n  private readonly _callbackFn: () => Promise<T>;\n  private _currentValue?: Maybe<T>;\n  private _lastExecution: number;\n\n  constructor(duration: number, callbackFn: () => Promise<T>) {\n    this._duration = duration;\n    this._callbackFn = callbackFn;\n    this._lastExecution = new Date(0).getTime();\n  }\n\n  private isExpired(): boolean {\n    return new Date().getTime() >= this._lastExecution + this._duration;\n  }\n\n  async getAsync(): Promise<T> {\n    if (!this._currentValue || this.isExpired()) {\n      this._currentValue = await this._callbackFn();\n      this._lastExecution = new Date().getTime();\n    }\n    return this._currentValue;\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { CommonConstants } from \"../common/constants\";\nimport { CachedFunctionCall } from \"../util/cache\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Contract, ContractPool, ContractPoolUserInfo, Network, Pool, PoolUserInfo, VmLog, VmLogEvent } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\n\nconst logger = getLogger();\n\nexport class ViteDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private readonly _client: ViteClient;\n  private readonly _offchainMethods: Map<string, string> = new Map<string, string>();\n  private readonly _cachedNetworkBlockHeight: CachedFunctionCall<number>;\n  private _contract?: Contract;\n  private _listener: any;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._client = getViteClient();\n    this._cachedNetworkBlockHeight = new CachedFunctionCall(500, async () => {\n      // prevent function from being called more than once every 500 milliseconds\n      return await this._client.requestAsync(\"ledger_getSnapshotChainHeight\")\n    });\n    logger.info(\"ViteDataSource loaded\")();\n  }\n\n  protected async initAsyncProtected(network: Network): Promise<void> {\n    const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools.json');\n    this._contract = JSON.parse(contract) as Contract;\n    this._contract.address = network.contract\n    logger.info(`Contract ${this._contract?.contractName} loaded`)();\n    this._listener = await this._client.createAddressListenerAsync(this._contract.address);\n    this._listener.on((results: any[]) => {\n      if (!this._contract?.abi) {\n        logger.info('Could not decode vmlog because contract abi is not defined.')();\n      } else {\n        for (let index = 0; index < results.length; index++) {\n          const result = results[index];\n          const vmLog = this._client.decodeVmLog(result.vmlog, this._contract.abi);\n          logger.info(vmLog ?? result)();\n          if (vmLog) {\n            this.handleVmLogAsync(vmLog);\n          }\n        }\n      }\n    });\n  }\n\n  protected disposeProtected(): void {\n    this.removeAddressListener();\n    this._offchainMethods.clear();\n  }\n\n  private removeAddressListener(): void {\n    if (this._listener) {\n      this._client.removeListener(this._listener);\n    }\n  }\n\n  private get contract(): Contract {\n    if (this._contract?.address === undefined) {\n      throw new Error(\"Contract is not defined.\");\n    } else {\n      return this._contract;\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    try {\n      if (CommonUtil.isNullOrWhitespace(_account)) {\n        return new BigNumber(0);\n      }\n      const result = await this._client.requestAsync(\"ledger_getAccountInfoByAddress\", _account);\n      if (!result?.balanceInfoMap) {\n        return new BigNumber(0);\n      }\n      return new BigNumber(result.balanceInfoMap[CommonConstants.VITE_TOKEN_ID].balance).div(new BigNumber(10).pow(18));\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    try {\n      const result = await this._cachedNetworkBlockHeight.getAsync();\n      return new BigNumber(result);\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolInfo\"), this.contract.offChain, [_id]);\n    const p = this.objectFromEntries(result) as ContractPool;\n    const pool = await this.toPoolAsync(_id, p);\n    const [\n      apr,\n      userInfo\n    ] = await Promise.all([\n      this.getAprAsync(pool),\n      this.getPoolUserInfoAsync(_id, _account)\n    ])\n    pool.apr = apr;\n    pool.userInfo = userInfo;\n    return pool;\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    const amount = await this.getTotalPoolsAsync();\n    const pools:Pool[] = [];\n    const promises = [];\n    for (let index = 0; index < amount; index++) {\n      promises.push((async () => {\n        try {\n          const pool = await this.getPoolAsync(index, _account);\n          pools.push(pool)\n        } catch (error) {\n          logger.error(error)();\n        }\n      })());\n    }\n    await Promise.all(promises);\n    return pools;\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (!_account || CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getUserInfo\"), this.contract.offChain, [_poolId, _account]);\n    const u = this.objectFromEntries(result) as ContractPoolUserInfo;\n    const info = await this.toPoolUserInfoAsync(u);\n    return info;\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolCount\"), this.contract.offChain, []);\n    return Number(result[0].value);\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"deposit\", this.contract.abi, [_id], _tokenId, _amount, this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"withdraw\", this.contract.abi, [_id, _amount], undefined, \"0\", this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  private getOffchainMethodAbi(name: string): any {\n    let result: Maybe<any>\n    if (this._offchainMethods.has(name)) {\n      result = this._offchainMethods.get(name)\n    } else {\n      result = this.contract.abi.find(e => e.type === \"offchain\" && e.name === name)\n      if (result) {\n        this._offchainMethods.set(name, result)\n      }\n    }\n    if (result) {\n      return result\n    } else {\n      throw new Error(`The offchain method '${name}' does not exist.'`)\n    }\n  }\n\n  private handleResponseAsync = async (address: string, height: string) => new Promise<void>((resolve, reject) => {\n    this._client.waitForAccountBlockAsync(address, height).then((result: any) => {\n      if (result?.status === 0) {\n        resolve()\n      } else {\n        reject(result?.statusTxt ?? \"Something went wrong.\")\n      }\n    })\n  })\n\n  private async handleVmLogAsync(vmlog: VmLog): Promise<void> {\n    try {\n      if (vmlog.event === VmLogEvent.Deposit && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolDeposit(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else if (vmlog.event === VmLogEvent.Withdraw && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolWithdraw(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else {\n        logger.info('Unknown vmlog event.', vmlog)();\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  private objectFromEntries = (entries: any) => {\n    return Object.fromEntries(\n      entries.map((entry: any) => {\n        return [entry.name, entry.value];\n      })\n    );\n  }\n}\n\nconst ds = new ViteDataSource();\n\nexport const getViteDataSource = () => {\n  return ds;\n}","import { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { getMockDataSource, getViteDataSource, IDataSource } from \"../datasources\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\n\nconst logger = getLogger();\n\nexport class CommonContext {\n  private readonly _vite: ViteClient;\n  private _datasource: IDataSource;\n\n  constructor() {\n    this._vite = getViteClient();\n    this._datasource = getMockDataSource();\n  }\n\n  async initAsync(network: Network): Promise<void> {\n    await this.initViteClientAsync(network);\n    switch (network.id) {\n      case 3:\n        this._datasource = getMockDataSource();\n        break;\n      default:\n        this._datasource = getViteDataSource();\n        break;\n    }\n    await this._datasource.initAsync(network);\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing CommonContext\")();\n    this._datasource.dispose();\n    this._vite.dispose();\n  }\n\n  get datasource(): IDataSource {\n    return this._datasource;\n  }\n\n  private async initViteClientAsync(network: Network): Promise<void> {\n    try {\n      await this._vite.initAsync(network);\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n}\n\nconst context = new CommonContext();\n\nexport const getCommonContext = () => {\n  return context;\n}","import { gql } from \"@apollo/client\";\nimport { ApolloContext } from \"../clients/apollo.client\";\n\nexport const DEPOSIT_MUTATION = gql`\nmutation Deposit($id: ID!, $tokenId: String!, $amount: String!) {\n  deposit(id: $id, tokenId: $tokenId, amount: $amount) @client\n}\n`;\n\nexport const WITHDRAW_MUTATION = gql`\nmutation Withdraw($id: ID!, $amount: String!) {\n  withdraw(id: $id, amount: $amount) @client\n}\n`;\n\nexport const PoolMutations = {\n  async deposit(parent: any, { id, tokenId, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.depositAsync(Number(id), tokenId, amount);\n  },\n  async withdraw(parent: any, { id, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.withdrawAsync(Number(id), amount);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_ACCOUNT_BALANCE_QUERY = gql`\n  query GetAccountBalance($account: String) {\n    accountBalance(account: $account) @client\n  }\n`;\n\nexport const AccountQueries = {\n  async accountBalance(parent: any, { account }: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getAccountBalanceAsync(account);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_NETWORK_BLOCK_HEIGHT_QUERY = gql`\n  query GetNetworkBlockHeight {\n    networkBlockHeight @client\n  }\n`;\n\nexport const NetworkQueries = {\n  async networkBlockHeight(parent: any, params: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getNetworkBlockHeightAsync();\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Token } from '../util/types';\n\nexport const TOKEN_FIELDS = gql`\n  fragment TokenFields on Token {\n    id\n    name\n    symbol\n    originalSymbol\n    decimals\n    iconUrl\n    url\n  }\n`;\n\nexport const GET_TOKEN_QUERY = gql`\n  ${TOKEN_FIELDS}\n  query GetToken($id: ID!) {\n    token(id: $id) @client {\n      ...TokenFields\n    }\n  }\n`;\n\nexport const TokenQueries = {\n  async token(parent: any, { id }: any, context: ApolloContext): Promise<Token> {\n    return context.client.datasource.getTokenAsync(id);\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Pool, PoolUserInfo } from '../util/types';\nimport { TOKEN_FIELDS } from './token';\n\nexport const POOL_FIELDS = gql`\n  fragment PoolFields on Pool {\n    id\n    stakingToken {\n      ...TokenFields\n    }\n    rewardToken {\n      ...TokenFields\n    }\n    apr\n    totalStaked\n    totalRewards\n    startBlock\n    endBlock\n    endTimestamp\n    latestRewardBlock\n    rewardPerPeriod\n    rewardPerToken\n    paidOut\n    userInfo {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const POOL_USER_INFO_FIELDS = gql`\n  fragment PoolUserInfoFields on PoolUserInfo {\n    id\n    poolId\n    account\n    stakingBalance\n    rewardDebt\n  }\n`;\n\nexport const GET_POOL_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPool($id: ID!, $account: String) {\n    pool(id: $id, account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_POOLS_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPools($account: String) {\n    pools(account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_TOTAL_POOLS_QUERY = gql`\n  query GetTotalPools {\n    totalPools @client\n  }\n`;\n\nexport const GET_POOL_USER_INFO_QUERY = gql`\n  ${POOL_USER_INFO_FIELDS}\n  query GetPoolUserInfo($poolId: Int!, $account: String) {\n    poolUserInfo(poolId: $poolId, account: $account) @client {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const PoolQueries = {\n  async pool(parent: any, { id, account }: any, context: ApolloContext): Promise<Pool> {\n    return context.client.datasource.getPoolAsync(Number(id), account);\n  },\n  async pools(parent: any, { account }: any, context: ApolloContext): Promise<Pool[]> {\n    return context.client.datasource.getPoolsAsync(account);\n  },\n  async totalPools(parent: any, params: any, context: ApolloContext): Promise<number> {\n    return await context.client.datasource.getTotalPoolsAsync();\n  },\n  async poolUserInfo(parent: any, { poolId, account }: any, context: ApolloContext): Promise<Maybe<PoolUserInfo>> {\n    return context.client.datasource.getPoolUserInfoAsync(Number(poolId), account);\n  }\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { GraphQLScalarType } from 'graphql';\nimport { getCommonContext } from '../contexts/common';\nimport { IDataSource } from '../datasources';\nimport { PoolMutations } from '../mutations';\nimport { NetworkQueries, PoolQueries, TokenQueries } from '../queries';\nimport { AccountQueries } from '../queries/account';\n\nexport type ApolloContext = {\n  cache: InMemoryCache,\n  client: ApolloClientWrapper,\n  clientAwareness: any,\n  getCacheKey: (obj: any) => string | undefined\n}\n\nexport class ApolloClientWrapper extends ApolloClient<NormalizedCacheObject> {\n  get datasource(): IDataSource {\n    return getCommonContext().datasource;\n  }\n}\n\nconst cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n      }\n    }\n  }\n});\n\nconst bigNumberScalar = new GraphQLScalarType({\n  name: 'BigNumber',\n  description: 'BigNumber custom scalar type',\n  serialize(value: BigNumber) {\n    return value.toString();\n  },\n  parseValue(value: string) {\n    return new BigNumber(value);\n  }\n});\n\nconst resolvers: any = {\n  BigNumber: bigNumberScalar,\n  Query: {\n    ...AccountQueries,\n    ...NetworkQueries,\n    ...PoolQueries,\n    ...TokenQueries\n  },\n  Mutation: {\n    ...PoolMutations\n  }\n};\n\n// https://www.apollographql.com/docs/react/networking/authentication/#header\nconst client = new ApolloClientWrapper({\n  // link: authLink.concat(httpLink),\n  cache: cache,\n  resolvers,\n  headers: {\n    'client-name': process.env.REACT_APP_NAME || 'client',\n    'client-version': process.env.REACT_APP_VERSION || '0',\n  },\n})\n\nexport const getApolloClient = () => {\n  return client;\n}","import BigNumber from \"bignumber.js\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\nimport { Networks } from \"./constants\";\n\nconst logger = getLogger();\n\nexport class NetworkManager {\n  private _networkHeight: BigNumber;\n  private _network?: Maybe<Network>;\n  private _setNetworkCallback?: (network?: Maybe<Network>) => void;\n\n  constructor() {\n    this._networkHeight = new BigNumber(0);\n  }\n\n  set networkHeight(height: BigNumber) {\n    this._networkHeight = height;\n  }\n\n  get networkHeight(): BigNumber {\n    return this._networkHeight;\n  }\n\n  set onSetNetworkCallback(cb: (network?: Maybe<Network>) => void) {\n    this._setNetworkCallback = cb;\n  }\n\n  getNetwork(): Maybe<Network> {\n    return this._network;\n  }\n\n  setNetwork(network?: Maybe<Network>): void {\n    this._network = network;\n    if (this._setNetworkCallback) {\n      this._setNetworkCallback(this._network);\n    }\n  }\n\n  getNetworks(): Network[] {\n    try {\n      const ids = process.env.REACT_APP_NETWORKS?.split(\",\").map(e => Number(e));\n      return Networks.filter(e => ids?.includes(e.id))\n    } catch (error) {\n      logger.error(error)\n    }\n    return Networks;\n  }\n}\n\nconst manager = new NetworkManager();\n\nexport const getNetworkManager = () => {\n  return manager;\n}","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\n\nexport const LightTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}));\n\nexport const BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nexport const HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}));","import CropSquareIcon from '@mui/icons-material/CropSquare';\nimport { Box, Chip, Grid, Typography } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\n\nexport const Footer: React.FC = () => {\n  const [networkBlockHeight, setNetworkBlockHeight] = useState(new BigNumber(0))\n  const [rotated, setRotated] = useState(false)\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (height: BigNumber) => {\n      const heightString = height.toString();\n      let heightRef = height;\n      if (heightString.length > 1) {\n        heightRef = new BigNumber(heightString.substr(heightString.length - 1, heightString.length))\n      }\n      setRotated(heightRef.mod(2).eq(0));\n      setNetworkBlockHeight(height);\n    }\n    emitter.on(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    };\n  }, [emitter]);\n\n  return (\n    <Box sx={{ py: \"10px\", px: \"24px\" }}>\n      <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <BootstrapTooltip title=\"Network block height\" placement=\"top\" arrow>\n            <Typography variant=\"caption\" sx={{ verticalAlign: \"middle\", display: \"inline-flex\" }}>\n              <CropSquareIcon sx={{\n                color: \"gray\",\n                mr: \"2px\",\n                transform: rotated ? \"rotate(45deg)\" : \"rotate(0deg)\",\n                fontSize: \"17px\"\n              }} />\n              {networkBlockHeight.toString()}\n            </Typography>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip title=\"Version\" placement=\"top\" arrow>\n            <Chip label={'v' + process.env.REACT_APP_VERSION} variant=\"outlined\" size=\"small\" />\n          </BootstrapTooltip>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n","import React from 'react';\nimport { AppBar, styled, Toolbar, Typography } from '@mui/material';\nimport { CommonConstants } from '../../../../common/constants';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`,\n);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`,\n);\n\nexport const HeaderLoading: React.FC = (props: any) => {\n  return (\n    <Root>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <img src={\"./logo_white.png\"} alt=\"logo\" width=\"30\" /> */}\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n          </TitleTypography>\n        </Toolbar>\n      </AppBar>\n    </Root>\n  )\n}","import { Container, styled } from '@mui/material';\nimport * as React from 'react';\n\nconst MainScrollStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: center;\n  padding-bottom: 15px;\n  padding-top: 30px;\n  overflow: auto;\n  overflow-x: hidden;\n`,\n);\n\nconst MainScrollInner = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`,\n);\n\nexport const MainScroll: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return (\n    <MainScrollStyled {...restProps}>\n      <Container maxWidth=\"lg\">\n        <MainScrollInner>{children}</MainScrollInner>\n      </Container>\n    </MainScrollStyled>\n  )\n}\n","import { styled } from '@mui/material';\nimport React from 'react';\n\nconst MainWrapperStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`,\n);\n\nexport const MainWrapper: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\n}\n","import React, { useState } from 'react';\nimport { getNetworkManager } from '../common/network';\nimport { Network } from '../util/types';\nimport { getWalletManager, SessionWallet, WebWallet } from '../wallet';\n\nexport interface IWeb3Context {\n  setError: (error: Error) => void,\n  error?: Maybe<Error>,\n  wallet?: Maybe<WebWallet | SessionWallet>\n  network?: Maybe<Network>\n}\n\nconst Web3Context = React.createContext<Maybe<IWeb3Context>>(undefined)\n\nexport const useWeb3Context = () => {\n  const context = React.useContext(Web3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\nexport const Web3Provider: React.FC<Props> = (props: Props) => {\n  const [error, setError] = useState<Maybe<Error>>(null)\n  const [wallet, setWallet] = useState<Maybe<WebWallet | SessionWallet>>(null)\n  const [network, setNetwork] = useState<Maybe<Network>>(null)\n\n  const walletManager = getWalletManager()\n  walletManager.onSetWalletCallback = setWallet\n\n  const networkManager = getNetworkManager()\n  networkManager.onSetNetworkCallback = setNetwork\n\n  const context: IWeb3Context = {\n    setError,\n    error,\n    wallet,\n    network\n  }\n\n  return (\n    <Web3Context.Provider value={context}>{props.children}</Web3Context.Provider>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Networks } from '../common/constants';\nimport { getNetworkManager } from '../common/network';\nimport { MainLoading } from '../features/main/components/loading';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\nimport { getWalletManager } from '../wallet';\nimport { getCommonContext } from './common';\nimport { useWeb3Context } from './web3';\n\nconst logger = getLogger()\n\nexport interface IConnectedWeb3Context {\n  account?: string\n  network?: Maybe<Network>\n  logout: () => void\n}\n\nconst ConnectedWeb3Context = React.createContext<Maybe<IConnectedWeb3Context>>(undefined)\n\n/**\n * This hook can only be used by components under the `ConnectedWeb3` component. Otherwise it will throw.\n */\nexport const useConnectedWeb3Context = () => {\n  const context = React.useContext(ConnectedWeb3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\n/**\n * Component used to render components that depend on Web3 being available. These components can then\n * `useConnectedWeb3Context` safely to get web3 stuff without having to null check it.\n */\nexport const ConnectedWeb3: React.FC<Props> = (props: Props) => {\n  const [connection, setConnection] = useState<IConnectedWeb3Context | null>(null)\n  const web3Context = useWeb3Context()\n  const commonContext = getCommonContext()\n\n  const { wallet, network } = web3Context\n\n  useEffect(() => {\n    if (!wallet) {\n      const walletManager = getWalletManager()\n      walletManager.initWallet()\n    }\n  }, [wallet])\n\n  useEffect(() => {\n    if (!network) {\n      const networkManager = getNetworkManager()\n      const networkId = Number(process.env.REACT_APP_DEFAULT_NETWORK ?? \"2\");\n      networkManager.setNetwork(Networks.find(e => e.id === networkId))\n      logger.info(\"Network:\", networkManager.getNetwork())()\n    }\n  }, [network])\n\n  const logout = useCallback(() => {\n    const walletManager = getWalletManager()\n    walletManager.removeWallet()\n    window.location.reload()\n  }, [])\n\n  useEffect(() => {\n    const value = {\n      account: wallet?.active?.address,\n      network,\n      logout\n    }\n\n    logger.info('ConnectedWeb3.account', wallet?.active?.address)()\n\n    const initAsync = async () => {\n      if (network) {\n        logger.info('Init ConnectedWeb3')()\n        try {\n          setConnection(null)\n          await commonContext.initAsync(network)\n          setConnection(value)\n        } catch (error) {\n          logger.error(error)();\n        }\n      }\n    }\n    initAsync()\n    return () => {\n      commonContext.dispose()\n    }\n  }, [wallet, network, logout, commonContext])\n\n  if (!connection) {\n    return MainLoading()\n  }\n\n  const value = {\n    ...connection\n  }\n\n  return (\n    <ConnectedWeb3Context.Provider value={value}>{props.children}</ConnectedWeb3Context.Provider>\n  )\n}","\nimport { Typography } from '@mui/material';\nimport { Footer } from '../../../layout/components/footer';\nimport { HeaderLoading } from '../../../layout/components/header-loading';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\n\nexport const MainLoading = () => {\n\n  return (\n    <MainWrapper>\n      <HeaderLoading />\n      <MainScroll>\n        <Typography>Loading...</Typography>\n      </MainScroll>\n      <Footer />\n    </MainWrapper>\n  )\n}\n","import { CommonUtil } from './common.util';\n\nexport abstract class FormatUtil {\n  static formatMessage(data: any): string {\n    const defaultMessage = \"Something went wrong.\"\n    if (data) {\n      console.log(data)\n      let message: string\n      if (!CommonUtil.isString(data)) {\n        if (data.message) {\n          message = data.message\n        }\n        else if (data.error?.message) {\n          message = data.error.message\n        } else if (data.graphQLErrors) {\n          if (data.graphQLErrors.length > 0) {\n            message = data.graphQLErrors[0].message\n          } else {\n            message = defaultMessage\n          }\n        } else {\n          message = JSON.stringify(data)\n          if (message === \"{}\") {\n            message = defaultMessage\n          }\n        }\n      } else {\n        message = data\n      }\n      if (message.length > 128) {\n        return message.substr(0, 128) + \"...\"\n      }\n      return message\n    }\n    return defaultMessage\n  }\n}","import { ProviderContext } from \"notistack\";\nimport { FormatUtil } from \"./format.util\";\n\nexport abstract class SnackbarUtil {\n  static snackbar: ProviderContext;\n  static enqueueError(error: any): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(FormatUtil.formatMessage(error));\n  }\n  static enqueueMessage(message: string): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(message);\n  }\n}","import React, { useEffect, useRef } from 'react';\nimport { qrcode, modes, ecLevel } from 'qrcode.es';\n\ninterface Props {\n  text?: string\n}\n\nexport const QrCode: React.FC<Props> = (props: Props) => {\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const defaultOpt = {\n      size: 240,\n      ecLevel: ecLevel.HIGH,\n      minVersion: 4,\n      background: '#fff',\n      mode: modes.DRAW_WITH_IMAGE_BOX,\n      radius: 0,\n      image: process.env.PUBLIC_URL + '/icon.png',\n      mSize: 0.3\n    };\n\n    if (props.text && elementRef.current) {\n      elementRef.current.innerHTML = ''\n      const q = new qrcode(elementRef.current);\n      q.generate(props.text, defaultOpt).then(() => {\n        console.log('QR code generated')\n      });\n    }\n  }, [props.text])\n\n  return (\n    <div ref={elementRef}></div>\n  );\n}\n","import { Dialog, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect } from 'react';\nimport { getViteClient } from '../../../../clients/vite.client';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { QrCode } from '../qrcode';\n\ninterface Props {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  onClose: () => void;\n}\n\nexport const LoginDialog: React.FC<Props> = (props: Props) => {\n  const { onClose, open, setOpen } = props;\n  const viteClient = getViteClient();\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConnectWalletDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConnectWalletDialog, handleEvent)\n    };\n  }, [emitter, setOpen]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  if (!viteClient.connector) {\n    return (\n      <>\n      </>\n    )\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={open} maxWidth=\"xs\">\n      <DialogTitle>Connect Wallet</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Scan the QR code via Vite Wallet App\n        </DialogContentText>\n        <Box sx={{ mt: 2, textAlign: \"center\" }}>\n          <QrCode text={viteClient.connector?.uri}></QrCode>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import { FormControl, MenuItem, Select, SelectChangeEvent, styled } from '@mui/material';\nimport React, { useState } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { Network } from '../../../../util/types';\n\nconst NetworksFormControl = styled(FormControl)(\n  ({ theme }) => ({\n    margin: theme.spacing(1),\n    '& > div > div': {\n      color: theme.palette.common.white\n    },\n    '& .MuiSvgIcon-root': {\n      color: theme.palette.common.white\n    }\n  }));\n\nexport const NetworkList: React.FC = () => {\n  const networkManager = getNetworkManager()\n  const networks = networkManager.getNetworks()\n  const [network, setNetwork] = useState<Maybe<Network>>(networkManager.getNetwork())\n\n  const handleChange = (event: SelectChangeEvent) => {\n    const selectedNetwork = networks.find(e => e.id.toString() === event.target.value)\n    if (selectedNetwork) {\n      setNetwork(selectedNetwork)\n      networkManager.setNetwork(selectedNetwork)\n    }\n  }\n\n  return (\n    networks.length > 0 ? (\n      <NetworksFormControl variant=\"outlined\" size=\"small\">\n        <Select\n          labelId=\"select-network-label\"\n          id=\"select-network-label\"\n          value={network?.id.toString()}\n          onChange={handleChange}\n          className=\"MuiSelect-root\"\n        >\n          {networks.map(e => {\n            return (\n              <MenuItem key={e.id.toString()} value={e.id.toString()}>{e.name}</MenuItem>\n            )\n          })}\n        </Select>\n      </NetworksFormControl>\n    ) : (\n      <></>\n    )\n  );\n}","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { AppBar, Button, Chip, styled, Toolbar, tooltipClasses, Typography } from '@mui/material';\nimport React from 'react';\nimport { CommonConstants } from '../../../../common/constants';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\nimport { LoginDialog } from '../../../main/components/login';\nimport { NetworkList } from '../../../main/components/network-list';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`);\n\nexport const Header: React.FC = (props: any) => {\n  const context = useConnectedWeb3Context();\n  const [loginOpen, setLoginOpen] = React.useState(false);\n\n  const handleClickLogin = () => {\n    setLoginOpen(true);\n  };\n\n  const handleClickLogout = () => {\n    context.logout();\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen(false);\n  };\n\n  const truncateAddress = (address?: string) => {\n    return CommonUtil.truncateStringInTheMiddle(address, 10, 5)\n  }\n\n  return (\n    <Root>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <img src={\"./icon_white.png\"} alt=\"logo\" width=\"30\" />\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n          </TitleTypography>\n          <NetworkList></NetworkList>\n          {context.account ? (\n            <>\n              <BootstrapTooltip sx={{ [`& .${tooltipClasses.tooltip}`]: { maxWidth: \"none\" } }} title={context.account} placement=\"bottom\" arrow>\n                <Chip sx={{ color: \"white\", '& .MuiChip-icon': { color: \"white\" } }} icon={<AccountCircleIcon />} label={truncateAddress(context.account)} variant=\"outlined\" />\n              </BootstrapTooltip >\n              <Button color=\"inherit\" onClick={handleClickLogout}>\n                Logout\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button color=\"inherit\" onClick={handleClickLogin}>\n                Login\n              </Button>\n              <LoginDialog open={loginOpen} setOpen={setLoginOpen} onClose={handleLoginClose}></LoginDialog>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Root >\n  )\n}","import React from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { CommonUtil } from '../../../../util/common.util';\n\ninterface Props {\n  message: string\n  type: 'default' | 'warning'\n  error?: any\n  color?: string\n  backgroundColor?: string\n}\n\nexport const Alert: React.FC<Props> = (props: Props) => {\n  let color = '#000000';\n  let backgroundColor = 'rgba(255, 255, 255, 0.5)';\n\n  switch (props.type) {\n    case 'warning':\n      color = '#611a15';\n      backgroundColor = 'rgba(255, 0, 0, 0.1)';\n      break;\n    default:\n      break;\n  }\n\n  if (props.error) {\n    console.log(CommonUtil.toJsonString(props.error));\n  }\n\n  return (\n    <Paper>\n      <Box sx={{\n        color: props.color ?? color,\n        backgroundColor: props.backgroundColor ?? backgroundColor,\n        padding: '15px',\n        textAlign: 'center'\n      }}>\n        <Typography>{props.message}</Typography>\n      </Box>\n    </Paper>\n  );\n}\n","import { Checkbox, FormControl, FormControlLabel, FormGroup, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack, Switch, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { DefaultPoolFilterValues, PoolSortTypes } from \"../../../../common/constants\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { PoolFilterValues } from \"../../../../util/types\";\n\nexport const PoolFilter: React.FC = () => {\n  const [values, setValues] = useState<PoolFilterValues>(DefaultPoolFilterValues);\n  const emitter = getEmitter();\n\n  const emitEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n    emitter.emitPoolFilterValuesChanged(oldValues, newValues);\n  }\n\n  const handleSortByChange = (event: SelectChangeEvent) => {\n    const newValues = { ...values, sortBy: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleCheckedChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.checked };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mb: 2 }}>\n      <Grid item xs={12} md={10}>\n        <Grid container>\n          <Grid item xs sx={{ mr: 2 }}>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControlLabel control={<Checkbox\n                  checked={values.stakedOnly}\n                  onChange={handleCheckedChange('stakedOnly')} />} label=\"Staked only\" />\n                <Stack direction=\"row\" alignItems=\"center\" >\n                  <Typography>Ended</Typography>\n                  <Switch checked={values.showLive} onChange={handleCheckedChange('showLive')} />\n                  <Typography>Live</Typography>\n                </Stack>\n              </Stack>\n            </FormGroup>\n          </Grid>\n          <Grid item>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControl size=\"small\" sx={{ minWidth: \"120px\" }}>\n                  <InputLabel id=\"sortby-select-label\">Sort by</InputLabel>\n                  <Select\n                    labelId=\"sortby-select-label\"\n                    id=\"sortby-select\"\n                    value={values.sortBy}\n                    label=\"Sort by\"\n                    onChange={handleSortByChange}\n                  >\n                    {PoolSortTypes.map(e => (\n                      <MenuItem key={e.type} value={e.type}>{e.name}&nbsp;</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  id=\"search\"\n                  value={values.search}\n                  label=\"Search\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  autoComplete=\"off\"\n                  onChange={handleChange('search')}\n                />\n              </Stack>\n            </FormGroup>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { MomentUtil } from \"../util/moment.util\";\n\nexport class MomentFactory {\n  private readonly _map: Map<string, MomentUtil>\n\n  constructor() {\n    this._map = new Map<string, MomentUtil>();\n  }\n\n  create(locale?: Maybe<string>): MomentUtil {\n    const _locale = locale ?? navigator.language;\n    let util = this._map.get(_locale);\n    if (!util) {\n      util = new MomentUtil(_locale);\n      this._map.set(_locale, util);\n    }\n    return util;\n  }\n}\n\nconst factory = new MomentFactory();\n\nexport const getMomentFactory = (): MomentFactory => {\n  return factory;\n}","import { orderBy, partition } from \"lodash\";\nimport { PoolSortTypes } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories/moment.factory\";\nimport { Pool, PoolFilterValues, PoolSortType } from \"./types\";\n\nexport abstract class FilterUtil {\n  static filterPools(filter: PoolFilterValues, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools) {\n      return pools;\n    }\n    const moment = getMomentFactory().create();\n    const [closedPools, openPools] = partition(pools, (pool) => pool.endTimestamp >= 0 && moment.get().unix() >= pool.endTimestamp);\n    let filtered: Pool[] = openPools;\n    if (filter.showLive) {\n      if (filter.stakedOnly) {\n        filtered = openPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = openPools;\n      }\n    } else {\n      if (filter.stakedOnly) {\n        filtered = closedPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = closedPools;\n      }\n    }\n    const sorted = FilterUtil.sortPools(filter.sortBy, filtered);\n    return FilterUtil.searchPools(filter.search, sorted);\n  }\n\n  static sortPools(sortBy: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !sortBy) {\n      return pools;\n    }\n    switch (sortBy) {\n      case PoolSortTypes[PoolSortType.APR].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.apr?.toNumber() ?? 0,\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.TOTAL_STAKED].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.totalStaked.toNumber(),\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.DEFAULT].type:\n      default:\n        return pools;\n    }\n  }\n\n  static searchPools(term: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !term) {\n      return pools;\n    }\n    const lowerCaseTerm = term.toLowerCase();\n    return pools.filter((pool: Pool) =>\n      pool.rewardToken.originalSymbol.toLowerCase().includes(lowerCaseTerm) || pool.stakingToken.originalSymbol.toLowerCase().includes(lowerCaseTerm)\n    );\n  }\n}","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { CommonConstants } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories\";\nimport { DEPOSIT_MUTATION, WITHDRAW_MUTATION } from \"../mutations\";\nimport { Deposit, DepositVariables } from \"../mutations/__generated__/Deposit\";\nimport { Withdraw, WithdrawVariables } from \"../mutations/__generated__/Withdraw\";\nimport { GET_POOL_QUERY, GET_POOL_USER_INFO_QUERY } from \"../queries\";\nimport { GetPool, GetPoolVariables } from \"../queries/__generated__/GetPool\";\nimport { GetPoolUserInfo, GetPoolUserInfoVariables } from \"../queries/__generated__/GetPoolUserInfo\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { Pool } from \"../util/types\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class PoolService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n  private readonly _moment: MomentUtil;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n    this._moment = getMomentFactory().create();\n  }\n\n  async getAsync(_id: number, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<Maybe<Pool>> {\n    try {\n      const poolQuery = await this._apollo.query<GetPool, GetPoolVariables>({\n        query: GET_POOL_QUERY,\n        variables: {\n          id: _id.toString()\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const userInfoQuery = await this._apollo.query<GetPoolUserInfo, GetPoolUserInfoVariables>({\n        query: GET_POOL_USER_INFO_QUERY,\n        variables: {\n          poolId: _id,\n          account: this._walletManager.getActiveAccount()?.address\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const pool = poolQuery.data.pool as unknown as Pool;\n      return {\n        ...pool,\n        userInfo: userInfoQuery.data.poolUserInfo,\n        fetchTimestamp: this._moment.get().unix()\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Deposit, DepositVariables>({\n      mutation: DEPOSIT_MUTATION,\n      variables: {\n        id: _id.toString(),\n        tokenId: _tokenId,\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.deposit ?? false);\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Withdraw, WithdrawVariables>({\n      mutation: WITHDRAW_MUTATION,\n      variables: {\n        id: _id.toString(),\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.withdraw ?? false);\n  }\n\n  updateRewardPerToken(pool: Maybe<Pool>, blockNumber: BigNumber): boolean {\n    if (!pool?.userInfo) {\n      return false;\n    }\n\n    const latestBlock = blockNumber.lt(pool.endBlock) ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock.lte(pool.latestRewardBlock)) {\n      return false;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(new BigNumber(0))) {\n      pool.latestRewardBlock = latestBlock;\n      return true;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n    return true;\n  }\n}\n\nconst service = new PoolService();\n\nexport const getPoolService = () => {\n  return service;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { Pool } from \"./types\";\n\nexport abstract class ViteUtil {\n  static calculateRewardTokens(pool: Maybe<Pool>): BigNumber {\n    if (!pool?.userInfo) {\n      return new BigNumber(0);\n    }\n    return (pool.userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(pool.userInfo.rewardDebt));\n  }\n\n  static formatBigNumber(bn: BigNumber, tokenDecimals: number, decimals: number): string {\n    return bn.div(new BigNumber(10).pow(tokenDecimals)).decimalPlaces(decimals, BigNumber.ROUND_DOWN).toFormat();\n  }\n}","import { LoadingButton } from '@mui/lab';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode\n  size?: 'small' | 'medium' | 'large'\n  variant?: 'text' | 'outlined' | 'contained'\n  color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning',\n  fullWidth?: boolean\n  autoFocus?: boolean\n  disabled?: boolean\n  callbackFn: () => Promise<void>\n}\n\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\n  const [isDisabled, setIsDisabled] = React.useState(false)\n\n  const handleClick = async () => {\n    setIsDisabled(true)\n    try {\n      await props.callbackFn()\n    } catch (error) {\n      console.log(error)\n    }\n    setIsDisabled(false)\n  }\n\n  return (\n    <LoadingButton\n      loading={isDisabled}\n      size={props.size ?? \"small\"}\n      variant={props.variant ?? \"contained\"}\n      color={props.color ?? \"primary\"}\n      fullWidth={props.fullWidth}\n      onClick={handleClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </LoadingButton>\n  );\n}\n","import { Skeleton, Typography } from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getMomentFactory } from \"../../../../factories\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  pool: Maybe<Pool>\n}\n\nexport const PoolCountdown: React.FC<Props> = (props: Props) => {\n  const [hasStarted, setHasStarted] = useState<boolean>(false);\n  const [remainingBlocks, setRemainingBlocks] = useState<BigNumber>(new BigNumber(0));\n  const [countdown, setCountdown] = useState<string>(\"\");\n  const moment = useMemo(() => getMomentFactory().create(), []);\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (props.pool?.endBlock) {\n        let remainingBlocks = new BigNumber(0);\n        if (height.lte(props.pool.startBlock)) {\n          setHasStarted(false);\n          remainingBlocks = props.pool.startBlock.minus(height);\n        } else {\n          setHasStarted(true);\n          remainingBlocks = props.pool.endBlock.minus(height);\n        }\n        if (remainingBlocks.gte(0)) {\n          setRemainingBlocks(remainingBlocks);\n          const duration = moment.getDuration(remainingBlocks.toNumber());\n          if (duration.days() > 0) {\n            setCountdown(duration.days() + \" days \" + duration.hours() + \" hours\")\n          } else if (duration.hours() > 0) {\n            setCountdown(duration.hours() + \" hours \" + duration.minutes() + \" minutes\")\n          } else if (duration.minutes() > 0) {\n            setCountdown(duration.minutes() + \" minutes \" + duration.seconds() + \" seconds\")\n          } else {\n            setCountdown(duration.seconds() + \" seconds\")\n          }\n        } else {\n          setRemainingBlocks(new BigNumber(0));\n          setCountdown(\"\");\n        }\n      }\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, moment, networkManager]);\n\n  return (\n    <>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {hasStarted ? 'Ends in' : 'Starts in'}\n      </Typography>\n      {!props.pool ? (\n        <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n      ) : (\n        <>\n          {remainingBlocks.gt(0) ? (\n            <Typography variant=\"subtitle1\">\n              {remainingBlocks.toString()} Blocks\n              <Typography variant=\"body2\" color=\"text.secondary\" display=\"inline\" sx={{ ml: 1 }}>\n                {countdown}\n              </Typography>\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">-</Typography>\n          )}\n        </>\n      )}\n    </>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport { BigNumber } from 'bignumber.js';\nimport React, { useEffect, useState } from 'react';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDepositDialog: React.FC<Props> = (props: Props) => {\n  const [amount, setAmount] = useState<string>(\"\");\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(\"\")\n    }\n  }, [props.state])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.depositAsync(props.pool.id, props.pool.stakingToken.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Stake</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Earn {props.pool.rewardToken.originalSymbol} by staking {props.pool.stakingToken.originalSymbol}\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { GET_ACCOUNT_BALANCE_QUERY } from \"../queries\";\nimport { GetAccountBalance, GetAccountBalanceVariables } from \"../queries/__generated__/GetAccountBalance\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { getLogger } from \"../util/logger\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class AccountService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n  }\n\n  async getBalanceAsync(_account?: Maybe<string>, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<BigNumber> {\n    try {\n      const account = _account ?? this._walletManager.getActiveAccount()?.address;\n      if (!account || CommonUtil.isNullOrWhitespace(account)) {\n        return new BigNumber(0);\n      }\n      const poolQuery = await this._apollo.query<GetAccountBalance, GetAccountBalanceVariables>({\n        query: GET_ACCOUNT_BALANCE_QUERY,\n        variables: {\n          account\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const balance = poolQuery.data.accountBalance as unknown as BigNumber;\n      return balance;\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst service = new AccountService();\n\nexport const getAccountService = () => {\n  return service;\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { getAccountService } from '../../../../services/account.service';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { getLogger } from '../../../../util/logger';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ViteUtil } from '../../../../util/vite.util';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\nconst logger = getLogger();\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolWithdrawDialog: React.FC<Props> = (props: Props) => {\n  const getStakedAmount = useCallback(() => {\n    if (props.pool.userInfo?.stakingBalance.gt(0)) {\n      return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, 18).replace(',', '')\n    }\n    return \"\"\n  }, [props.pool])\n\n  const [amount, setAmount] = useState<string>(getStakedAmount());\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const accountService = getAccountService();\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(getStakedAmount())\n    }\n  }, [props.state, getStakedAmount])\n\n  useEffect(() => {\n    async function getBalanceAsync() {\n      const balance = await accountService.getBalanceAsync();\n      logger.info(\"Account balance:\", balance.toString())();\n    }\n    if (props.state.open) {\n      getBalanceAsync();\n    }\n  }, [props.state, accountService])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.withdrawAsync(props.pool.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Withdraw</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Enter the {props.pool.stakingToken.originalSymbol} amount to withdraw.\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import * as React from 'react';\nimport { Pool, PoolDialogState, PoolDialogType } from '../../../../util/types';\nimport { PoolDepositDialog } from '../dialog-deposit';\nimport { PoolWithdrawDialog } from '../dialog-withdraw';\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDialog: React.FC<Props> = (props: Props) => {\n  switch (props.state.type) {\n    case PoolDialogType.WITHDRAW:\n      return <PoolWithdrawDialog pool={props.pool} state={props.state} setState={props.setState}></PoolWithdrawDialog>\n    case PoolDialogType.DEPOSIT:\n      return <PoolDepositDialog pool={props.pool} state={props.state} setState={props.setState}></PoolDepositDialog>\n    default:\n      return <></>\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getPoolService } from \"../../../../services/pool.service\";\nimport { Pool } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\n\ninterface Props {\n  pool: Maybe<Pool>\n  account?: Maybe<string>\n  decimals: number\n  setCanClaim?: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const Rewards: React.FC<Props> = (props: Props) => {\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const [rewardTokens, setRewardTokens] = useState<BigNumber>(new BigNumber(0));\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    setPool(props.pool);\n  }, [props.pool]);\n\n  useEffect(() => {\n    if (pool) {\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\n      setRewardTokens(newRewardTokens);\n      if (props.setCanClaim) {\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\n      }\n    } else {\n      setRewardTokens(new BigNumber(0));\n      if (props.setCanClaim) {\n        props.setCanClaim(false);\n      }\n    }\n  }, [pool, props]);\n\n  useEffect(() => {\n    if (pool) {\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\n      setRewardTokens(newRewardTokens);\n      if (props.setCanClaim) {\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\n      }\n    } else {\n      setRewardTokens(new BigNumber(0));\n      if (props.setCanClaim) {\n        props.setCanClaim(false);\n      }\n    }\n  }, [pool, props]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (pool) {\n        const updated = poolService.updateRewardPerToken(pool, height);\n        if (updated) {\n          const newPool: Pool = {\n            ...pool\n          }\n          setPool(newPool);\n        }\n      }\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [pool, poolService, networkManager]);\n\n  const showRewardTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(rewardTokens, pool.rewardToken.decimals, decimals);\n  }\n\n  return (\n    <>\n      {showRewardTokens(props.decimals)}\n    </>\n  );\n}","import { Avatar, Badge, Grid, Skeleton, styled, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { getCoinUtil } from \"../../../../util/coin.util\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  loading: boolean\n  pool: Maybe<Pool>\n}\n\nexport const Tokens: React.FC<Props> = (props: Props) => {\n  const BigCoin = styled(Avatar)(({ theme }) => ({\n    width: 50,\n    height: 50,\n    backgroundColor: \"white\",\n    border: \"1px solid black\"\n  }));\n  const SmallCoin = styled(Avatar)(({ theme }) => ({\n    width: 30,\n    height: 30,\n    backgroundColor: \"white\",\n    border: `1px solid ${theme.palette.grey[600]}`\n  }));\n  const coinUtil = getCoinUtil();\n\n  return (\n    <Grid container alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <Badge\n          overlap=\"circular\"\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n          badgeContent={\n            <SmallCoin alt={props.pool?.stakingToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.stakingToken.iconUrl)} />\n          }\n        >\n          <BigCoin alt={props.pool?.rewardToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.rewardToken.iconUrl)} />\n        </Badge>\n      </Grid>\n      <Grid item>\n        {props.loading ? (\n          <>\n            <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n            <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n          </>\n        ) : (\n          <>\n            <Typography variant=\"subtitle1\">\n              Earn {props.pool?.rewardToken.originalSymbol}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Stake {props.pool?.stakingToken.originalSymbol}\n            </Typography>\n          </>\n        )}\n      </Grid>\n    </Grid >\n  );\n}","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Grid, Link, Paper, Skeleton, styled, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from '../../../../common/network';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { getLogger } from \"../../../../util/logger\";\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState, PoolDialogType } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\nimport { PoolCountdown } from \"../countdown\";\nimport { PoolDialog } from \"../dialog\";\nimport { Rewards } from '../rewards';\nimport { Tokens } from \"../tokens\";\n\nconst logger = getLogger()\n\nconst TransparentPaper = styled(Paper)(\n  ({ theme }) => ({\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    backgroundColor: \"transparent\"\n  }));\n\ninterface Props {\n  account?: Maybe<string>\n  pool?: Maybe<Pool>\n}\n\nexport const PoolListItem: React.FC<Props> = (props: Props) => {\n  const [dialogState, setDialogState] = useState<PoolDialogState>({\n    type: PoolDialogType.DEPOSIT,\n    open: false\n  });\n  const [canStake, setCanStake] = useState<boolean>(false);\n  const [canClaim, setCanClaim] = useState<boolean>(false);\n  const [canWithdraw, setCanWithdraw] = useState<boolean>(false);\n  const emitter = getEmitter();\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n  const [expanded, setExpanded] = useState<boolean>(() => {\n    if(!props.pool)return true\n    return localStorage.getItem(\n      `${networkManager.getNetwork()?.contract}.${props.pool?.id}.expanded`\n    ) !== \"false\"\n  })\n\n  useEffect(() => {\n    if (props.pool) {\n      logger.info(`Pool loaded: ${props.pool?.id}`)();\n      setCanWithdraw(!!props.pool && !!props.account && (props.pool.userInfo?.stakingBalance.gt(0) ?? false));\n    } else {\n      setCanWithdraw(false);\n    }\n  }, [props.pool, props.account]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setCanStake(!!props.pool && !!props.account);\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, props.account, networkManager]);\n\n  const showApr = (): Maybe<string> => {\n    if (!props.pool || !props.pool.apr) {\n      return \"0\";\n    }\n    return props.pool.apr.toFormat(2);\n  }\n\n  const showTotalStaked = (): string => {\n    if (!props.pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.totalStaked, props.pool.stakingToken.decimals, 2);\n  }\n\n  const showStaked = (decimals: number): string => {\n    if (!props.pool?.userInfo) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, decimals);\n  }\n\n  const handleConnectWallet = () => {\n    emitter.emitConnectWalletDialog(true);\n  }\n\n  const handleClickDeposit = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.DEPOSIT,\n      open: true\n    })\n  }\n\n  const handleClickWithdraw = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.WITHDRAW,\n      open: true\n    })\n  }\n\n  const handleClickClaimAsync = async () => {\n    try {\n      if (props.pool) {\n        await poolService.withdrawAsync(props.pool.id, \"0\");\n      }\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <>\n      <Accordion expanded={expanded} onChange={(ev, expanded) => {\n        if(!props.pool)return\n        localStorage.setItem(\n          `${networkManager.getNetwork()?.contract}.${props.pool.id}.expanded`,\n          String(expanded)\n        )\n        setExpanded(expanded)\n      }}>\n        <AccordionSummary sx={{ backgroundColor: \"rgba(217, 217, 217, 0.1)\" }} expandIcon={<ExpandMoreIcon />}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item>\n              <Tokens loading={!props.pool} pool={props.pool}></Tokens>\n            </Grid>\n            <Grid item xs container alignItems=\"center\">\n              <Grid item xs container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item>\n                  {!props.pool ? (\n                    <>\n                      <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n                      <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n                    </>\n                  ) : (\n                    <>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {props.pool?.rewardToken.originalSymbol} earned\n                      </Typography>\n                      <Typography variant=\"subtitle1\">\n                        <Rewards pool={props.pool} decimals={4}></Rewards>\n                      </Typography>\n                    </>\n                  )}\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    APR\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"60px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {props.pool.apr ? (\n                        <>\n                          {showApr()}%\n                        </>\n                      ) : (\n                        <>\n                          -\n                        </>\n                      )}\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Total staked\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"120px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {showTotalStaked()}\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item>\n                  <PoolCountdown pool={props.pool} />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails sx={{ backgroundColor: \"rgba(217, 217, 217, 0.3)\", pt: 2 }}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item sx={{ mr: 4 }}>\n              <Link underline=\"none\" href={props.pool?.rewardToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                View {props.pool?.rewardToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n              </Link>\n              <Link underline=\"none\" href={props.pool?.stakingToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                View {props.pool?.stakingToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n              </Link>\n            </Grid>\n            <Grid item xs container alignItems=\"center\">\n              <Grid item container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item xs={12} md={6} lg={5} zeroMinWidth>\n                  <TransparentPaper variant=\"outlined\">\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {props.pool?.rewardToken.originalSymbol} earned\n                    </Typography>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      {!props.pool ? (\n                        <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                      ) : (\n                        <Typography sx={{ width: \"100%\" }} noWrap>\n                          <Rewards pool={props.pool} decimals={18} account={props.account} setCanClaim={setCanClaim}></Rewards>\n                        </Typography>\n                      )}\n                      <Box sx={{ ml: 2 }} >\n                        <ClickOnceButton variant=\"contained\" size=\"large\" callbackFn={handleClickClaimAsync} disabled={!canClaim}>\n                          Claim\n                        </ClickOnceButton>\n                      </Box>\n                    </Box>\n                  </TransparentPaper>\n                </Grid>\n                {!props.account ? (\n                  <Grid item xs={12} md={6} lg={5}>\n                    <TransparentPaper variant=\"outlined\">\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Start staking\n                      </Typography>\n                      <Button variant=\"contained\" size=\"large\" fullWidth disabled={!props.pool} onClick={handleConnectWallet}>Connect wallet</Button>\n                    </TransparentPaper>\n                  </Grid>\n                ) : (\n                  <>\n                    <Grid item xs={12} md={6} lg={5} zeroMinWidth>\n                      <TransparentPaper variant=\"outlined\">\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Staked\n                        </Typography>\n                        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                          {!props.pool ? (\n                            <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                          ) : (\n                            <Typography sx={{ width: \"100%\" }} noWrap>\n                              {showStaked(18)}\n                            </Typography>\n                          )}\n                          <Button variant=\"contained\" size=\"large\" sx={{ ml: 2 }} onClick={handleClickWithdraw} disabled={!canWithdraw}>\n                            Withdraw\n                          </Button>\n                        </Box>\n                      </TransparentPaper>\n                    </Grid>\n                    <Grid item xs={12} md sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      <Button variant=\"contained\" size=\"large\" fullWidth onClick={handleClickDeposit} disabled={!canStake}>\n                        Stake\n                      </Button>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n      {props.pool && (\n        <PoolDialog pool={props.pool} state={dialogState} setState={setDialogState}></PoolDialog>\n      )}\n    </>\n  );\n}","import { Grid } from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport { useEffect, useState } from \"react\";\nimport { DefaultPoolFilterValues } from \"../../../../common/constants\";\nimport { getCommonContext } from \"../../../../contexts/common\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { FilterUtil } from \"../../../../util/filter.util\";\nimport { getLogger } from \"../../../../util/logger\";\nimport { GlobalEvent, Pool, PoolFilterValues } from \"../../../../util/types\";\nimport { Alert } from \"../../../common/components/alert\";\nimport { PoolListItem } from \"../list-item\";\n\nconst logger = getLogger()\n\ninterface Props {\n  account?: Maybe<string>\n  pools?: Maybe<Pool[]>\n}\n\nexport const PoolList: React.FC<Props> = (props: Props) => {\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [allPools, setAllPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [pools, setPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [filter, setFilter] = useState<PoolFilterValues>(DefaultPoolFilterValues)\n  const emitter = getEmitter()\n  const commonContext = getCommonContext()\n\n  useEffect(() => {\n    if (props.pools) {\n      setIsLoading(false)\n    } else {\n      setIsLoading(true)\n    }\n    setAllPools(props.pools)\n  }, [props.pools])\n\n  useEffect(() => {\n    setPools(FilterUtil.filterPools(filter, allPools))\n  }, [allPools, filter])\n\n  useEffect(() => {\n    const handleEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n      setFilter(newValues)\n    }\n    emitter.on(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolFilterValuesChanged)()\n      emitter.off(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    };\n  }, [emitter])\n\n  useEffect(() => {\n    const replacePool = (pool: Pool) => {\n      if (allPools && pool) {\n        const index = allPools.findIndex(e => e.id === pool.id)\n        if (index >= 0) {\n          // Replace existing\n          const updatedPools = [...allPools]\n          updatedPools[index] = {\n            ...pool\n          }\n          setAllPools(updatedPools)\n        } else {\n          // Prepend to existing pools\n          setAllPools([pool, ...allPools])\n        }\n      }\n    }\n    const handlePoolEvent = async (id: number, amount: BigNumber, account: string) => {\n      const pool = await commonContext.datasource.getPoolAsync(id, props.account)\n      replacePool(pool)\n    }\n    emitter.on(GlobalEvent.PoolDeposit, handlePoolEvent)\n    emitter.on(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolDeposit)()\n      emitter.off(GlobalEvent.PoolDeposit, handlePoolEvent)\n      emitter.off(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    };\n  }, [emitter, allPools, commonContext, props.account])\n\n  if (!isLoading && pools && pools.length <= 0) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message=\"No pools found.\" type=\"default\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n      {isLoading ? (\n        <>\n          {[0, 1, 2].map((index: number) => (\n            <Grid item key={index} xs={12} md={10}>\n              <PoolListItem></PoolListItem>\n            </Grid>\n          ))}\n        </>\n      ) : (\n        <>\n          {pools?.map((p: Pool) => (\n            <Grid item key={p.id} xs={12} md={10}>\n              <PoolListItem account={props.account} pool={p}></PoolListItem>\n            </Grid>\n          ))}\n        </>\n      )}\n    </Grid>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { Container, Grid } from '@mui/material';\nimport React from 'react';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { GET_POOLS_QUERY } from '../../../../queries';\nimport { GetPools, GetPoolsVariables } from '../../../../queries/__generated__/GetPools';\nimport { Pool } from '../../../../util/types';\nimport { Alert } from '../../../common/components/alert';\nimport { PoolFilter } from '../filter';\nimport { PoolList } from '../list';\n\nexport const Pools: React.FC = () => {\n  const context = useConnectedWeb3Context();\n  const poolQuery = useQuery<GetPools, GetPoolsVariables>(GET_POOLS_QUERY, {\n    variables: {\n      account: context.account\n    },\n    fetchPolicy: 'network-only'\n  });\n\n  const error = poolQuery.error\n\n  if (error) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message={error.message} type=\"warning\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Container sx={{ pt: 6, pb: 6 }} maxWidth=\"lg\">\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n        <PoolFilter></PoolFilter>\n        <PoolList account={context.account} pools={poolQuery.data?.pools as Maybe<Pool[]>}></PoolList>\n      </Grid>\n    </Container>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\nimport React, { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  // @ts-ignore\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ConfirmTransactionDialog: React.FC = () => {\n  const [open, setOpen] = useState(false);\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    };\n  }, [emitter, setOpen])\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      style={{ zIndex: 9999 }}\n    >\n      <DialogTitle>ViteConnect</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please confirm transaction on VITE Wallet App\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { GET_NETWORK_BLOCK_HEIGHT_QUERY } from '../../../../queries';\nimport { GetNetworkBlockHeight } from '../../../../queries/__generated__/GetNetworkBlockHeight';\nimport { getEmitter } from '../../../../util/emitter.util';\n\nexport const Network: React.FC = () => {\n  const networkManager = getNetworkManager();\n  const emitter = getEmitter();\n  const query = useQuery<GetNetworkBlockHeight>(GET_NETWORK_BLOCK_HEIGHT_QUERY, {\n    fetchPolicy: 'network-only'\n  });\n\n  useEffect(() => {\n    let interval = setInterval(async () => {\n      await query.refetch();\n      if (query.data?.networkBlockHeight) {\n        const height = query.data.networkBlockHeight;\n        emitter.emitNetworkBlockHeightChanged(height);\n        networkManager.networkHeight = height;\n      }\n    }, 1000)\n    return () => {\n      clearInterval(interval);\n    }\n  })\n\n  return (\n    <>\n    </>\n  )\n}\n","import { useSnackbar } from 'notistack';\nimport React from 'react';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Footer } from '../../../layout/components/footer';\nimport { Header } from '../../../layout/components/header';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\nimport { Pools } from '../../../pool/components/main';\nimport { ConfirmTransactionDialog } from '../dialog-transaction';\nimport { Network } from '../network';\n\nexport const Main: React.FC = (props: any) => {\n  SnackbarUtil.snackbar = useSnackbar();\n  return (\n    <MainWrapper>\n      <Header />\n      <Network />\n      <MainScroll>\n        <Pools></Pools>\n        <ConfirmTransactionDialog></ConfirmTransactionDialog>\n      </MainScroll>\n      <Footer />\n    </MainWrapper>\n  )\n}\n","import { ApolloProvider } from '@apollo/client';\nimport { styled } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport BackgroundSVG from './bg.svg';\nimport { getApolloClient } from './clients/apollo.client';\nimport { ConnectedWeb3 } from './contexts/connectedWeb3';\nimport { Web3Provider } from './contexts/web3';\nimport { Main } from './features/main/components/main';\n\nconst Background = styled('div')(`\n  width: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  background-image: url('${BackgroundSVG}');\n`\n);\n\nconst App: React.FC = () => {\n  const apolloClient = React.useMemo(() => getApolloClient(), [])\n  // Almost never return exponential notation\n  BigNumber.config({ EXPONENTIAL_AT: 1e+9 })\n  return (\n    <Background>\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={apolloClient}>\n          <Web3Provider>\n            <ConnectedWeb3>\n              <Main />\n            </ConnectedWeb3>\n          </Web3Provider>\n        </ApolloProvider>\n      </SnackbarProvider>\n    </Background>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\nimport { red } from '@mui/material/colors';\n\n// A custom theme for this app\n// https://github.com/mui-org/material-ui/tree/master/examples/create-react-app-with-typescript\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#d6352f',\n    },\n    secondary: {\n      main: '#ff0000',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export abstract class CommonUtil {\n  static isString(value: any): boolean {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  static isNullOrWhitespace(value?: Maybe<string>): boolean {\n    if (!CommonUtil.isString(value)) {\n      return true;\n    } else {\n      return value === null || value === undefined || value.trim() === '';\n    }\n  }\n\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\n    return CommonUtil.isNullOrWhitespace(value) || value === defaultValue\n  }\n\n  static timeout(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\n    if (str) {\n      if (maxLength < str.length) {\n        return `${str.substr(0, maxLength)}...`\n      }\n    }\n    return str\n  }\n\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\n    if (str) {\n      const minTruncatedLength = strPositionStart + strPositionEnd\n      if (minTruncatedLength < str.length) {\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\n      }\n    }\n    return str\n  }\n\n  static toJsonString(data: any): string {\n    return JSON.stringify(data, null, 2);\n  }\n\n  static async imageUrlToBlob(url: string): Promise<Blob> {\n    return (await fetch(url)).blob();\n  }\n\n  static random(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  static equals(lh: any, rh: any): boolean {\n    // The ORDER of the properties IS IMPORTANT\n    return JSON.stringify(lh) === JSON.stringify(rh);\n  }\n}","import BigNumber from 'bignumber.js';\nimport EventEmitter from 'events';\nimport { GlobalEvent, Pool, PoolFilterValues } from './types';\n\nexport interface IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void\n  emitConnectWalletDialog(open: boolean): void\n  emitNetworkBlockHeightChanged(height: BigNumber): void\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void\n  emitPoolUpdate(pool: Pool): void\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class GlobalEmitter extends EventEmitter implements IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConfirmTransactionDialog, open)\n  }\n  emitConnectWalletDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConnectWalletDialog, open)\n  }\n  emitNetworkBlockHeightChanged(height: BigNumber): void {\n    this.emit(GlobalEvent.NetworkBlockHeightChanged, height)\n  }\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void {\n    this.emit(GlobalEvent.PoolFilterValuesChanged, oldValues, newValues)\n  }\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolDeposit, id, amount, account)\n  }\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolWithdraw, id, amount, account)\n  }\n  emitPoolUpdate(pool: Pool): void {\n    this.emit(GlobalEvent.PoolUpdate, pool)\n  }\n}\n\nconst emitter = new GlobalEmitter();\n\nexport const getEmitter = (): IGlobalEmitter => {\n  return emitter;\n}\n","export enum WalletType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class Wallet<T> {\n  private readonly _type: WalletType\n\n  active?: T\n  accounts: T[] = []\n\n  constructor(type: WalletType, init?: Partial<Wallet<T>>) {\n    this._type = type\n    this.baseInitinit(init)\n  }\n\n  static fromJS(data: any): Maybe<WebWallet | SessionWallet> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWallet(data)\n      case WalletType.Session:\n        return new SessionWallet(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletType {\n    return this._type\n  }\n\n  protected abstract createAccount(data: any): T\n\n  private baseInitinit(data?: any): void {\n    if (data) {\n      this.active = data.active ? this.createAccount(data.active) : undefined\n      if (data.accounts && Array.isArray(data.accounts)) {\n        data.accounts.forEach((account: any) => {\n          this.accounts.push(this.createAccount(account))\n        })\n      }\n    }\n    if (!this.accounts) {\n      this.accounts = []\n    }\n  }\n}\n\nexport class WebWallet extends Wallet<WebWalletAccount> {\n  mnemonic!: string\n\n  constructor(init?: Partial<WebWallet>) {\n    super(WalletType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.mnemonic = data.mnemonic\n    }\n  }\n\n  protected createAccount(data: any): WebWalletAccount {\n    return new WebWalletAccount(data)\n  }\n}\n\nexport class SessionWallet extends Wallet<SessionWalletAccount> {\n  session!: string\n  timestamp!: number\n\n  constructor(init?: Partial<SessionWallet>) {\n    super(WalletType.Session, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.session = data.session\n      this.timestamp = data.timestamp\n    }\n  }\n\n  protected createAccount(data: any): SessionWalletAccount {\n    return new SessionWalletAccount(data)\n  }\n}\n\nexport enum WalletAccountType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class WalletAccount {\n  private readonly _type: WalletAccountType\n\n  id!: string\n  address!: string\n\n  constructor(type: WalletAccountType, init?: Partial<WalletAccount>) {\n    this._type = type\n    this.baseInit(init)\n  }\n\n  static fromJS(data: any): Maybe<WalletAccount> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWalletAccount(data)\n      case WalletType.Session:\n        return new SessionWalletAccount(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletAccountType {\n    return this._type\n  }\n\n  private baseInit(data?: any): void {\n    if (data) {\n      this.id = data.id\n      this.address = data.address\n    }\n  }\n}\n\nexport class WebWalletAccount extends WalletAccount {\n  privateKey!: string\n\n  constructor(init?: Partial<WebWalletAccount>) {\n    super(WalletAccountType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.privateKey = data.privateKey\n    }\n  }\n}\n\nexport class SessionWalletAccount extends WalletAccount {\n  constructor(init?: Partial<SessionWalletAccount>) {\n    super(WalletAccountType.Session, init)\n  }\n}","import Connector from '@vite/connector';\nimport { WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { SessionWallet, SessionWalletAccount } from './types';\n\nconst logger = getLogger()\n\nexport interface IWalletConnector {\n  readonly uri: string\n  sendTransactionAsync(...args: any): Promise<any>\n  signMessageAsync(...args: any): Promise<any>\n  killSessionAsync(): Promise<void>\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class WalletConnector extends Connector implements IWalletConnector {\n  private readonly _walletManager: WalletManager;\n\n  constructor(walletManager: WalletManager, opts: any, meta?: any) {\n    super(opts, meta);\n    this._walletManager = walletManager;\n    this.on('connect', (err: any, payload: any) => {\n      logger.info('WalletConnector.connect', err, payload)()\n      const { accounts } = payload.params[0];\n      this.saveSession(accounts);\n    });\n    this.on('disconnect', (err: any, payload: any) => {\n      logger.info('WalletConnector.disconnect', err, payload)()\n      this.stopBizHeartBeat()\n      this._walletManager.removeWallet()\n    });\n    this.on('session_update', (err: any, payload: any) => {\n      logger.info('WalletConnector.session_update', err, payload)()\n      const session = payload[0];\n      if (session && session.accounts) {\n        this.saveSession(session.accounts);\n      }\n    });\n  }\n\n  get uri(): string {\n    return super.uri\n  }\n\n  on(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.on(event, listener)\n  }\n\n  off(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.off(event, listener)\n  }\n\n  saveSession(accounts: string[]): void {\n    if (!accounts || !accounts[0]) {\n      throw new Error('address is null');\n    }\n    const sessionAccounts: SessionWalletAccount[] = []\n    for (let index = 0; index < accounts.length; index++) {\n      const address = accounts[index];\n      sessionAccounts.push(new SessionWalletAccount({\n        id: index.toString(),\n        address: address\n      }))\n    }\n    const wallet = new SessionWallet({\n      active: sessionAccounts[0],\n      accounts: sessionAccounts,\n      session: this.session,\n      timestamp: new Date().getTime()\n    })\n    this._walletManager.setWallet(wallet)\n  }\n\n  updateSession(): void {\n    const existing = this._walletManager.getWallet()\n    if (existing && existing instanceof SessionWallet) {\n      existing.timestamp = new Date().getTime()\n      this._walletManager.updateWalletStore(existing)\n    }\n  }\n\n  async createSession(): Promise<string> {\n    await super.createSession();\n    return this.uri;\n  }\n\n  async sendTransactionAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signAndSendTx', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async signMessageAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signMessage', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async killSessionAsync(): Promise<any> {\n    await super.killSession();\n  }\n}","import { IWalletConnector, WalletConnector, WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\n\nconst logger = getLogger()\n\nexport class WalletConnectorFactory {\n  private readonly _walletManager: WalletManager\n\n  constructor(walletManager: WalletManager) {\n    this._walletManager = walletManager\n  }\n\n  create(network: Network): IWalletConnector {\n    const session = this._walletManager.getValidSession()\n    const account = this._walletManager.getActiveAccount()\n    const opts = {\n      bridge: network.connectorUrl,\n      session\n    }\n    const meta = account ? { lastAccount: account.address } : undefined\n    const connector = new WalletConnector(this._walletManager, opts, meta)\n\n    if (!session) {\n      connector.createSession().then(() => logger.info('IWalletConnector connected', connector.uri)())\n    }\n\n    return connector\n  }\n}","import { SessionWallet, Wallet, WebWallet } from '.';\nimport { CommonConstants } from '../common/constants';\nimport { getLogger } from '../util/logger';\nimport { WalletType } from './types';\n\nconst logger = getLogger()\n\nexport class WalletStore {\n\n  private readonly _webWalletKey = CommonConstants.WEB_WALLET_STORAGE_SPACE;\n  private readonly _sessionWalletKey = CommonConstants.SESSION_WALLET_STORAGE_SPACE\n\n  clear(): void {\n    localStorage.removeItem(this._webWalletKey);\n    sessionStorage.removeItem(this._sessionWalletKey);\n  }\n\n  getItem(): Maybe<WebWallet | SessionWallet> {\n    let data;\n\n    try {\n      data = localStorage.getItem(this._webWalletKey);\n      if (!data) {\n        data = sessionStorage.getItem(this._sessionWalletKey);\n      }\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n\n    if (!data) {\n      return undefined;\n    }\n\n    try {\n      return Wallet.fromJS(JSON.parse(data));\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n  }\n\n  setItem(data: WebWallet | SessionWallet): void {\n    const saveData = JSON.stringify(data);\n\n    try {\n      switch (data.type) {\n        case WalletType.Web:\n          localStorage.setItem(this._webWalletKey, saveData);\n          break;\n        case WalletType.Session:\n          sessionStorage.setItem(this._sessionWalletKey, saveData);\n          break;\n        default:\n          throw new Error(`Wallet type '${data.type}' is not supported.`)\n      }\n    } catch (err) {\n      logger.error(err)();\n    }\n  }\n}","import { wallet } from '@vite/vitejs';\nimport { SessionWallet, WalletAccount, WebWallet, WebWalletAccount } from '.';\nimport { getLogger } from '../util/logger';\nimport { WalletStore } from './store';\n\nconst logger = getLogger()\n\nexport class WalletManager {\n  private readonly _store: WalletStore;\n  private _wallet?: WebWallet | SessionWallet;\n  private _mnemonicDeriveIndex = 0;\n  private _setWalletCallback?: (wallet?: WebWallet | SessionWallet | undefined) => void;\n\n  constructor() {\n    this._store = new WalletStore();\n  }\n\n  initWallet(): void {\n    const wallet = this._store.getItem();\n    if (wallet) {\n      this._wallet = wallet;\n      this._mnemonicDeriveIndex = wallet.accounts.length;\n      this.updateWallet();\n    }\n  }\n\n  set onSetWalletCallback(cb: (wallet?: WebWallet | SessionWallet | undefined) => void) {\n    this._setWalletCallback = cb;\n  }\n\n  getWallet(): Maybe<WebWallet | SessionWallet> {\n    return this._wallet;\n  }\n\n  setWallet(wallet?: WebWallet | SessionWallet): void {\n    this._wallet = wallet;\n    this.updateWalletStore(wallet)\n    this.updateWallet()\n  }\n\n  updateWallet(): void {\n    if (this._setWalletCallback) {\n      this._setWalletCallback(this._wallet);\n    }\n  }\n\n  updateWalletStore(wallet?: WebWallet | SessionWallet): void {\n    if (wallet) {\n      this._store.setItem(wallet);\n    }\n  }\n\n  createWebWallet(mnemonic: string): Maybe<WebWallet> {\n    if (!this.validateMnemonic(mnemonic)) {\n      return undefined;\n    }\n    this.resetWallet();\n    const account = this.createWebWalletAccount(mnemonic, 0);\n    const wallet = new WebWallet({\n      active: account,\n      mnemonic,\n      accounts: [\n        account\n      ]\n    });\n    this.setWallet(wallet);\n    return wallet;\n  }\n\n  removeWallet(): void {\n    this.resetWallet();\n    this.updateWallet();\n  }\n\n  getAccountByAddress(address: string): Maybe<WalletAccount> {\n    return this._wallet?.accounts?.find(e => e.address === address)\n  }\n\n  addAccount(): Maybe<WalletAccount> {\n    if (this._wallet instanceof WebWallet) {\n      const account = this.createWebWalletAccount(this._wallet.mnemonic);\n      this._wallet.accounts.push(account);\n      this.setActiveAccount(account);\n      return account;\n    }\n    return undefined\n  }\n\n  getActiveAccount(): Maybe<WalletAccount> {\n    return this._wallet?.active\n  }\n\n  setActiveAccount(account: WalletAccount): boolean {\n    if (this._wallet) {\n      this._wallet.active = account;\n      this._store.setItem(this._wallet);\n      this.updateWallet();\n      return true;\n    }\n    return false;\n  }\n\n  getAccounts(): WalletAccount[] {\n    if (this._wallet) {\n      return this._wallet.accounts;\n    }\n    return [];\n  }\n\n  getValidSession(): Maybe<string> {\n    const wallet = this._store.getItem();\n    if (wallet && wallet instanceof SessionWallet) {\n      if (new Date().getTime() - wallet.timestamp < 1000 * 60 * 10) {\n        return wallet.session;\n      } else {\n        logger.info('Found expired session.', wallet)();\n      }\n    }\n    return undefined;\n  }\n\n  private resetWallet(): void {\n    this._wallet = undefined;\n    this._mnemonicDeriveIndex = 0;\n    this._store.clear();\n  }\n\n  private createWebWalletAccount(mnemonic: string, index = this._mnemonicDeriveIndex): WebWalletAccount {\n    const { privateKey } = wallet.deriveAddress({\n      mnemonics: mnemonic,\n      index\n    });\n    let account = new WebWalletAccount({\n      id: index.toString(),\n      privateKey,\n      address: wallet.createAddressByPrivateKey(privateKey).address\n    });\n    this._mnemonicDeriveIndex = index + 1;\n    return account;\n  }\n\n  private validateMnemonic(mnemonic: Maybe<string>): Boolean {\n    if (mnemonic) {\n      return wallet.validateMnemonics(mnemonic);\n    }\n    return false;\n  }\n}\n\nconst manager = new WalletManager();\n\nexport const getWalletManager = () => {\n  return manager;\n}","import { abi as abiutils, accountBlock, utils, ViteAPI } from \"@vite/vitejs\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Task } from \"../util/task\";\nimport { Network, VmLog } from \"../util/types\";\nimport { getWalletManager, IWalletConnector, SessionWalletAccount, WalletAccount, WalletConnectorFactory, WalletManager, WebWalletAccount } from \"../wallet\";\nconst { WS_RPC } = require('@vite/vitejs-ws');\n\nconst logger = getLogger();\n\nconst providerTimeout = 60000;\nconst providerOptions = { retryTimes: 10, retryInterval: 5000 };\n\nexport class ViteClient {\n  private _isConnected: boolean;\n  private _connector?: IWalletConnector;\n  private _provider?: any;\n  private _client?: any;\n  private readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _connectorFactory: WalletConnectorFactory;\n\n  constructor() {\n    this._isConnected = false;\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._connectorFactory = new WalletConnectorFactory(this._walletManager);\n  }\n\n  get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  get connector(): Maybe<IWalletConnector> {\n    return this._connector;\n  }\n\n  initAsync = async (network: Network) => new Promise<void>((resolve, reject) => {\n    this._connector = this._connectorFactory.create(network)\n    this._provider = new WS_RPC(network.rpcUrl, providerTimeout, providerOptions);\n    let isResolved = false;\n    this._provider.on('error', (err: any) => {\n      logger.error(err)();\n      if (isResolved) return;\n      reject(err);\n      this._isConnected = false;\n    });\n    this._client = new ViteAPI(this._provider, () => {\n      logger.info(`ViteAPI connected to ${this._provider.path}`)();\n      isResolved = true;\n      resolve();\n      this._isConnected = true;\n    });\n  });\n\n  dispose(): void {\n    logger.info(\"Disposing ViteClient\")();\n    this._provider?.disconnect();\n    this._isConnected = false;\n  }\n\n  async requestAsync(method: string, ...args: any[]): Promise<any> {\n    if (this._isConnected && this._client) {\n      return this._client.request(method, ...args);\n    } else {\n      return Promise.reject('Vite client is not ready to make requests.');\n    }\n  }\n\n  async callContractAsync(account: WalletAccount, methodName: string, abi: any, params: any, tokenId: any, amount: string, toAddress: string): Promise<any> {\n    let block = accountBlock\n      .createAccountBlock(\"callContract\", {\n        address: account.address,\n        abi,\n        methodName,\n        tokenId,\n        amount,\n        toAddress,\n        params,\n      })\n\n    if (account instanceof WebWalletAccount) {\n      block = block.setProvider(this._client).setPrivateKey(account.privateKey);\n      await block.autoSetPreviousAccountBlock();\n      const result = await block.sign().send();\n      return result;\n    } else if (account instanceof SessionWalletAccount) {\n      if (this.connector) {\n        this._emitter.emitConfirmTransactionDialog(true);\n        try {\n          const result = await this.connector.sendTransactionAsync({\n            block: block.accountBlock\n          });\n          this._emitter.emitConfirmTransactionDialog(false);\n          return result;\n        } catch (error) {\n          this._emitter.emitConfirmTransactionDialog(false);\n          throw error\n        }\n      } else {\n        throw new Error(\"Connector is not defined\");\n      }\n    } else {\n      throw new Error(\"Account not supported\");\n    }\n  }\n\n  async callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any> {\n    let data = abiutils.encodeFunctionCall(abi, params);\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\n    let result = await this.requestAsync(\"contract_callOffChainMethod\", {\n      selfAddr: contractAddress,\n      offChainCode: offchaincode,\n      data: dataBase64,\n    });\n    if (result) {\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\n      let outputs = [];\n      for (let i = 0; i < abi.outputs.length; i++) {\n        outputs.push(abi.outputs[i].type);\n      }\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\n      let resultList = [];\n      if (offchainDecodeResult) {\n        for (let i = 0; i < abi.outputs.length; i++) {\n          if (abi.outputs[i].name) {\n            resultList.push({\n              name: abi.outputs[i].name,\n              value: offchainDecodeResult[i],\n            });\n          } else {\n            resultList.push({\n              name: \"\",\n              value: offchainDecodeResult[i],\n            });\n          }\n        }\n      }\n      return resultList;\n    }\n    return \"\";\n  }\n\n  decodeVmLog(vmLog: any, abi: any): Maybe<VmLog> {\n    let topics = vmLog.topics;\n    for (let j = 0; j < abi.length; j++) {\n      let abiItem = abi[j];\n      if (abiutils.encodeLogSignature(abiItem) === topics[0]) {\n        if (vmLog.data) {\n          let log: VmLog = {\n            topic: topics[0],\n            args: abiutils.decodeLog(\n              abiItem.inputs,\n              utils._Buffer.from(vmLog.data, \"base64\").toString(\"hex\"),\n              topics.slice(1)\n            ),\n            event: abiItem.name,\n          };\n          return log;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  async createAddressListenerAsync(address: string): Promise<any> {\n    const payload = {\n      addressHeightRange: {\n        placeholder: {\n          fromHeight: \"0\",\n          toHeight: \"0\",\n        },\n      },\n    };\n    let tempPayload = JSON.stringify(payload);\n    tempPayload = tempPayload.replace(\"placeholder\", address);\n    const result = await this._client?.subscribe(\"createVmlogSubscription\", JSON.parse(tempPayload));\n    return result;\n  }\n\n  removeListener(event: any): void {\n    this._client?.unsubscribe(event);\n  }\n\n  async waitForAccountBlockAsync(address: string, height: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      let result: any = undefined;\n      let error: any = undefined;\n      const task = new Task(async () => {\n        try {\n          let blockByHeight = await this.requestAsync(\n            'ledger_getAccountBlockByHeight',\n            address,\n            height\n          );\n\n          if (!blockByHeight) {\n            return true;\n          }\n\n          let receiveBlockHash = blockByHeight.receiveBlockHash;\n          if (!receiveBlockHash) {\n            return true;\n          }\n\n          let blockByHash = await this.requestAsync('ledger_getAccountBlockByHash', receiveBlockHash);\n          if (!blockByHash) {\n            return true;\n          }\n\n          result = {\n            ...this.getAccountBlockStatus(blockByHash),\n            accountBlock: blockByHash\n          }\n\n          return false;\n        } catch (err) {\n          error = err\n          return false;\n        }\n      }, 500);\n      task.start(() => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  private getAccountBlockStatus(accountBlock: any) {\n    let status = this.resolveAccountBlockData(accountBlock);\n    let statusTxt = '';\n    switch (status) {\n      case 0:\n        statusTxt = '0, Execution succeed';\n        break;\n      case 1:\n        statusTxt = '1, Execution reverted';\n        break;\n      case 2:\n        statusTxt = '2, Max call depth exceeded';\n        break;\n    }\n    return {\n      status,\n      statusTxt\n    };\n  }\n\n  private resolveAccountBlockData(accountBlock: any) {\n    if (\n      (accountBlock.blockType !== 4 && accountBlock.blockType !== 5) ||\n      !accountBlock.data\n    ) {\n      return 0;\n    }\n    let bytes = utils._Buffer.from(accountBlock.data, 'base64');\n\n    if (bytes.length !== 33) {\n      return 0;\n    }\n    return bytes[32];\n  }\n}\n\nconst client = new ViteClient();\n\nexport const getViteClient = () => {\n  return client;\n}"],"sourceRoot":""}