{"version":3,"sources":["clients/vite.client.ts","util/coin.util.ts","common/queue.ts","util/task.ts","clients/coingecko.client.ts","util/types.ts","common/constants.ts","util/logger.ts","clients/vite-api.client.ts","util/file.util.ts","util/ensure.ts","util/moment.util.ts","datasources/base.datasource.ts","datasources/mock.datasource.ts","util/cache.ts","datasources/vite.datasource.ts","contexts/common.ts","mutations/pool.ts","queries/account.ts","queries/network.ts","queries/token.ts","queries/pool.ts","clients/apollo.client.ts","common/network.ts","features/layout/components/header-loading/component.tsx","features/layout/components/main-wrapper/component.tsx","contexts/web3.tsx","contexts/connectedWeb3.tsx","features/main/components/loading/component.tsx","util/format.util.ts","util/snackbar.util.ts","features/common/components/tooltip/component.tsx","features/layout/components/footer/component.tsx","features/main/components/qrcode/component.tsx","features/main/components/login/component.tsx","features/main/components/network-list/component.tsx","hooks/themeContext.js","features/layout/components/header/component.tsx","features/layout/components/main-scroll/component.tsx","features/common/components/alert/component.tsx","features/pool/components/filter/component.tsx","factories/moment.factory.ts","util/filter.util.ts","services/pool.service.ts","util/vite.util.ts","features/common/components/click-once-button/component.tsx","features/pool/components/countdown/component.tsx","services/account.service.ts","features/pool/components/dialog-deposit/component.tsx","features/pool/components/dialog-withdraw/component.tsx","features/pool/components/dialog/component.tsx","features/pool/components/rewards/component.tsx","features/pool/components/timelock/component.tsx","features/pool/components/tokens/component.tsx","features/pool/components/totalearnedrewards/component.tsx","features/pool/components/list-card/component.tsx","features/pool/components/list/component.tsx","features/pool/components/main/component.tsx","features/main/components/dialog-transaction/component.tsx","features/main/components/network/component.tsx","features/main/components/desc/component.tsx","features/main/components/main/component.tsx","App.tsx","reportWebVitals.ts","index.tsx","util/common.util.ts","util/emitter.util.ts","wallet/types.ts","wallet/connector.ts","wallet/factory.ts","wallet/store.ts","wallet/manager.ts"],"names":["WS_RPC","require","logger","getLogger","providerOptions","retryTimes","retryInterval","client","_isConnected","_connector","_provider","_client","_emitter","_walletManager","_connectorFactory","initAsync","network","a","Promise","resolve","reject","create","rpcUrl","isResolved","on","err","error","ViteAPI","info","path","this","getEmitter","getWalletManager","WalletConnectorFactory","disconnect","method","args","request","account","methodName","abi","params","tokenId","amount","toAddress","block","accountBlock","createAccountBlock","address","WebWalletAccount","setProvider","setPrivateKey","privateKey","autoSetPreviousAccountBlock","sign","send","result","SessionWalletAccount","connector","emitConfirmTransactionDialog","sendTransactionAsync","Error","contractAddress","offchaincode","data","abiutils","encodeFunctionCall","dataBase64","Buffer","from","toString","requestAsync","selfAddr","offChainCode","resultBytes","outputs","i","length","push","type","offchainDecodeResult","decodeParameters","resultList","name","value","vmLog","topics","j","abiItem","encodeLogSignature","topic","decodeLog","inputs","utils","_Buffer","slice","event","payload","addressHeightRange","placeholder","fromHeight","toHeight","tempPayload","JSON","stringify","replace","subscribe","parse","unsubscribe","height","undefined","Task","blockByHeight","receiveBlockHash","blockByHash","getAccountBlockStatus","start","status","resolveAccountBlockData","statusTxt","blockType","bytes","getViteClient","util","_iconUrlMap","_coinMarketCapMap","_coingeckoMap","Map","iconUrl","existing","get","toLowerCase","getCoinUtil","ActionQueue","actionQueues","key","nextStep","has","set","processing","queue","acc","then","r","action","shift","delete","task","interval","_taskTimer","_taskInterval","_task","_callback","setTimeout","_onStop","_run","callback","window","clearTimeout","_coinUtil","_cache","_queue","_coinsToFetch","process","emitWarning","console","warn","CoinGecko","Set","mappedName","mapCoingeckoName","queueAction","add","setImmediate","ids","Array","simple","price","BigNumber","usd","getCoingeckoClient","PoolSortType","PoolDialogType","GlobalEvent","VmLogEvent","CommonConstants","APP_NAME","WEB_WALLET_STORAGE_SPACE","SESSION_WALLET_STORAGE_SPACE","VITE_TOKEN_ID","REWARD_FACTOR","VITECONNECT_URL","nodes","testnet","mainnet","debug","Networks","id","networkId","connectorUrl","contractType","TypeNames","Pool","PoolUserInfo","Token","UnknownToken","__typename","symbol","originalSymbol","decimals","url","PoolSortTypes","DefaultPoolFilterValues","stakedOnly","showLive","sortBy","DEFAULT","search","LogEventModel","init","banner","Object","assign","noop","Boolean","Date","toLocaleTimeString","mapFn","e","CommonUtil","isString","message","toJsonString","timestamp","map","isArray","e1","isEnabled","createLogEventModel","Function","prototype","bind","call","ViteAPIClient","_baseUrl","axios","lptokens","FileUtilType","getViteAPIClient","Ensure","property","propertyName","trim","maxLength","MomentUtil","locale","_locale","navigator","language","moment","seconds","duration","date","unix","utc","local","getLocal","format","getLocalTime","getLocalDate","BaseDataSource","_coingeckoClient","_vitexClient","_tokens","_tokensURL","_moment","initAsyncProtected","clear","disposeProtected","getActiveAccount","notNull","pool","endTimestamp","isExpired","latestRewardBlock","endBlock","all","rewardToken","stakingToken","token","includes","getLPTokenValue","getTokenPriceUSDAsync","rewardTokenPrice","stakingTokenPrice","totalTime","minus","startBlock","secondsInYear","usdRewardAmount","times","totalRewards","shiftedBy","removedDecimals","usdStakingAmount","totalStaked","log","toFixed","apr","div","isFinite","isNaN","lte","getNetworkBlockHeightAsync","networkBlockHeight","remainingSeconds","toNumber","getTokenDetailAsync","tokenDecimals","urlIcon","mapCoinMarketCapName","unknownToken","p","getTokenAsync","stakingTokenId","rewardTokenId","getEndTimestampAsync","totalStakingBalance","totalRewardBalance","rewardPerPeriod","rewardPerToken","paidOut","fetchTimestamp","timelock","u","poolId","stakingBalance","rewardDebt","depositBlock","FileUtil","BrowserFileUtil","fetch","response","text","ds","fileUtil","_fileUtil","_pools","_users","_networkBlockHeight","_networkBlockHeightInterval","setInterval","plus","readFileAsync","pools","index","toPoolAsync","getAprAsync","users","toPoolUserInfoAsync","initNetworkBlockHeight","initPoolsAsync","initPoolUsersAsync","clearInterval","_account","_id","timeout","random","getPoolUserInfoAsync","userInfo","getPoolAsync","_poolId","isNullOrWhitespace","find","blockNumber","latestBlock","eq","period","latestReward","_tokenId","_amount","_updatePoolAsync","getAccount","gt","pendingAmount","emitPoolDeposit","emitPoolWithdraw","CachedFunctionCall","callbackFn","_duration","_callbackFn","_currentValue","_lastExecution","getTime","_offchainMethods","_cachedNetworkBlockHeight","_contract","_listener","_network","handleResponseAsync","waitForAccountBlockAsync","objectFromEntries","entries","fromEntries","entry","contract","contractName","createAddressListenerAsync","results","decodeVmLog","vmlog","handleVmLogAsync","removeAddressListener","removeListener","balanceInfoMap","balance","pow","getAsync","callOffChainMethodAsync","getOffchainMethodAbi","offChain","getTotalPoolsAsync","promises","sort","b","Number","callContractAsync","Deposit","addr","pid","Withdraw","Claim","emitPoolClaim","context","_vite","_datasource","initViteClientAsync","dispose","getCommonContext","DEPOSIT_MUTATION","gql","WITHDRAW_MUTATION","PoolMutations","deposit","parent","datasource","depositAsync","withdraw","withdrawAsync","GET_ACCOUNT_BALANCE_QUERY","AccountQueries","accountBalance","getAccountBalanceAsync","GET_NETWORK_BLOCK_HEIGHT_QUERY","NetworkQueries","TOKEN_FIELDS","TokenQueries","POOL_FIELDS","POOL_USER_INFO_FIELDS","GET_POOL_QUERY","GET_POOLS_QUERY","GET_POOL_USER_INFO_QUERY","PoolQueries","getPoolsAsync","totalPools","poolUserInfo","ApolloClient","cache","InMemoryCache","typePolicies","Query","fields","resolvers","GraphQLScalarType","description","serialize","parseValue","Mutation","headers","getApolloClient","manager","_networkHeight","_setNetworkCallback","cb","split","filter","getNetworkManager","Root","styled","theme","TitleTypography","Typography","HeaderLoading","props","AppBar","position","Toolbar","variant","MainWrapperStyled","MainWrapper","children","restProps","Web3Context","React","createContext","Web3Provider","useState","setError","wallet","setWallet","setNetwork","onSetWalletCallback","onSetNetworkCallback","Provider","ConnectedWeb3Context","useConnectedWeb3Context","useContext","ConnectedWeb3","connection","setConnection","web3Context","useWeb3Context","commonContext","useEffect","initWallet","networkManager","getNetwork","logout","useCallback","removeWallet","location","reload","active","Grid","container","justifyContent","alignItems","CircularProgress","FormatUtil","defaultMessage","graphQLErrors","substr","SnackbarUtil","snackbar","enqueueSnackbar","formatMessage","BootstrapTooltip","className","Tooltip","classes","popper","tooltipClasses","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","arrow","black","maxWidth","typography","pxToRem","border","Footer","setNetworkBlockHeight","rotated","setRotated","emitter","handleEvent","heightString","heightRef","mod","NetworkBlockHeightChanged","off","Box","sx","py","px","background","width","xs","md","spacing","item","Link","underline","href","target","cursor","direction","style","alt","src","title","placement","verticalAlign","display","mr","transform","Chip","label","size","QrCode","elementRef","useRef","defaultOpt","ecLevel","HIGH","minVersion","mode","modes","DRAW_WITH_IMAGE_BOX","radius","image","mSize","current","innerHTML","qrcode","generate","ref","LoginDialog","onClose","open","setOpen","viteClient","ConnectWalletDialog","Dialog","DialogTitle","mb","DialogContent","textAlign","m","uri","NetworksFormControl","FormControl","margin","NetworkList","networks","getNetworks","Select","labelId","onChange","selectedNetwork","MenuItem","ThemeCtx","ThemeCtxProvider","prefersDarkMode","useMediaQuery","darkMode","setDarkMode","localStorage","getItem","handleDarkMode","setItem","useThemeMode","Header","loginOpen","setLoginOpen","mobileView","drawerOpen","state","setState","setResponsiveness","innerWidth","prevState","addEventListener","removeEventListener","isNavExpanded","setIsNavExpanded","icon","truncateStringInTheMiddle","onClick","IconButton","ml","MainScrollStyled","MainScrollInner","MainScroll","Container","Alert","Paper","padding","PoolFilter","prop","values","setValues","emitEvent","oldValues","newValues","emitPoolFilterValuesChanged","handleCheckedChange","checked","FormGroup","Stack","FormControlLabel","control","Checkbox","Switch","minWidth","InputLabel","TextField","autoComplete","factory","_map","getMomentFactory","FilterUtil","partition","closedPools","openPools","filtered","sorted","sortPools","searchPools","APR","orderBy","TOTAL_STAKED","term","lowerCaseTerm","service","_apollo","_fetchPolicy","query","variables","fetchPolicy","poolQuery","userInfoQuery","mutate","mutation","lt","getPoolService","ViteUtil","bn","decimalPlaces","ROUND_DOWN","toFormat","ClickOnceButton","isDisabled","setIsDisabled","handleClick","LoadingButton","loading","fullWidth","disabled","PoolCountdown","hasStarted","setHasStarted","remainingBlocks","setRemainingBlocks","countdown","setCountdown","useMemo","networkHeight","gte","getDuration","months","days","hours","minutes","Skeleton","animation","getAccountService","PoolDepositDialog","setAmount","setDisabled","poolService","accountService","changeAmount","getBalanceAsync","handleClose","handleConfirmAsync","enqueueError","DialogContentText","mt","htmlFor","Input","autoFocus","startAdornment","InputAdornment","DialogActions","Button","PoolWithdrawDialog","getStakedAmount","formatBigNumber","PoolDialog","WITHDRAW","DEPOSIT","Rewards","setPool","rewardTokens","setRewardTokens","newRewardTokens","calculateRewardTokens","setCanClaim","updateRewardPerToken","newPool","formatDuration","isEqualTo","join","TimeLock","userTimelock","setUserTimelock","untilEnd","shouldRefreshReadable","isLessThan","timelockReadable","refresh","isGreaterThan","elapsed","remaining","Tokens","BigCoin","Avatar","SmallCoin","grey","coinUtil","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","mapIconUrl","TotalEarnedRewards","rewards","showTotalTokens","TransparentPaper","paddingTop","PoolListItem","dialogState","setDialogState","canStake","setCanStake","canClaim","canWithdraw","setCanWithdraw","expanded","setExpanded","timelockOK","isLessThanOrEqualTo","hasNotEnded","isGreaterThanOrEqualTo","handleClickClaimAsync","Accordion","ev","String","AccordionSummary","expandIcon","minHeight","sm","fontWeight","AccordionDetails","pt","zeroMinWidth","noWrap","showStaked","emitConnectWalletDialog","PoolList","isLoading","setIsLoading","allPools","setAllPools","setPools","setFilter","filterPools","PoolFilterValuesChanged","replacePool","findIndex","updatedPools","handlePoolEvent","PoolDeposit","PoolWithdraw","PoolClaim","elevation","Pools","useQuery","pb","Transition","forwardRef","Slide","ConfirmTransactionDialog","TransitionComponent","keepMounted","zIndex","Network","refetch","emitNetworkBlockHeightChanged","Desc","lg","Main","useSnackbar","App","apolloClient","config","EXPONENTIAL_AT","maxSnack","ApolloProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","secondary","default","paper","divider","ThemeProvider","CssBaseline","ReactDOM","render","document","querySelector","defaultValue","ms","blob","min","max","Math","floor","lh","rh","truncateString","str","strPositionStart","strPositionEnd","emit","PoolUpdate","EventEmitter","WalletType","WalletAccountType","Wallet","_type","accounts","baseInitinit","createAccount","forEach","Web","WebWallet","Session","SessionWallet","mnemonic","session","WalletAccount","baseInit","WalletConnector","walletManager","opts","meta","saveSession","stopBizHeartBeat","listener","sessionAccounts","getWallet","updateWalletStore","res","rej","sendCustomRequest","updateSession","catch","Connector","getValidSession","bridge","lastAccount","createSession","WalletStore","_webWalletKey","_sessionWalletKey","removeItem","sessionStorage","fromJS","saveData","_store","_wallet","_mnemonicDeriveIndex","_setWalletCallback","updateWallet","validateMnemonic","resetWallet","createWebWalletAccount","setActiveAccount","deriveAddress","mnemonics","createAddressByPrivateKey","validateMnemonics"],"mappings":"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","file":"static/js/main.e973d69d.chunk.js","sourcesContent":["import { abi as abiutils, accountBlock, utils, ViteAPI } from \"@vite/vitejs\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Task } from \"../util/task\";\nimport { Network, VmLog } from \"../util/types\";\nimport { getWalletManager, IWalletConnector, SessionWalletAccount, WalletAccount, WalletConnectorFactory, WalletManager, WebWalletAccount } from \"../wallet\";\nconst { WS_RPC } = require('@vite/vitejs-ws');\n\nconst logger = getLogger();\n\nconst providerTimeout = 60000;\nconst providerOptions = { retryTimes: 10, retryInterval: 5000 };\n\nexport class ViteClient {\n  private _isConnected: boolean;\n  private _connector?: IWalletConnector;\n  private _provider?: any;\n  private _client?: any;\n  private readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _connectorFactory: WalletConnectorFactory;\n\n  constructor() {\n    this._isConnected = false;\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._connectorFactory = new WalletConnectorFactory(this._walletManager);\n  }\n\n  get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  get connector(): Maybe<IWalletConnector> {\n    return this._connector;\n  }\n\n  initAsync = async (network: Network) => new Promise<void>((resolve, reject) => {\n    this._connector = this._connectorFactory.create(network)\n    this._provider = new WS_RPC(network.rpcUrl, providerTimeout, providerOptions);\n    let isResolved = false;\n    this._provider.on('error', (err: any) => {\n      logger.error(err)();\n      if (isResolved) return;\n      reject(err);\n      this._isConnected = false;\n    });\n    this._client = new ViteAPI(this._provider, () => {\n      logger.info(`ViteAPI connected to ${this._provider.path}`)();\n      isResolved = true;\n      resolve();\n      this._isConnected = true;\n    });\n  });\n\n  dispose(): void {\n    logger.info(\"Disposing ViteClient\")();\n    this._provider?.disconnect();\n    this._isConnected = false;\n  }\n\n  async requestAsync(method: string, ...args: any[]): Promise<any> {\n    if (this._isConnected && this._client) {\n      return this._client.request(method, ...args);\n    } else {\n      return Promise.reject('Vite client is not ready to make requests.');\n    }\n  }\n\n  async callContractAsync(account: WalletAccount, methodName: string, abi: any, params: any, tokenId: any, amount: string, toAddress: string): Promise<any> {\n    let block = accountBlock\n      .createAccountBlock(\"callContract\", {\n        address: account.address,\n        abi,\n        methodName,\n        tokenId,\n        amount,\n        toAddress,\n        params,\n      })\n\n    if (account instanceof WebWalletAccount) {\n      block = block.setProvider(this._client).setPrivateKey(account.privateKey);\n      await block.autoSetPreviousAccountBlock();\n      const result = await block.sign().send();\n      return result;\n    } else if (account instanceof SessionWalletAccount) {\n      if (this.connector) {\n        this._emitter.emitConfirmTransactionDialog(true);\n        try {\n          const result = await this.connector.sendTransactionAsync({\n            block: block.accountBlock\n          });\n          this._emitter.emitConfirmTransactionDialog(false);\n          return result;\n        } catch (error) {\n          this._emitter.emitConfirmTransactionDialog(false);\n          throw error\n        }\n      } else {\n        throw new Error(\"Connector is not defined\");\n      }\n    } else {\n      throw new Error(\"Account not supported\");\n    }\n  }\n\n  async callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any> {\n    let data = abiutils.encodeFunctionCall(abi, params);\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\n    let result = await this.requestAsync(\"contract_callOffChainMethod\", {\n      selfAddr: contractAddress,\n      offChainCode: offchaincode,\n      data: dataBase64,\n    });\n    if (result) {\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\n      let outputs = [];\n      for (let i = 0; i < abi.outputs.length; i++) {\n        outputs.push(abi.outputs[i].type);\n      }\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\n      let resultList = [];\n      if (offchainDecodeResult) {\n        for (let i = 0; i < abi.outputs.length; i++) {\n          if (abi.outputs[i].name) {\n            resultList.push({\n              name: abi.outputs[i].name,\n              value: offchainDecodeResult[i],\n            });\n          } else {\n            resultList.push({\n              name: \"\",\n              value: offchainDecodeResult[i],\n            });\n          }\n        }\n      }\n      return resultList;\n    }\n    return \"\";\n  }\n\n  async queryContractAsync(contractAddress: string, abi: any, params: any): Promise<any> {\n    let data = abiutils.encodeFunctionCall(abi, params);\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\n    let result = await this.requestAsync(\"contract_query\", {\n      address: contractAddress,\n      data: dataBase64,\n    });\n    if (result) {\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\n      let outputs = [];\n      for (let i = 0; i < abi.outputs.length; i++) {\n        outputs.push(abi.outputs[i].type);\n      }\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\n      let resultList = [];\n      if (offchainDecodeResult) {\n        for (let i = 0; i < abi.outputs.length; i++) {\n          if (abi.outputs[i].name) {\n            resultList.push({\n              name: abi.outputs[i].name,\n              value: offchainDecodeResult[i],\n            });\n          } else {\n            resultList.push({\n              name: \"\",\n              value: offchainDecodeResult[i],\n            });\n          }\n        }\n      }\n      return resultList;\n    }\n    return \"\";\n  }\n\n  decodeVmLog(vmLog: any, abi: any): Maybe<VmLog> {\n    let topics = vmLog.topics;\n    for (let j = 0; j < abi.length; j++) {\n      let abiItem = abi[j];\n      if (abiutils.encodeLogSignature(abiItem) === topics[0]) {\n        if (vmLog.data) {\n          let log: VmLog = {\n            topic: topics[0],\n            args: abiutils.decodeLog(\n              abiItem.inputs,\n              utils._Buffer.from(vmLog.data, \"base64\").toString(\"hex\"),\n              topics.slice(1)\n            ),\n            event: abiItem.name,\n          };\n          return log;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  async createAddressListenerAsync(address: string): Promise<any> {\n    const payload = {\n      addressHeightRange: {\n        placeholder: {\n          fromHeight: \"1\",\n          toHeight: \"0\",\n        },\n      },\n    };\n    let tempPayload = JSON.stringify(payload);\n    tempPayload = tempPayload.replace(\"placeholder\", address);\n    const result = await this._client?.subscribe(\"createVmlogSubscription\", JSON.parse(tempPayload));\n    return result;\n  }\n\n  removeListener(event: any): void {\n    this._client?.unsubscribe(event);\n  }\n\n  async waitForAccountBlockAsync(address: string, height: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      let result: any = undefined;\n      let error: any = undefined;\n      const task = new Task(async () => {\n        try {\n          let blockByHeight = await this.requestAsync(\n            'ledger_getAccountBlockByHeight',\n            address,\n            height\n          );\n\n          if (!blockByHeight) {\n            return true;\n          }\n\n          let receiveBlockHash = blockByHeight.receiveBlockHash;\n          if (!receiveBlockHash) {\n            return true;\n          }\n\n          let blockByHash = await this.requestAsync('ledger_getAccountBlockByHash', receiveBlockHash);\n          if (!blockByHash) {\n            return true;\n          }\n\n          result = {\n            ...this.getAccountBlockStatus(blockByHash),\n            accountBlock: blockByHash\n          }\n\n          return false;\n        } catch (err) {\n          error = err\n          return false;\n        }\n      }, 500);\n      task.start(() => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  private getAccountBlockStatus(accountBlock: any) {\n    let status = this.resolveAccountBlockData(accountBlock);\n    let statusTxt = '';\n    switch (status) {\n      case 0:\n        statusTxt = '0, Execution succeed';\n        break;\n      case 1:\n        statusTxt = '1, Execution reverted';\n        break;\n      case 2:\n        statusTxt = '2, Max call depth exceeded';\n        break;\n    }\n    return {\n      status,\n      statusTxt\n    };\n  }\n\n  private resolveAccountBlockData(accountBlock: any) {\n    if (\n      (accountBlock.blockType !== 4 && accountBlock.blockType !== 5) ||\n      !accountBlock.data\n    ) {\n      return 0;\n    }\n    let bytes = utils._Buffer.from(accountBlock.data, 'base64');\n\n    if (bytes.length !== 33) {\n      return 0;\n    }\n    return bytes[32];\n  }\n}\n\nconst client = new ViteClient();\n\nexport const getViteClient = () => {\n  return client;\n}","export class CoinUtil {\n  private readonly _iconUrlMap: Map<string, string>;\n  private readonly _coinMarketCapMap: Map<string, string>;\n  private readonly _coingeckoMap: Map<string, string>;\n\n  constructor() {\n    this._iconUrlMap = new Map<string, string>([\n      [\"https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png\", \"./assets/coins/vite.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/5faa1fa2b952137081e36c51af2b493c.png\", \"./assets/coins/usdc.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/3c231a8309999ad226afa097488a6158.png\", \"./assets/coins/dai.png\"]\n    ]);\n    this._coinMarketCapMap = new Map<string, string>([\n      [\"Terra\", \"terra-luna\"]\n    ]);\n    this._coingeckoMap = new Map<string, string>([\n      [\"Avalanche\", \"avalanche-2\"],\n      [\"Terra\", \"terra-luna\"],\n      [\"ViteX Coin\", \"vitex\"],\n      [\"Hedera\", \"hedera-hashgraph\"]\n    ]);\n  }\n\n  mapIconUrl(iconUrl?: Maybe<string>): string {\n    if (!iconUrl) {\n      return \"\";\n    }\n    const existing = this._iconUrlMap.get(iconUrl);\n    return existing ?? iconUrl;\n  }\n\n  mapCoinMarketCapName(name: string): string {\n    const existing = this._coinMarketCapMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n\n  mapCoingeckoName(name: string): string {\n    const existing = this._coingeckoMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n}\n\nconst util = new CoinUtil();\n\nexport const getCoinUtil = (): CoinUtil => {\n  return util;\n}","export type Queue = {\n    processing: boolean;\n    queue: Action[];\n};\nexport type Action = (()=>Promise<void>);\n\nexport default class ActionQueue<keyType = any> {\n    private readonly actionQueues:Map<keyType, Queue> = new Map();\n\n    async queueAction<T=void>(key:keyType, nextStep:()=>Promise<T>):Promise<T>{\n        if(!this.actionQueues.has(key)){\n            this.actionQueues.set(key, {\n                processing: false,\n                queue: []\n            });\n        }\n        const acc = this.actionQueues.get(key) as Queue;\n        acc.queue.push(()=>nextStep().then(resolve, reject));\n        let resolve:((value:T)=>void);\n        let reject:((error?:Error)=>void);\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise<T>(async (r, j) => {\n            resolve = r;\n            reject = j;\n\n            if(acc.processing)return;\n            acc.processing = true;\n            while(acc.queue[0]){\n                const action = acc.queue.shift() as Action;\n                await action();\n            }\n            this.actionQueues.delete(key);\n        });\n    }\n}","export class Task {\n  private _taskTimer: NodeJS.Timeout | undefined\n  private _taskInterval: number\n  private _task: () => Promise<boolean>\n  private _callback?: () => any\n\n  constructor(task: () => Promise<boolean>, interval: number) {\n    this._task = task;\n    this._taskInterval = interval;\n\n    return this;\n  }\n\n  _run(): void {\n    this._taskTimer = setTimeout(async () => {\n      if (!this._task) {\n        this._onStop();\n        return;\n      }\n      if (!(await this._task())) {\n        this._onStop();\n        return;\n      }\n      this._run();\n    }, this._taskInterval);\n  }\n\n  _onStop() {\n    this._callback && this._callback();\n  }\n\n  start(callback?: () => any): void {\n    this._callback = callback;\n    if (this._taskTimer) {\n      return;\n    }\n\n    this._run();\n  }\n\n\n  stop(): void {\n    this._onStop();\n    if (!this._taskTimer) {\n      return;\n    }\n    window.clearTimeout(this._taskTimer);\n    this._taskTimer = undefined;\n  }\n}","import BigNumber from \"bignumber.js\";\nimport CoinGecko from \"coingecko-api\";\nimport ActionQueue from \"../common/queue\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getLogger } from \"../util/logger\";\n\nconst logger = getLogger();\n\nexport class CoingeckoClient {\n  private readonly _client: any;\n  private readonly _coinUtil: CoinUtil;\n  private readonly _cache: Map<string, BigNumber>;\n  private readonly _queue: ActionQueue<string>;\n  private _coinsToFetch: Set<string>;\n\n  constructor() {\n    process.emitWarning = console.warn\n    this._client = new CoinGecko();\n    this._coinUtil = getCoinUtil();\n    this._cache = new Map<string, BigNumber>();\n    this._queue = new ActionQueue<string>();\n    this._coinsToFetch = new Set<string>();\n  }\n\n  async getTokenPriceUSDAsync(name: string): Promise<BigNumber> {\n    try {\n      const mappedName = this._coinUtil.mapCoingeckoName(name);\n      if(this._cache.has(mappedName))return this._cache.get(mappedName) as BigNumber;\n      return await this._queue.queueAction(mappedName, async () => {\n        if(this._cache.has(mappedName))return this._cache.get(mappedName) as BigNumber;\n        this._coinsToFetch.add(mappedName);\n        return await this._queue.queueAction(\"global\", async () => {\n          if(this._cache.has(mappedName))return this._cache.get(mappedName) as BigNumber;\n          // let other requests to batch them\n          await new Promise(r=>setImmediate(r));\n          const params = { ids: Array.from(this._coinsToFetch) };\n          this._coinsToFetch = new Set<string>();\n          const result = await this._client.simple.price(params);\n  \n          for(const mappedName in result.data){\n            const price = new BigNumber(result.data[mappedName].usd);\n    \n            this._cache.set(mappedName, price);\n            setTimeout(() => {\n              this._cache.delete(mappedName)\n            }, 2*60*1000);\n          }\n  \n          return this._cache.get(mappedName) || new BigNumber(0);\n        });\n      })\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst client = new CoingeckoClient();\n\nexport const getCoingeckoClient = () => {\n  return client;\n}","import BigNumber from \"bignumber.js\"\n\nexport interface GenericType {\n  name: string;\n  type: string;\n}\n\nexport type Contract = {\n  address: string\n  contractName: string\n  binary: string\n  offChain: string\n  abi: any[]\n}\n\nexport type Network = {\n  id: number\n  networkId: number\n  name: string\n  rpcUrl: string\n  connectorUrl: string,\n  contractAddress: string,\n  contractType: \"0.1\"|\"0.2\"\n}\n\nexport type Token = {\n  __typename: string\n  id: string\n  name: string\n  symbol: string\n  originalSymbol: string\n  decimals: number\n  iconUrl: Maybe<string>\n  url: Maybe<string>\n}\n\nexport type Pool = {\n  __typename: string\n  id: number\n  stakingToken: Token\n  rewardToken: Token\n  apr?: Maybe<BigNumber>\n  totalStaked: BigNumber\n  totalRewards: BigNumber\n  startBlock: BigNumber\n  endBlock: BigNumber\n  endTimestamp: number\n  latestRewardBlock: BigNumber\n  rewardPerPeriod: BigNumber\n  rewardPerToken: BigNumber\n  paidOut: BigNumber\n  userInfo?: Maybe<PoolUserInfo>\n  fetchTimestamp: number,\n  removedDecimals: BigNumber,\n  timelock: BigNumber\n}\n\nexport type ContractPool = {\n  stakingTokenId: string\n  rewardTokenId: string\n  totalStakingBalance: string\n  totalRewardBalance: string\n  startBlock: string\n  endBlock: string\n  latestRewardBlock: string\n  rewardPerPeriod: string\n  rewardPerToken: string\n  paidOut: string,\n  removedDecimals: string,\n  timelock: string\n}\n\nexport type PoolUserInfo = {\n  __typename: string\n  id: string\n  poolId: number\n  account: string\n  stakingBalance: BigNumber\n  rewardDebt: BigNumber,\n  depositBlock: BigNumber\n}\n\nexport type ContractPoolUserInfo = {\n  poolId: number\n  address: string\n  stakingBalance: string\n  rewardDebt: string,\n  depositBlock: string\n}\n\nexport type PoolFilterValues = {\n  stakedOnly: boolean\n  showLive: boolean\n  sortBy: string\n  search: string\n}\n\nexport enum PoolSortType {\n  DEFAULT = 0,\n  APR = 1,\n  TOTAL_STAKED = 2\n}\n\nexport type PoolDialogState = {\n  type: PoolDialogType\n  open: boolean\n}\n\nexport enum PoolDialogType {\n  DEPOSIT = 0,\n  WITHDRAW = 1,\n  CLAIM = 2\n}\n\nexport enum GlobalEvent {\n  ConfirmTransactionDialog = 'ConfirmTransactionDialog',\n  ConnectWalletDialog = 'ConnectWalletDialog',\n  NetworkBlockHeightChanged = 'NetworkBlockHeightChanged',\n  PoolFilterValuesChanged = 'PoolFilterValuesChanged',\n  PoolDeposit = 'PoolDeposit',\n  PoolWithdraw = 'PoolWithdraw',\n  PoolClaim = 'PoolClaim',\n  PoolUpdate = 'PoolUpdate'\n}\n\nexport type VmLog = {\n  event: string\n  topic: string\n  args: any\n}\n\nexport enum VmLogEvent {\n  PoolCreated = 'PoolCreated',\n  Deposit = 'Deposit',\n  Withdraw = 'Withdraw',\n  Claim = 'Claim'\n}","import { GenericType, Network, PoolFilterValues, PoolSortType, Token } from \"../util/types\"\n\nexport const CommonConstants = {\n  APP_NAME: 'VITCStake',\n  WEB_WALLET_STORAGE_SPACE: 'VSP_WEB_WALLET',\n  SESSION_WALLET_STORAGE_SPACE: 'VSP_SESSION_WALLET',\n  VITE_TOKEN_ID: 'tti_5649544520544f4b454e6e40',\n  REWARD_FACTOR: 1e36, // 10^36 = new BigNumber(10).pow(36)\n  VITECONNECT_URL: \"wss://viteconnect.thomiz.dev\",\n  nodes: {\n    testnet: \"wss://buidl.vite.net/gvite/ws\",\n    mainnet: \"wss://node-vite.thomiz.dev/ws\",\n    debug: \"ws://localhost:23457\"\n  }\n}\n\nexport const Networks: Network[] = [\n  {\n    id: 1,\n    networkId: 1,\n    name: 'DEBUG',\n    rpcUrl: CommonConstants.nodes.debug,\n    connectorUrl: CommonConstants.VITECONNECT_URL,\n    contractAddress: \"vite_8fad5a10ff04c23e07aa738a8c48e382c8c51eeed8a28c082c\",\n    contractType: \"0.2\"\n  },\n  {\n    id: 2,\n    networkId: 2,\n    name: 'TESTNET',\n    rpcUrl: CommonConstants.nodes.testnet,\n    connectorUrl: CommonConstants.VITECONNECT_URL,\n    contractAddress: \"vite_dcd10d6c5e72d616d5352c891040b49f5b333cfc039e40d5b6\",\n    contractType: \"0.1\"\n  },\n  {\n    id: 3,\n    networkId: 3,\n    name: 'VITCStake v0.1',\n    rpcUrl: CommonConstants.nodes.mainnet,\n    connectorUrl: CommonConstants.VITECONNECT_URL,\n    contractAddress: \"vite_cc2d0c2c34ae6af8bd58e111ca8c958d002c2b3199f449c8d7\",\n    contractType: \"0.1\"\n  },\n  {\n    id: 4,\n    networkId: 3,\n    name: 'VITCStake v0.2',\n    rpcUrl: CommonConstants.nodes.mainnet,\n    connectorUrl: CommonConstants.VITECONNECT_URL,\n    contractAddress: \"vite_c85b335e221fc99631785f3d579edd1b7a2691131b7f3998a3\",\n    contractType: \"0.2\"\n  },\n]\n\nexport const TypeNames = {\n  Pool: \"Pool\",\n  PoolUserInfo: \"PoolUserInfo\",\n  Token: \"Token\"\n}\n\nexport const UnknownToken: Token = {\n  __typename: TypeNames.Token,\n  id: \"-1\",\n  name: \"UNKNOWN\",\n  symbol: \"UNKNOWN\",\n  originalSymbol: \"UNKNOWN\",\n  decimals: 0,\n  iconUrl: undefined,\n  url: undefined\n}\n\nexport const PoolSortTypes: GenericType[] = [\n  {\n    name: \"\",\n    type: \"DEFAULT\"\n  },\n  {\n    name: \"APR\",\n    type: \"APR\"\n  },\n  {\n    name: \"Total staked\",\n    type: \"TOTAL_STAKED\"\n  }\n]\n\nexport const DefaultPoolFilterValues: PoolFilterValues = {\n  stakedOnly: false,\n  showLive: true,\n  sortBy: PoolSortTypes[PoolSortType.DEFAULT].type,\n  search: \"\"\n}","import { CommonUtil } from './common.util';\n\nexport class LogEventModel {\n  banner?: string;\n  args?: any[];\n\n  public constructor(init?: Partial<LogEventModel>) {\n    Object.assign(this, init);\n  }\n}\n\nexport interface ILogger {\n  // Make sure level is selected e.g. 'Verbose' in Chrome\n  readonly debug: any;\n  readonly info: any;\n  readonly warn: any;\n  readonly error: any;\n}\n\nconst noop = (): any => undefined;\n\nexport class ConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return console.debug.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return console.info.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return console.warn.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return console.error.bind(console);\n    } else {\n      return noop;\n    }\n  }\n}\n\nexport class ExtendedConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  private timestamp(type: string): string {\n    return `[${type} ${new Date().toLocaleTimeString()}]`;\n  }\n\n  private createLogEventModel(type: string, ...args: any[]): LogEventModel {\n    const mapFn = (e: any) => {\n      if (CommonUtil.isString(e)) {\n        return e;\n      } else if (e instanceof Error) {\n        return e.message;\n      }\n      return CommonUtil.toJsonString(e);\n    };\n    const result = new LogEventModel({\n      banner: this.timestamp(type),\n      args: args?.map(e => Array.isArray(e) ? e.map(e1 => mapFn(e1)) : mapFn(e))\n    });\n    return result;\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('DEBUG', args);\n        return Function.prototype.bind.call(console.debug, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('INFO', args);\n        return Function.prototype.bind.call(console.info, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('WARN', args);\n        return Function.prototype.bind.call(console.warn, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        if (args?.length > 0) {\n          if (!CommonUtil.isString(args[0])) {\n            args.push('(See console output for more information.)');\n          }\n        }\n        const result = this.createLogEventModel('ERROR', args);\n        return Function.prototype.bind.call(console.error, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n}\n\nconst logger = new ExtendedConsoleLogger();\n\nexport const getLogger = (): ILogger => {\n  return logger;\n}","import axios from 'axios';\n\ntype BaseResult<T> = {\n  code: number,\n  data: T\n}\n\nexport type TokenDetailResult = {\n  name: string\n  symbol: string\n  originalSymbol: string\n  tokenDecimals: number\n  urlIcon: string\n}\nexport type LPTokenValue = {\n  contractAddress: string,\n  tokenId: string,\n  supply: string,\n  usd: string,\n  tokens: {\n    contractAddress: string,\n    tokenId: string,\n    usd: string,\n    total: string,\n    amount: string,\n    price: string\n  }[]\n}\n\nexport class ViteAPIClient {\n  private readonly _baseUrl: string;\n  static lptokens = [\n    // VINUBNB\n    \"tti_e06b807b9c6fadd0391f8748\",\n    // VITCWBNB\n    \"tti_6312d2a685a9bd7a54250cb9\",\n    // VITCWONE\n    \"tti_f94c6bf7ffb1982691322d50\",\n    // VICATBNB\n    \"tti_135ae433038c18fe0797f528\",\n    // VIVABNB\n    \"tti_d05920af6f485fa52ffe4e69\"\n  ]\n\n  constructor() {\n    this._baseUrl = \"https://vite-api.thomiz.dev\"\n  }\n\n  async getTokenDetailAsync(tokenId: string): Promise<Maybe<TokenDetailResult>> {\n    const result = await axios.get<BaseResult<TokenDetailResult>>(`${this._baseUrl}/crypto-info/tokens/${tokenId}/details`);\n    return result.data.data;\n  }\n\n  async getLPTokenValue(tokenId: string): Promise<Maybe<LPTokenValue>>{\n    const result = await axios.get<LPTokenValue>(`${this._baseUrl}/lptokens/${tokenId}`);\n    return result.data;\n  }\n}\n\nconst client = new ViteAPIClient();\n\nexport const getViteAPIClient = () => {\n  return client;\n}\n","import fs from 'fs';\n\nexport abstract class FileUtil {\n  abstract readFileAsync(path: string): Promise<any>;\n}\n\nexport class BrowserFileUtil extends FileUtil {\n  async readFileAsync(path: string): Promise<any> {\n    const response = await fetch(path);\n    return response.text();\n  }\n}\n\nexport class LocalFileUtil extends FileUtil {\n  public async readFileAsync(path: string): Promise<any> {\n    return Promise.resolve(fs.readFileSync(path, 'utf8'));\n  }\n}\n\nexport enum FileUtilType {\n  Browser = 0,\n  Local = 1\n}\n\nexport const getFileUtil = (type: FileUtilType = FileUtilType.Browser) => {\n  switch (type) {\n    case FileUtilType.Local:\n      return new LocalFileUtil();\n    default:\n      return new BrowserFileUtil();\n  }\n}","export class Ensure {\n\n  public static notNull(property: any, propertyName: string, message?: string) {\n    if (property === null || property === undefined) {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static notNullOrWhiteSpace(property: Maybe<string>, propertyName: string, message?: string) {\n    if (property === null || property === undefined || property?.trim() === '') {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static maxLength(property: Maybe<string>, propertyName: string, maxLength: number) {\n    if (property && property.length > maxLength) {\n      throw new Error(`${propertyName} exceeds the maximum length of ${maxLength}`);\n    }\n  }\n\n}\n","import moment from 'moment';\n\nexport class MomentUtil {\n  private readonly _locale: string;\n\n  constructor(locale?: Maybe<string>) {\n    if (locale) {\n      this._locale = locale;\n    } else {\n      this._locale = navigator.language;\n    }\n    moment.locale(this._locale);\n  }\n\n  public getLocale(): string {\n    return this._locale;\n  }\n\n  public get(): moment.Moment {\n    return moment();\n  }\n\n  public getDuration(seconds: number): moment.Duration {\n    return moment.duration(seconds, 'seconds');\n  }\n\n  public getFromUnix(date: number) {\n    return moment.unix(date);\n  }\n\n  public getFromMilliseconds(date: number) {\n    return moment(date, 'x');\n  }\n\n  public getLocal(date: any): moment.Moment {\n    return moment.utc(date).local();\n  }\n\n  public getLocalTime(date: any): string {\n    return this.getLocal(date).format('LTS');\n  }\n\n  public getLocalDate(date: any): string {\n    return this.getLocal(date).format('L');\n  }\n\n  public getLocalFormatted(date: any): string {\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\n  }\n\n  public getLocalReverseFormatted(date: any): string {\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\n  }\n\n  public isExpired(timestamp: number): boolean {\n    try {\n      if (timestamp >= 0) {\n        return moment.utc().unix() >= timestamp;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { CoingeckoClient, getCoingeckoClient } from \"../clients/coingecko.client\";\nimport { getViteAPIClient, ViteAPIClient } from \"../clients/vite-api.client\";\nimport { TypeNames, UnknownToken } from \"../common/constants\";\nimport ActionQueue from \"../common/queue\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { Ensure } from \"../util/ensure\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { ContractPool, ContractPoolUserInfo, Network, Pool, PoolUserInfo, Token } from \"../util/types\";\nimport { getWalletManager, WalletAccount, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport interface IDataSource {\n  initAsync(network: Network): Promise<void>;\n  dispose(): void;\n  getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n  getNetworkBlockHeightAsync(): Promise<BigNumber>;\n  getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n  getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n  getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n  getTokenAsync(_id: string): Promise<Token>;\n  getTotalPoolsAsync(): Promise<number>;\n  depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n  withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}\n\nexport abstract class BaseDataSource implements IDataSource {\n  protected readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _coingeckoClient: CoingeckoClient;\n  private readonly _vitexClient: ViteAPIClient;\n  private readonly _coinUtil: CoinUtil;\n  private readonly _tokens: Map<string, Token>;\n  private readonly _queue: ActionQueue<string>;\n  private readonly _tokensURL: Map<string, string>;\n  private _moment: MomentUtil = new MomentUtil();\n\n  constructor() {\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._coingeckoClient = getCoingeckoClient();\n    this._vitexClient = getViteAPIClient();\n    this._coinUtil = getCoinUtil();\n    this._tokens = new Map<string, Token>();\n    this._tokensURL = new Map<string, string>([\n      [\"tti_22d0b205bed4d268a05dfc3c\", \"https://vitamincoin.org/home\"]\n    ])\n    this._queue = new ActionQueue<string>();\n  }\n\n  async initAsync(network: Network): Promise<void> {\n    logger.info(\"Init BaseDataSource\")();\n    this._moment = new MomentUtil();\n    await this.initAsyncProtected(network);\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing BaseDataSource\")();\n    this._tokens.clear();\n    this.disposeProtected();\n  }\n\n  getAccount(): WalletAccount {\n    const account = this._walletManager.getActiveAccount();\n    Ensure.notNull(account, \"account\", \"Please connect your wallet first.\");\n    return account as WalletAccount;\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    try {\n      if (pool.endTimestamp >= 0 && (this._moment.isExpired(pool.endTimestamp) || pool.latestRewardBlock === pool.endBlock)) {\n        // pool is closed, should not display numeric APR.\n        return undefined;\n      }\n      const [\n        rewardTokenPrice,\n        stakingTokenPrice\n      ] = await Promise.all([\n        pool.rewardToken,\n        pool.stakingToken\n      ].map(token => {\n        if(pool.rewardToken === pool.stakingToken)return new BigNumber(1)\n        if(ViteAPIClient.lptokens.includes(token.id))return getViteAPIClient().getLPTokenValue(token.id)\n          .then(data => new BigNumber(data?.usd || 0))\n        \n        return this._coingeckoClient.getTokenPriceUSDAsync(token.name)\n      }));\n      const totalTime = pool.endBlock.minus(pool.startBlock);\n      const secondsInYear = new BigNumber(365 * 24 * 60 * 60);\n      const usdRewardAmount = rewardTokenPrice.times(pool.totalRewards).shiftedBy(-pool.rewardToken.decimals)\n        .times(pool.removedDecimals);\n      const usdStakingAmount = stakingTokenPrice.times(pool.totalStaked).shiftedBy(-pool.stakingToken.decimals)\n        .times(pool.removedDecimals);\n      console.log(usdRewardAmount.toFixed(), usdStakingAmount.toFixed())\n      const apr = new BigNumber(usdRewardAmount)\n      .div(usdStakingAmount)\n      .div(totalTime)\n      .times(secondsInYear)\n      .times(100)\n      return !apr.isFinite() || apr.isNaN() ? undefined : apr;\n    } catch (error) {\n      logger.error(error)();\n      return undefined;\n    }\n  }\n\n  async getEndTimestampAsync(endBlock: BigNumber): Promise<number> {\n    try {\n      if (!endBlock || endBlock.lte(0)) {\n        return -1;\n      }\n      const networkBlockHeight = await this.getNetworkBlockHeightAsync();\n      const remainingSeconds = endBlock.minus(networkBlockHeight);\n      if (remainingSeconds.lte(0)) {\n        return 0;\n      }\n      return this._moment.get().add(remainingSeconds.toNumber(), \"seconds\").unix();\n    } catch (error) {\n      logger.error(error)();\n    }\n    return 0;\n  }\n\n  async getTokenAsync(id: string): Promise<Token> {\n    try {\n      if(this._tokens.has(id))return this._tokens.get(id) as Token;\n      // @ts-ignore\n      return await this._queue.queueAction<Token>(id, async () => {\n        if(this._tokens.has(id))return this._tokens.get(id) as Token;\n        const result = await this._vitexClient.getTokenDetailAsync(id);\n        if(!result)return\n        const token:Token = {\n          __typename: \"Token\",\n          id,\n          name: result.name,\n          symbol: result.symbol,\n          originalSymbol: result.originalSymbol,\n          decimals: result.tokenDecimals,\n          iconUrl: result.urlIcon,\n          url: this._tokensURL.get(id) || \"https://coinmarketcap.com/currencies/\" + this._coinUtil.mapCoinMarketCapName(result.name)\n        }\n        this._tokens.set(id, token);\n        return token;\n      });\n    } catch (error) {\n      logger.error(error)();\n    }\n    const unknownToken = {\n      ...UnknownToken,\n      id\n    }\n    this._tokens.set(id, unknownToken);\n    return unknownToken;\n  }\n\n  protected async toPoolAsync(id: number, p: ContractPool): Promise<Pool> {\n    const [\n      stakingToken,\n      rewardToken,\n      endTimestamp\n    ] = await Promise.all([\n      this.getTokenAsync(p.stakingTokenId),\n      this.getTokenAsync(p.rewardTokenId),\n      this.getEndTimestampAsync(new BigNumber(p.endBlock))\n    ]);\n    const pool: Pool = {\n      __typename: TypeNames.Pool,\n      id,\n      stakingToken,\n      rewardToken,\n      totalStaked: new BigNumber(p.totalStakingBalance),\n      totalRewards: new BigNumber(p.totalRewardBalance),\n      startBlock: new BigNumber(p.startBlock),\n      endBlock: new BigNumber(p.endBlock),\n      endTimestamp,\n      latestRewardBlock: new BigNumber(p.latestRewardBlock),\n      rewardPerPeriod: new BigNumber(p.rewardPerPeriod),\n      rewardPerToken: new BigNumber(p.rewardPerToken),\n      paidOut: new BigNumber(p.paidOut),\n      fetchTimestamp: this._moment.get().unix(),\n      removedDecimals: new BigNumber(p.removedDecimals || 1),\n      timelock: new BigNumber(p.timelock || 0)\n    };\n    return pool;\n  }\n\n  protected async toPoolUserInfoAsync(u: ContractPoolUserInfo): Promise<PoolUserInfo> {\n    return {\n      __typename: TypeNames.PoolUserInfo,\n      id: `${u.address}_${u.poolId}`,\n      poolId: u.poolId,\n      account: u.address,\n      stakingBalance: new BigNumber(u.stakingBalance),\n      rewardDebt: new BigNumber(u.rewardDebt),\n      depositBlock: new BigNumber(u.depositBlock)\n    }\n  }\n\n  protected abstract initAsyncProtected(network: Network): Promise<void>;\n\n  protected abstract disposeProtected(): void;\n\n  abstract getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n\n  abstract getNetworkBlockHeightAsync(): Promise<BigNumber>;\n\n  abstract getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n\n  abstract getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n\n  abstract getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n\n  abstract getTotalPoolsAsync(): Promise<number>;\n\n  abstract depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n\n  abstract withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\n\nconst logger = getLogger();\n\nexport class MockDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private _pools: Pool[];\n  private _users: PoolUserInfo[];\n  private _networkBlockHeight: BigNumber;\n  private _networkBlockHeightInterval?: NodeJS.Timeout;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._pools = [];\n    this._users = [];\n    this._networkBlockHeight = new BigNumber(0);\n    logger.info(\"MockDataSource loaded\")();\n  }\n\n  private initNetworkBlockHeight() {\n    this._networkBlockHeight = new BigNumber(0);\n    this._networkBlockHeightInterval = setInterval(() => {\n      this._networkBlockHeight = this._networkBlockHeight.plus(1);\n      // console.log(this._networkBlockHeight.toString())\n    }, 1000);\n  }\n\n  private async initPoolsAsync(): Promise<void> {\n    let pools = await this._fileUtil.readFileAsync(\"./assets/data/mock_pool_info.json\");\n    pools = JSON.parse(pools);\n    this._pools = [];\n    for (let index = 0; index < pools.length; index++) {\n      const p: ContractPool = pools[index];\n      const pool = await this.toPoolAsync(index, p);\n      pool.apr = await this.getAprAsync(pool);\n      this._pools.push(pool);\n    }\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    switch (pool.id) {\n      case 0:\n        return new BigNumber(2.12345678)\n      case 1:\n        return new BigNumber(3.55555555)\n      default:\n        return super.getAprAsync(pool)\n    };\n  }\n\n  private async initPoolUsersAsync(): Promise<void> {\n    let users = await this._fileUtil.readFileAsync(\"./assets/data/mock_user_info.json\");\n    users = JSON.parse(users);\n    this._users = [];\n    for (let index = 0; index < users.length; index++) {\n      const u: ContractPoolUserInfo = users[index];\n      const info = await this.toPoolUserInfoAsync(u);\n      this._users.push(info);\n    }\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    logger.info(\"MockDataSource initAsyncProtected\")();\n    this.initNetworkBlockHeight();\n    await this.initPoolsAsync();\n    await this.initPoolUsersAsync();\n  }\n\n  protected disposeProtected(): void {\n    if (this._networkBlockHeightInterval) {\n      clearInterval(this._networkBlockHeightInterval);\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    return new BigNumber(0);\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    return this._networkBlockHeight;\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    await CommonUtil.timeout(CommonUtil.random(100, 500));\n    const pool = this._pools[_id];\n    if (!_account) {\n      return pool;\n    }\n    return {\n      ...pool,\n      userInfo: await this.getPoolUserInfoAsync(_id, _account)\n    }\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    await CommonUtil.timeout(1000);\n    if (!_account) {\n      return this._pools;\n    }\n    const pools = [];\n    for (const p of this._pools) {\n      pools.push(await this.getPoolAsync(p.id, _account))\n    }\n    return pools;\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    return this._users.find(e => e.poolId === _poolId && e.account.toLowerCase() === _account?.toLowerCase());\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    return this._pools.length;\n  }\n\n  private async _updatePoolAsync(pool: Pool): Promise<void> {\n    const blockNumber = await this.getNetworkBlockHeightAsync();\n    const latestBlock = blockNumber < pool.endBlock ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock <= pool.latestRewardBlock) {\n      return;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(0)) {\n      pool.latestRewardBlock = latestBlock;\n      return;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    let userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (userInfo) {\n      // dispense rewards\n      if (userInfo.stakingBalance.gt(0)) {\n        const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n        pool.paidOut = pool.paidOut.plus(pendingAmount);\n      }\n      // update balances & recompute rewardDebt\n      userInfo.stakingBalance = userInfo.stakingBalance.plus(amount);\n      userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n    } else {\n      userInfo = await this.toPoolUserInfoAsync({\n        poolId: _id,\n        address: account,\n        stakingBalance: amount.toString(),\n        rewardDebt: \"0\",\n        depositBlock: \"0\"\n      });\n      this._users.push(userInfo);\n    }\n    pool.totalStaked = pool.totalStaked.plus(amount);\n    this._emitter.emitPoolDeposit(_id, new BigNumber(_amount), account);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    const userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (!userInfo) {\n      throw new Error(\"Withdraw not possible\")\n    }\n    if (userInfo.stakingBalance.lte(0) || amount.gt(userInfo.stakingBalance)) {\n      throw new Error(\"Insufficient balance\")\n    }\n\n    // dispense rewards\n    const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n    pool.paidOut = pool.paidOut.plus(pendingAmount);\n\n    // update balances & recompute rewardDebt\n    userInfo.stakingBalance = userInfo.stakingBalance.minus(amount);\n    pool.totalStaked = pool.totalStaked.minus(amount);\n    userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n\n    this._emitter.emitPoolWithdraw(_id, new BigNumber(_amount), account);\n    return true;\n  }\n}\n\nconst ds = new MockDataSource();\n\nexport const getMockDataSource = () => {\n  return ds;\n}","export class CachedFunctionCall<T> {\n  private readonly _duration: number;\n  private readonly _callbackFn: () => Promise<T>;\n  private _currentValue?: Maybe<T>;\n  private _lastExecution: number;\n\n  constructor(duration: number, callbackFn: () => Promise<T>) {\n    this._duration = duration;\n    this._callbackFn = callbackFn;\n    this._lastExecution = new Date(0).getTime();\n  }\n\n  private isExpired(): boolean {\n    return new Date().getTime() >= this._lastExecution + this._duration;\n  }\n\n  async getAsync(): Promise<T> {\n    if (!this._currentValue || this.isExpired()) {\n      this._currentValue = await this._callbackFn();\n      this._lastExecution = new Date().getTime();\n    }\n    return this._currentValue;\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { CommonConstants } from \"../common/constants\";\nimport { CachedFunctionCall } from \"../util/cache\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Contract, ContractPool, ContractPoolUserInfo, Network, Pool, PoolUserInfo, VmLog, VmLogEvent } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\n\nconst logger = getLogger();\n\nexport class ViteDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private readonly _client: ViteClient;\n  private readonly _offchainMethods: Map<string, string> = new Map<string, string>();\n  private readonly _cachedNetworkBlockHeight: CachedFunctionCall<number>;\n  private _contract?: Contract;\n  private _listener: any;\n  private _network?: Network;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._client = getViteClient();\n    this._cachedNetworkBlockHeight = new CachedFunctionCall(500, async () => {\n      // prevent function from being called more than once every 500 milliseconds\n      return await this._client.requestAsync(\"ledger_getSnapshotChainHeight\")\n    });\n    logger.info(\"ViteDataSource loaded\")();\n  }\n\n  protected async initAsyncProtected(network: Network): Promise<void> {\n    const contract = await this._fileUtil.readFileAsync(`./assets/contracts/beefstake${network.contractType}.json`);\n    this._contract = JSON.parse(contract) as Contract;\n    this._contract.address = network.contractAddress\n    logger.info(`Contract ${this._contract?.contractName} loaded`)();\n    this._network = network\n    this._listener = await this._client.createAddressListenerAsync(this._contract.address);\n    this._listener.on((results: any[]) => {\n      if (!this._contract?.abi) {\n        logger.info('Could not decode vmlog because contract abi is not defined.')();\n      } else {\n        for (let index = 0; index < results.length; index++) {\n          const result = results[index];\n          const vmLog = this._client.decodeVmLog(result.vmlog, this._contract.abi);\n          logger.info(vmLog ?? result)();\n          if (vmLog) {\n            this.handleVmLogAsync(vmLog);\n          }\n        }\n      }\n    });\n  }\n\n  protected disposeProtected(): void {\n    this.removeAddressListener();\n    this._offchainMethods.clear();\n  }\n\n  private removeAddressListener(): void {\n    if (this._listener) {\n      this._client.removeListener(this._listener);\n    }\n  }\n\n  private get contract(): Contract {\n    if (this._contract?.address === undefined) {\n      throw new Error(\"Contract is not defined.\");\n    } else {\n      return this._contract;\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    try {\n      if (CommonUtil.isNullOrWhitespace(_account)) {\n        return new BigNumber(0);\n      }\n      const result = await this._client.requestAsync(\"ledger_getAccountInfoByAddress\", _account);\n      if (!result?.balanceInfoMap) {\n        return new BigNumber(0);\n      }\n      return new BigNumber(result.balanceInfoMap[CommonConstants.VITE_TOKEN_ID].balance).div(new BigNumber(10).pow(18));\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    try {\n      const result = await this._cachedNetworkBlockHeight.getAsync();\n      return new BigNumber(result);\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolInfo\"), this.contract.offChain, [_id]);\n    const p = this.objectFromEntries(result) as ContractPool;\n    const pool = await this.toPoolAsync(_id, p);\n    const [\n      apr,\n      userInfo\n    ] = await Promise.all([\n      this.getAprAsync(pool),\n      this.getPoolUserInfoAsync(_id, _account)\n    ])\n    pool.apr = apr;\n    pool.userInfo = userInfo;\n    return pool;\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    const amount = await this.getTotalPoolsAsync();\n    const pools:Pool[] = [];\n    const promises = [];\n    for (let index = 0; index < amount; index++) {\n      // skip error vitcwust pool\n      // if(index === 17 && this._network?.id === 4)continue\n      promises.push((async () => {\n        try {\n          const pool = await this.getPoolAsync(index, _account);\n          pools.push(pool)\n        } catch (error) {\n          logger.error(error)();\n        }\n      })());\n    }\n    await Promise.all(promises);\n    return pools.sort((a, b) => a.id - b.id);\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (!_account || CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getUserInfo\"), this.contract.offChain, [_poolId, _account]);\n    const u = this.objectFromEntries(result) as ContractPoolUserInfo;\n    const info = await this.toPoolUserInfoAsync(u);\n    return info;\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolCount\"), this.contract.offChain, []);\n    return Number(result[0].value);\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"deposit\", this.contract.abi, [_id], _tokenId, _amount, this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"withdraw\", this.contract.abi, [_id, _amount], undefined, \"0\", this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  private getOffchainMethodAbi(name: string): any {\n    let result: Maybe<any>\n    if (this._offchainMethods.has(name)) {\n      result = this._offchainMethods.get(name)\n    } else {\n      result = this.contract.abi.find(e => e.type === \"offchain\" && e.name === name)\n      if (result) {\n        this._offchainMethods.set(name, result)\n      }\n    }\n    if (result) {\n      return result\n    } else {\n      throw new Error(`The offchain method '${name}' does not exist.'`)\n    }\n  }\n\n  private handleResponseAsync = async (address: string, height: string) => new Promise<void>((resolve, reject) => {\n    this._client.waitForAccountBlockAsync(address, height).then((result: any) => {\n      if (result?.status === 0) {\n        resolve()\n      } else {\n        reject(result?.statusTxt ?? \"Something went wrong.\")\n      }\n    })\n  })\n\n  private async handleVmLogAsync(vmlog: VmLog): Promise<void> {\n    try {\n      if (vmlog.event === VmLogEvent.Deposit && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolDeposit(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else if (vmlog.event === VmLogEvent.Withdraw && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolWithdraw(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else if (vmlog.event === VmLogEvent.Claim && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolClaim(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else {\n        logger.info('Unknown vmlog event.', vmlog)();\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  private objectFromEntries = (entries: any) => {\n    return Object.fromEntries(\n      entries.map((entry: any) => {\n        return [entry.name, entry.value];\n      })\n    );\n  }\n}\n\nconst ds = new ViteDataSource();\n\nexport const getViteDataSource = () => {\n  return ds;\n}","import { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { getMockDataSource, getViteDataSource, IDataSource } from \"../datasources\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\n\nconst logger = getLogger();\n\nexport class CommonContext {\n  private readonly _vite: ViteClient;\n  private _datasource: IDataSource;\n\n  constructor() {\n    this._vite = getViteClient();\n    this._datasource = getMockDataSource();\n  }\n\n  async initAsync(network: Network): Promise<void> {\n    await this.initViteClientAsync(network);\n    switch (network.id) {\n      default:\n        this._datasource = getViteDataSource();\n        break;\n    }\n    await this._datasource.initAsync(network);\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing CommonContext\")();\n    this._datasource.dispose();\n    this._vite.dispose();\n  }\n\n  get datasource(): IDataSource {\n    return this._datasource;\n  }\n\n  private async initViteClientAsync(network: Network): Promise<void> {\n    try {\n      await this._vite.initAsync(network);\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n}\n\nconst context = new CommonContext();\n\nexport const getCommonContext = () => {\n  return context;\n}","import { gql } from \"@apollo/client\";\nimport { ApolloContext } from \"../clients/apollo.client\";\n\nexport const DEPOSIT_MUTATION = gql`\nmutation Deposit($id: ID!, $tokenId: String!, $amount: String!) {\n  deposit(id: $id, tokenId: $tokenId, amount: $amount) @client\n}\n`;\n\nexport const WITHDRAW_MUTATION = gql`\nmutation Withdraw($id: ID!, $amount: String!) {\n  withdraw(id: $id, amount: $amount) @client\n}\n`;\n\nexport const PoolMutations = {\n  async deposit(parent: any, { id, tokenId, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.depositAsync(Number(id), tokenId, amount);\n  },\n  async withdraw(parent: any, { id, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.withdrawAsync(Number(id), amount);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_ACCOUNT_BALANCE_QUERY = gql`\n  query GetAccountBalance($account: String) {\n    accountBalance(account: $account) @client\n  }\n`;\n\nexport const AccountQueries = {\n  async accountBalance(parent: any, { account }: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getAccountBalanceAsync(account);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_NETWORK_BLOCK_HEIGHT_QUERY = gql`\n  query GetNetworkBlockHeight {\n    networkBlockHeight @client\n  }\n`;\n\nexport const NetworkQueries = {\n  async networkBlockHeight(parent: any, params: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getNetworkBlockHeightAsync();\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Token } from '../util/types';\n\nexport const TOKEN_FIELDS = gql`\n  fragment TokenFields on Token {\n    id\n    name\n    symbol\n    originalSymbol\n    decimals\n    iconUrl\n    url\n  }\n`;\n\nexport const GET_TOKEN_QUERY = gql`\n  ${TOKEN_FIELDS}\n  query GetToken($id: ID!) {\n    token(id: $id) @client {\n      ...TokenFields\n    }\n  }\n`;\n\nexport const TokenQueries = {\n  async token(parent: any, { id }: any, context: ApolloContext): Promise<Token> {\n    return context.client.datasource.getTokenAsync(id);\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Pool, PoolUserInfo } from '../util/types';\nimport { TOKEN_FIELDS } from './token';\n\nexport const POOL_FIELDS = gql`\n  fragment PoolFields on Pool {\n    id\n    stakingToken {\n      ...TokenFields\n    }\n    rewardToken {\n      ...TokenFields\n    }\n    apr\n    totalStaked\n    totalRewards\n    startBlock\n    endBlock\n    endTimestamp\n    latestRewardBlock\n    rewardPerPeriod\n    rewardPerToken\n    paidOut\n    userInfo {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const POOL_USER_INFO_FIELDS = gql`\n  fragment PoolUserInfoFields on PoolUserInfo {\n    id\n    poolId\n    account\n    stakingBalance\n    rewardDebt\n    depositBlock\n  }\n`;\n\nexport const GET_POOL_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPool($id: ID!, $account: String) {\n    pool(id: $id, account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_POOLS_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPools($account: String) {\n    pools(account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_TOTAL_POOLS_QUERY = gql`\n  query GetTotalPools {\n    totalPools @client\n  }\n`;\n\nexport const GET_POOL_USER_INFO_QUERY = gql`\n  ${POOL_USER_INFO_FIELDS}\n  query GetPoolUserInfo($poolId: Int!, $account: String) {\n    poolUserInfo(poolId: $poolId, account: $account) @client {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const PoolQueries = {\n  async pool(parent: any, { id, account }: any, context: ApolloContext): Promise<Pool> {\n    return context.client.datasource.getPoolAsync(Number(id), account);\n  },\n  async pools(parent: any, { account }: any, context: ApolloContext): Promise<Pool[]> {\n    return context.client.datasource.getPoolsAsync(account);\n  },\n  async totalPools(parent: any, params: any, context: ApolloContext): Promise<number> {\n    return await context.client.datasource.getTotalPoolsAsync();\n  },\n  async poolUserInfo(parent: any, { poolId, account }: any, context: ApolloContext): Promise<Maybe<PoolUserInfo>> {\n    return context.client.datasource.getPoolUserInfoAsync(Number(poolId), account);\n  }\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { GraphQLScalarType } from 'graphql';\nimport { getCommonContext } from '../contexts/common';\nimport { IDataSource } from '../datasources';\nimport { PoolMutations } from '../mutations';\nimport { NetworkQueries, PoolQueries, TokenQueries } from '../queries';\nimport { AccountQueries } from '../queries/account';\n\nexport type ApolloContext = {\n  cache: InMemoryCache,\n  client: ApolloClientWrapper,\n  clientAwareness: any,\n  getCacheKey: (obj: any) => string | undefined\n}\n\nexport class ApolloClientWrapper extends ApolloClient<NormalizedCacheObject> {\n  get datasource(): IDataSource {\n    return getCommonContext().datasource;\n  }\n}\n\nconst cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n      }\n    }\n  }\n});\n\nconst bigNumberScalar = new GraphQLScalarType({\n  name: 'BigNumber',\n  description: 'BigNumber custom scalar type',\n  serialize(value: BigNumber) {\n    return value.toString();\n  },\n  parseValue(value: string) {\n    return new BigNumber(value);\n  }\n});\n\nconst resolvers: any = {\n  BigNumber: bigNumberScalar,\n  Query: {\n    ...AccountQueries,\n    ...NetworkQueries,\n    ...PoolQueries,\n    ...TokenQueries\n  },\n  Mutation: {\n    ...PoolMutations\n  }\n};\n\n// https://www.apollographql.com/docs/react/networking/authentication/#header\nconst client = new ApolloClientWrapper({\n  // link: authLink.concat(httpLink),\n  cache: cache,\n  resolvers,\n  headers: {\n    'client-name': process.env.REACT_APP_NAME || 'client',\n    'client-version': process.env.REACT_APP_VERSION || '0',\n  },\n})\n\nexport const getApolloClient = () => {\n  return client;\n}","import BigNumber from \"bignumber.js\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\nimport { Networks } from \"./constants\";\n\nconst logger = getLogger();\n\nexport class NetworkManager {\n  private _networkHeight: BigNumber;\n  private _network?: Maybe<Network>;\n  private _setNetworkCallback?: (network?: Maybe<Network>) => void;\n\n  constructor() {\n    this._networkHeight = new BigNumber(0);\n  }\n\n  set networkHeight(height: BigNumber) {\n    this._networkHeight = height;\n  }\n\n  get networkHeight(): BigNumber {\n    return this._networkHeight;\n  }\n\n  set onSetNetworkCallback(cb: (network?: Maybe<Network>) => void) {\n    this._setNetworkCallback = cb;\n  }\n\n  getNetwork(): Maybe<Network> {\n    return this._network;\n  }\n\n  setNetwork(network?: Maybe<Network>): void {\n    this._network = network;\n    if (this._setNetworkCallback) {\n      this._setNetworkCallback(this._network);\n    }\n  }\n\n  getNetworks(): Network[] {\n    try {\n      const ids = process.env.REACT_APP_NETWORKS?.split(\",\").map(e => Number(e));\n      return Networks.filter(e => ids?.includes(e.id))\n    } catch (error) {\n      logger.error(error)\n    }\n    return Networks;\n  }\n}\n\nconst manager = new NetworkManager();\n\nexport const getNetworkManager = () => {\n  return manager;\n}","import React from 'react';\nimport { AppBar, styled, Toolbar, Typography } from '@mui/material';\nimport { CommonConstants } from '../../../../common/constants';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`,\n);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`,\n);\n\nexport const HeaderLoading: React.FC = (props: any) => {\n  return (\n    <Root>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <img src={\"./logo_white.png\"} alt=\"logo\" width=\"30\" /> */}\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n          </TitleTypography>\n        </Toolbar>\n      </AppBar>\n    </Root>\n  )\n}","import { styled } from '@mui/material';\nimport React from 'react';\n\nconst MainWrapperStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  bgcolor: 'background.default\n`,\n);\n\nexport const MainWrapper: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\n}\n","import React, { useState } from 'react';\nimport { getNetworkManager } from '../common/network';\nimport { Network } from '../util/types';\nimport { getWalletManager, SessionWallet, WebWallet } from '../wallet';\n\nexport interface IWeb3Context {\n  setError: (error: Error) => void,\n  error?: Maybe<Error>,\n  wallet?: Maybe<WebWallet | SessionWallet>\n  network?: Maybe<Network>\n}\n\nconst Web3Context = React.createContext<Maybe<IWeb3Context>>(undefined)\n\nexport const useWeb3Context = () => {\n  const context = React.useContext(Web3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\nexport const Web3Provider: React.FC<Props> = (props: Props) => {\n  const [error, setError] = useState<Maybe<Error>>(null)\n  const [wallet, setWallet] = useState<Maybe<WebWallet | SessionWallet>>(null)\n  const [network, setNetwork] = useState<Maybe<Network>>(null)\n\n  const walletManager = getWalletManager()\n  walletManager.onSetWalletCallback = setWallet\n\n  const networkManager = getNetworkManager()\n  networkManager.onSetNetworkCallback = setNetwork\n\n  const context: IWeb3Context = {\n    setError,\n    error,\n    wallet,\n    network\n  }\n\n  return (\n    <Web3Context.Provider value={context}>{props.children}</Web3Context.Provider>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Networks } from '../common/constants';\nimport { getNetworkManager } from '../common/network';\nimport { MainLoading } from '../features/main/components/loading';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\nimport { getWalletManager } from '../wallet';\nimport { getCommonContext } from './common';\nimport { useWeb3Context } from './web3';\n\nconst logger = getLogger()\n\nexport interface IConnectedWeb3Context {\n  account?: string\n  network?: Maybe<Network>\n  logout: () => void\n}\n\nconst ConnectedWeb3Context = React.createContext<Maybe<IConnectedWeb3Context>>(undefined)\n\n/**\n * This hook can only be used by components under the `ConnectedWeb3` component. Otherwise it will throw.\n */\nexport const useConnectedWeb3Context = () => {\n  const context = React.useContext(ConnectedWeb3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\n/**\n * Component used to render components that depend on Web3 being available. These components can then\n * `useConnectedWeb3Context` safely to get web3 stuff without having to null check it.\n */\nexport const ConnectedWeb3: React.FC<Props> = (props: Props) => {\n  const [connection, setConnection] = useState<IConnectedWeb3Context | null>(null)\n  const web3Context = useWeb3Context()\n  const commonContext = getCommonContext()\n\n  const { wallet, network } = web3Context\n\n  useEffect(() => {\n    if (!wallet) {\n      const walletManager = getWalletManager()\n      walletManager.initWallet()\n    }\n  }, [wallet])\n\n  useEffect(() => {\n    if (!network) {\n      const networkManager = getNetworkManager()\n      const networkId = Number(process.env.REACT_APP_DEFAULT_NETWORK ?? \"3\");\n      networkManager.setNetwork(Networks.find(e => e.id === networkId))\n      logger.info(\"Network:\", networkManager.getNetwork())()\n    }\n  }, [network])\n\n  const logout = useCallback(() => {\n    const walletManager = getWalletManager()\n    walletManager.removeWallet()\n    window.location.reload()\n  }, [])\n\n  useEffect(() => {\n    const value = {\n      account: wallet?.active?.address,\n      network,\n      logout\n    }\n\n    logger.info('ConnectedWeb3.account', wallet?.active?.address)()\n\n    const initAsync = async () => {\n      if (network) {\n        logger.info('Init ConnectedWeb3')()\n        try {\n          setConnection(null)\n          await commonContext.initAsync(network)\n          setConnection(value)\n        } catch (error) {\n          logger.error(error)();\n        }\n      }\n    }\n    initAsync()\n    return () => {\n      commonContext.dispose()\n    }\n  }, [wallet, network, logout, commonContext])\n\n  if (!connection) {\n    return MainLoading()\n  }\n\n  const value = {\n    ...connection\n  }\n\n  return (\n    <ConnectedWeb3Context.Provider value={value}>{props.children}</ConnectedWeb3Context.Provider>\n  )\n}","\nimport { Typography, Grid, CircularProgress } from '@mui/material';\n//import { Footer } from '../../../layout/components/footer';\nimport { HeaderLoading } from '../../../layout/components/header-loading';\n//import { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\n\nexport const MainLoading = () => {\n  return (\n    <MainWrapper>\n      <HeaderLoading />\n      <Grid container position={'fixed'} height={'100%'} justifyContent=\"center\" alignItems=\"center\">\n        <Typography>\n          <CircularProgress />\n        </Typography>\n      </Grid>\n    </MainWrapper>\n  )\n}\n","import { CommonUtil } from './common.util';\n\nexport abstract class FormatUtil {\n  static formatMessage(data: any): string {\n    const defaultMessage = \"Something went wrong.\"\n    if (data) {\n      console.log(data)\n      let message: string\n      if (!CommonUtil.isString(data)) {\n        if (data.message) {\n          message = data.message\n        }\n        else if (data.error?.message) {\n          message = data.error.message\n        } else if (data.graphQLErrors) {\n          if (data.graphQLErrors.length > 0) {\n            message = data.graphQLErrors[0].message\n          } else {\n            message = defaultMessage\n          }\n        } else {\n          message = JSON.stringify(data)\n          if (message === \"{}\") {\n            message = defaultMessage\n          }\n        }\n      } else {\n        message = data\n      }\n      if (message.length > 128) {\n        return message.substr(0, 128) + \"...\"\n      }\n      return message\n    }\n    return defaultMessage\n  }\n}","import { ProviderContext } from \"notistack\";\nimport { FormatUtil } from \"./format.util\";\n\nexport abstract class SnackbarUtil {\n  static snackbar: ProviderContext;\n  static enqueueError(error: any): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(FormatUtil.formatMessage(error));\n  }\n  static enqueueMessage(message: string): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(message);\n  }\n}","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\n\nexport const LightTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}));\n\nexport const BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nexport const HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}));","import CropSquareIcon from '@mui/icons-material/CropSquare';\nimport { Box, Chip, Grid, Typography, Link } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport TelegramIcon from '@mui/icons-material/Telegram';\n\n\nexport const Footer: React.FC = () => {\n  const [networkBlockHeight, setNetworkBlockHeight] = useState(new BigNumber(0))\n  const [rotated, setRotated] = useState(false)\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (height: BigNumber) => {\n      const heightString = height.toString();\n      let heightRef = height;\n      if (heightString.length > 1) {\n        heightRef = new BigNumber(heightString.substr(heightString.length - 1, heightString.length))\n      }\n      setRotated(heightRef.mod(2).eq(0));\n      setNetworkBlockHeight(height);\n    }\n    emitter.on(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    };\n  }, [emitter]);\n\n  //https://codepen.io/sosuke/pen/Pjoqqp  //discord-brands.svg #FF6729 - CSS filter generator to convert from black to target hex color\n  return (\n    <Box sx={{ py: \"10px\", px: \"24px\", background: \"#171716\", color: \"#AFAEAC\", width: \"100%\"}}>\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n          <Grid container xs={12} md={8} justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item>\n              <Link color=\"secondary\" underline=\"none\" href={\"https://www.vitamincoin.org/home\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n                vitamincoin\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link color=\"secondary\" underline=\"none\" href={\"https://vitaminfaucet.com\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n                faucet\n              </Link>\n            </Grid>\n            <Grid item>\n            <Link color=\"secondary\" underline=\"none\" href={\"https://swap.vitc.org/\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n                vitcswap\n              </Link>\n            </Grid>\n          </Grid>\n          <Grid direction=\"row\" container xs={12} md={3} justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item>\n              <Typography style={{fontSize:12}}>Connect to us in</Typography>\n            </Grid>\n            <Grid item>\n            <Link color=\"secondary\" underline=\"none\" href={\"https://discord.gg/vitamincoin\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n              <img alt=\"staking\" src={\"./discord-brands.svg\"} width=\"24\" style={{filter: \"invert(50%) sepia(58%) saturate(2593%) hue-rotate(341deg) brightness(99%) contrast(104%)\"}} />\n            </Link>\n            </Grid>\n            <Grid item>\n            <Link color=\"secondary\" underline=\"none\" href={\"https://twitter.com/vitamin_coin\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n              <TwitterIcon></TwitterIcon>\n            </Link>\n            </Grid>\n            <Grid item>\n            <Link color=\"secondary\" underline=\"none\" href={\"https://t.me/vitcofficial\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n              <TelegramIcon></TelegramIcon>\n            </Link>\n            </Grid>\n          </Grid>\n          <Grid direction=\"row\" container xs={12} md={1} justifyContent=\"right\" alignItems=\"right\">\n            <Grid item>\n              <BootstrapTooltip title=\"Network block height\" placement=\"top\" arrow>\n                <Typography variant=\"caption\" sx={{ verticalAlign: \"middle\", display: \"inline-flex\" }}>\n                  <CropSquareIcon sx={{\n                    color: \"gray\",\n                    mr: \"2px\",\n                    transform: rotated ? \"rotate(45deg)\" : \"rotate(0deg)\",\n                    fontSize: \"17px\"\n                  }} />\n                  {networkBlockHeight.toString()}\n                </Typography>\n              </BootstrapTooltip>\n            </Grid>\n            <Grid item>\n              <BootstrapTooltip title=\"Version\" placement=\"top\" arrow>\n                <Chip label={'v' + process.env.REACT_APP_VERSION} variant=\"outlined\" size=\"small\" sx={{color: \"#AFAEAC\"}}/>\n              </BootstrapTooltip>\n            </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n","import React, { useEffect, useRef } from 'react';\nimport { qrcode, modes, ecLevel } from 'qrcode.es';\n\ninterface Props {\n  text?: string\n}\n\nexport const QrCode: React.FC<Props> = (props: Props) => {\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const defaultOpt = {\n      size: 240,\n      ecLevel: ecLevel.HIGH,\n      minVersion: 4,\n      background: '#fff',\n      mode: modes.DRAW_WITH_IMAGE_BOX,\n      radius: 0,\n      image: process.env.PUBLIC_URL + '/Vault_gradient.png',\n      mSize: 0.3\n    };\n\n    if (props.text && elementRef.current) {\n      elementRef.current.innerHTML = ''\n      const q = new qrcode(elementRef.current);\n      q.generate(props.text, defaultOpt).then(() => {\n        console.log('QR code generated')\n      });\n    }\n  }, [props.text])\n\n  return (\n    <div ref={elementRef}></div>\n  );\n}\n","import { Dialog, DialogContent, DialogTitle, Typography, Grid } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect } from 'react';\nimport { getViteClient } from '../../../../clients/vite.client';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { QrCode } from '../qrcode';\n\ninterface Props {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  onClose: () => void;\n}\n\nexport const LoginDialog: React.FC<Props> = (props: Props) => {\n  const { onClose, open, setOpen } = props;\n  const viteClient = getViteClient();\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConnectWalletDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConnectWalletDialog, handleEvent)\n    };\n  }, [emitter, setOpen]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  if (!viteClient.connector) {\n    return (\n      <>\n      </>\n    )\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={open} maxWidth=\"xs\">\n      <Grid container justifyContent=\"center\" alignItems=\"center\" color=\"text.primary\">\n      <DialogTitle>Connect Wallet</DialogTitle>\n      <Typography sx={{ mb: 2}}>Scan the QR code via Vite Wallet App</Typography>\n      </Grid>\n      <DialogContent sx={{ textAlign: \"center\", background: \"white\" }}>\n        <Box sx={{ m: 2, textAlign: \"center\", background: \"white\" }}>\n          <QrCode text={viteClient.connector?.uri}></QrCode>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import { FormControl, MenuItem, Select, SelectChangeEvent, styled } from '@mui/material';\nimport React, { useState } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { Network } from '../../../../util/types';\n\nconst NetworksFormControl = styled(FormControl)(\n  ({ theme }) => ({\n    margin: theme.spacing(1),\n    '& > div > div': {\n      color: theme.palette.common.white\n    },\n    '& .MuiSvgIcon-root': {\n      color: theme.palette.common.white\n    }\n  }));\n\nexport const NetworkList: React.FC = () => {\n  const networkManager = getNetworkManager()\n  const networks = networkManager.getNetworks()\n  const [network, setNetwork] = useState<Maybe<Network>>(networkManager.getNetwork())\n\n  const handleChange = (event: SelectChangeEvent) => {\n    const selectedNetwork = networks.find(e => e.id.toString() === event.target.value)\n    if (selectedNetwork) {\n      setNetwork(selectedNetwork)\n      networkManager.setNetwork(selectedNetwork)\n    }\n  }\n\n  return (\n    networks.length > 0 ? (\n      <NetworksFormControl variant=\"outlined\" size=\"small\">\n        <Select\n          labelId=\"select-network-label\"\n          id=\"select-network-label\"\n          value={network?.id.toString()}\n          onChange={handleChange}\n          className=\"MuiSelect-root\"\n        >\n          {networks.map(e => {\n            return (\n              <MenuItem key={e.id.toString()} value={e.id.toString()}>{e.name}</MenuItem>\n            )\n          })}\n        </Select>\n      </NetworksFormControl>\n    ) : (\n      <></>\n    )\n  );\n}","import useMediaQuery from '@mui/material/useMediaQuery';\nimport { createContext, useContext, useEffect, useState } from \"react\";\n\nconst ThemeCtx = createContext();\n// Creates a new context object\n\n\nexport function ThemeCtxProvider({ children }) {\n  // check whether the client's system has enabled dark theme\n  // if enabled then, use dark theme by default\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");   \n\n  // state variable to check wheather dark mode is enabled or not\n  const [darkMode, setDarkMode] = useState();\n\n  useEffect(() => {\n    if (localStorage.getItem('theme') === \"dark\") {\n      // if user has opted for dark theme\n      // then set the value of darkMode as true\n      setDarkMode(true);\n    } else if (localStorage.getItem('theme') === \"light\") {\n      // if user has opted for light theme\n      // then set the value of darkMode as false\n      setDarkMode(false);\n    } else {\n      // if there is nothing in the local storage\n      // then, use the system theme by default\n      setDarkMode(prefersDarkMode);\n    }\n  }, [prefersDarkMode]);\n\n  // toggle the theme function\n  const handleDarkMode = () => {\n    if (darkMode) {\n      // if dark theme is enabled,\n      // then disable it and select the light theme\n      localStorage.setItem('theme', \"light\");\n      setDarkMode(false);\n    } else {\n      // if dark theme is disabled,\n      // then enable it and select the dark theme\n      localStorage.setItem('theme', \"dark\");\n      setDarkMode(true);\n    }\n  };\n  \n  // return the, Provider component that allows the\n  // consuming components to subscribe to context\n  // changes.\n  return (\n    <ThemeCtx.Provider value={{ darkMode, handleDarkMode }}>\n      {children}\n    </ThemeCtx.Provider>\n  );\n}\n\nexport function useThemeMode(props) {\n  // return the current context value for themeCtx\n  // i.e. darkMode and handleDarkMode\n  return useContext(ThemeCtx);\n}","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { AppBar, Chip, styled, tooltipClasses, Typography, Link } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { CommonConstants } from '../../../../common/constants';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\nimport { LoginDialog } from '../../../main/components/login';\nimport { NetworkList } from '../../../main/components/network-list';\nimport IconButton from '@mui/material/IconButton';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { useThemeMode } from \"../../../../hooks/themeContext\";\n\nimport \"../menu/navbar.css\";\nimport DehazeIcon from '@mui/icons-material/Dehaze';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`);\n\nexport const Header: React.FC = (props: any) => {\n  const context = useConnectedWeb3Context();\n  const [loginOpen, setLoginOpen] = React.useState(false);\n  const handleClickLogin = () => {\n    setLoginOpen(true);\n  };\n  const handleClickLogout = () => {\n    context.logout();\n  };\n  const handleLoginClose = () => {\n    setLoginOpen(false);\n  };\n  const truncateAddress = (address?: string) => {\n    return CommonUtil.truncateStringInTheMiddle(address, 10, 5)\n  }\n\n  const { darkMode, handleDarkMode } = useThemeMode();\n\n  //mobile detect\n  const [state, setState] = useState({\n    mobileView: false,\n    drawerOpen: false,\n  });\n  const { mobileView } = state;\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\n    };\n    setResponsiveness();\n    window.addEventListener(\"resize\", () => setResponsiveness());\n    return () => {\n      window.removeEventListener(\"resize\", () => setResponsiveness());\n    };\n  }, []);\n  //end mobile detect\n\n  const [isNavExpanded, setIsNavExpanded] = useState(false);\n\n  return (\n    <Root>\n      <AppBar position=\"static\" color=\"primary\">\n        <nav className=\"navigation\">\n          <img src={\"./Vault_gradient.png\"} alt=\"logo\" width=\"60\" className='navLogo'/>\n          <TitleTypography variant=\"h6\" className='navTitle'>\n            {CommonConstants.APP_NAME}\n            <TitleTypography sx={{ fontSize: 11 }}>\n              By VitaminCoin\n            </TitleTypography>\n          </TitleTypography>\n      <div\n        className={\n          isNavExpanded ? \"navigation-menu expanded\" : \"navigation-menu\"\n        }\n      >\n        <ul>\n          <li>\n              <Link color=\"inherit\" underline=\"none\" href={\"https://www.vitamincoin.org/home\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n                VITAMINCOIN\n              </Link>\n              </li>\n              <li>\n              <Link color=\"inherit\" underline=\"none\" href={\"https://vitaminfaucet.com\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n                FAUCET\n              </Link>\n              </li>\n              <li>\n              <Link color=\"inherit\" underline=\"none\" href={\"https://swap.vitc.org/\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n                VITCSWAP\n              </Link>\n              </li>\n              \n              {context.account ? (\n            <>\n              {mobileView ? (\n                  <>\n                  </>\n                ) : (\n                  <li>\n                  <BootstrapTooltip sx={{ [`& .${tooltipClasses.tooltip}`]: { maxWidth: \"none\" } }} title={context.account} placement=\"bottom\" arrow>\n                    <Chip sx={{ color: \"white\", '& .MuiChip-icon': { color: \"white\" } }} icon={<AccountCircleIcon />} label={truncateAddress(context.account)} variant=\"outlined\" />\n                  </BootstrapTooltip >\n                  </li>\n                )}\n                <li>\n              <Link color=\"inherit\" underline=\"none\" onClick={handleClickLogout} sx={{cursor: \"pointer\"}}>\n                Logout\n              </Link>\n              </li>\n            </>\n          ) : (\n            <>\n            <li>\n              <Link color=\"inherit\" underline=\"none\" onClick={handleClickLogin} sx={{cursor: \"pointer\"}}>\n                Login\n              </Link>\n              <LoginDialog open={loginOpen} setOpen={setLoginOpen} onClose={handleLoginClose}></LoginDialog>           \n            </li>\n            </>\n          )}  \n        </ul>\n      </div>\n      <IconButton sx={{ ml: 1 }} onClick={() => handleDarkMode()} color=\"inherit\">\n        {darkMode ? <Brightness7Icon /> : <Brightness4Icon />}\n      </IconButton>\n      <NetworkList></NetworkList>\n      <Link className=\"hamburger\" onClick={() => {\n          setIsNavExpanded(!isNavExpanded);\n        }}>\n        <DehazeIcon/>\n      </Link>\n</nav>\n      </AppBar>\n    </Root >\n  )\n}","import { Container, styled } from '@mui/material';\nimport * as React from 'react';\n\nconst MainScrollStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: center;\n  padding-bottom: 15px;\n  //padding-top: 30px;\n  overflow: auto;\n  overflow-x: hidden;\n`,\n);\n\nconst MainScrollInner = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`,\n);\n\nexport const MainScroll: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return (\n    <MainScrollStyled {...restProps}>\n      <Container maxWidth=\"lg\">\n        <MainScrollInner>{children}</MainScrollInner>\n      </Container>\n    </MainScrollStyled>\n  )\n}\n","import React from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { CommonUtil } from '../../../../util/common.util';\n\ninterface Props {\n  message: string\n  type: 'default' | 'warning'\n  error?: any\n  color?: string\n  backgroundColor?: string\n}\n\nexport const Alert: React.FC<Props> = (props: Props) => {\n  let color = '#000000';\n  let backgroundColor = 'rgba(255, 255, 255, 0.5)';\n\n  switch (props.type) {\n    case 'warning':\n      color = '#611a15';\n      backgroundColor = 'rgba(255, 0, 0, 0.1)';\n      break;\n    default:\n      break;\n  }\n\n  if (props.error) {\n    console.log(CommonUtil.toJsonString(props.error));\n  }\n\n  return (\n    <Paper>\n      <Box sx={{\n        color: props.color ?? color,\n        backgroundColor: props.backgroundColor ?? backgroundColor,\n        padding: '15px',\n        textAlign: 'center'\n      }}>\n        <Typography>{props.message}</Typography>\n      </Box>\n    </Paper>\n  );\n}\n","import { Checkbox, FormControl, FormControlLabel, FormGroup, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack, Switch, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { DefaultPoolFilterValues, PoolSortTypes } from \"../../../../common/constants\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { PoolFilterValues } from \"../../../../util/types\";\n\n\n\n\nexport const PoolFilter: React.FC = () => {\n  const [values, setValues] = useState<PoolFilterValues>(DefaultPoolFilterValues);\n  const emitter = getEmitter();\n\n  const emitEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n    emitter.emitPoolFilterValuesChanged(oldValues, newValues);\n  }\n\n  const handleSortByChange = (event: SelectChangeEvent) => {\n    const newValues = { ...values, sortBy: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleCheckedChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.checked };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mb: 2 }}>\n      <Grid item xs={12} md={10}>\n        <Grid container>\n          <Grid item xs sx={{ mr: 2, mb: 2 }}>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControlLabel control={<Checkbox\n                  checked={values.stakedOnly}\n                  onChange={handleCheckedChange('stakedOnly')} />} label=\"Staked only\" />\n                <Stack direction=\"row\" alignItems=\"center\" >\n                  <Typography>Ended</Typography>\n                  <Switch checked={values.showLive} onChange={handleCheckedChange('showLive')} />\n                  <Typography>Live</Typography>\n                </Stack>\n              </Stack>\n            </FormGroup>\n          </Grid>\n          <Grid item>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControl size=\"small\" sx={{ minWidth: \"120px\" }}>\n                  <InputLabel id=\"sortby-select-label\">Sort by</InputLabel>\n                  <Select\n                    labelId=\"sortby-select-label\"\n                    id=\"sortby-select\"\n                    value={values.sortBy}\n                    label=\"Sort by\"\n                    onChange={handleSortByChange}\n                  >\n                    {PoolSortTypes.map(e => (\n                      <MenuItem key={e.type} value={e.type}>{e.name}&nbsp;</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  id=\"search\"\n                  value={values.search}\n                  label=\"Search\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  autoComplete=\"off\"\n                  onChange={handleChange('search')}\n                />\n              </Stack>\n            </FormGroup>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { MomentUtil } from \"../util/moment.util\";\n\nexport class MomentFactory {\n  private readonly _map: Map<string, MomentUtil>\n\n  constructor() {\n    this._map = new Map<string, MomentUtil>();\n  }\n\n  create(locale?: Maybe<string>): MomentUtil {\n    const _locale = locale ?? navigator.language;\n    let util = this._map.get(_locale);\n    if (!util) {\n      util = new MomentUtil(_locale);\n      this._map.set(_locale, util);\n    }\n    return util;\n  }\n}\n\nconst factory = new MomentFactory();\n\nexport const getMomentFactory = (): MomentFactory => {\n  return factory;\n}","import { orderBy, partition } from \"lodash\";\nimport { PoolSortTypes } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories/moment.factory\";\nimport { Pool, PoolFilterValues, PoolSortType } from \"./types\";\n\nexport abstract class FilterUtil {\n  static filterPools(filter: PoolFilterValues, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools) {\n      return pools;\n    }\n    const moment = getMomentFactory().create();\n    const [closedPools, openPools] = partition(pools, (pool) => pool.endTimestamp >= 0 && moment.get().unix() >= pool.endTimestamp);\n    let filtered: Pool[] = openPools;\n    if (filter.showLive) {\n      if (filter.stakedOnly) {\n        filtered = openPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = openPools;\n      }\n    } else {\n      if (filter.stakedOnly) {\n        filtered = closedPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = closedPools;\n      }\n    }\n    const sorted = FilterUtil.sortPools(filter.sortBy, filtered);\n    return FilterUtil.searchPools(filter.search, sorted);\n  }\n\n  static sortPools(sortBy: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !sortBy) {\n      return pools;\n    }\n    switch (sortBy) {\n      case PoolSortTypes[PoolSortType.APR].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.apr?.toNumber() ?? 0,\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.TOTAL_STAKED].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.totalStaked.toNumber(),\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.DEFAULT].type:\n      default:\n        return pools;\n    }\n  }\n\n  static searchPools(term: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !term) {\n      return pools;\n    }\n    const lowerCaseTerm = term.toLowerCase();\n    return pools.filter((pool: Pool) =>\n      pool.rewardToken.originalSymbol.toLowerCase().includes(lowerCaseTerm) || pool.stakingToken.originalSymbol.toLowerCase().includes(lowerCaseTerm)\n    );\n  }\n}","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { CommonConstants } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories\";\nimport { DEPOSIT_MUTATION, WITHDRAW_MUTATION } from \"../mutations\";\nimport { Deposit, DepositVariables } from \"../mutations/__generated__/Deposit\";\nimport { Withdraw, WithdrawVariables } from \"../mutations/__generated__/Withdraw\";\nimport { GET_POOL_QUERY, GET_POOL_USER_INFO_QUERY } from \"../queries\";\nimport { GetPool, GetPoolVariables } from \"../queries/__generated__/GetPool\";\nimport { GetPoolUserInfo, GetPoolUserInfoVariables } from \"../queries/__generated__/GetPoolUserInfo\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { Pool } from \"../util/types\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class PoolService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n  private readonly _moment: MomentUtil;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n    this._moment = getMomentFactory().create();\n  }\n\n  async getAsync(_id: number, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<Maybe<Pool>> {\n    try {\n      const poolQuery = await this._apollo.query<GetPool, GetPoolVariables>({\n        query: GET_POOL_QUERY,\n        variables: {\n          id: _id.toString()\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const userInfoQuery = await this._apollo.query<GetPoolUserInfo, GetPoolUserInfoVariables>({\n        query: GET_POOL_USER_INFO_QUERY,\n        variables: {\n          poolId: _id,\n          account: this._walletManager.getActiveAccount()?.address\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const pool = poolQuery.data.pool as unknown as Pool;\n      return {\n        ...pool,\n        userInfo: userInfoQuery.data.poolUserInfo,\n        fetchTimestamp: this._moment.get().unix()\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Deposit, DepositVariables>({\n      mutation: DEPOSIT_MUTATION,\n      variables: {\n        id: _id.toString(),\n        tokenId: _tokenId,\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.deposit ?? false);\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Withdraw, WithdrawVariables>({\n      mutation: WITHDRAW_MUTATION,\n      variables: {\n        id: _id.toString(),\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.withdraw ?? false);\n  }\n\n  updateRewardPerToken(pool: Maybe<Pool>, blockNumber: BigNumber): boolean {\n    if (!pool?.userInfo) {\n      return false;\n    }\n\n    const latestBlock = blockNumber.lt(pool.endBlock) ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock.lte(pool.latestRewardBlock)) {\n      return false;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(new BigNumber(0))) {\n      pool.latestRewardBlock = latestBlock;\n      return true;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n    return true;\n  }\n}\n\nconst service = new PoolService();\n\nexport const getPoolService = () => {\n  return service;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { Pool } from \"./types\";\n\nexport abstract class ViteUtil {\n  static calculateRewardTokens(pool: Maybe<Pool>): BigNumber {\n    if (!pool?.userInfo) {\n      return new BigNumber(0);\n    }\n    return (pool.userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(pool.userInfo.rewardDebt));\n  }\n\n  static formatBigNumber(bn: BigNumber, tokenDecimals: number, decimals: number): string {\n    return bn.shiftedBy(-tokenDecimals).decimalPlaces(decimals, BigNumber.ROUND_DOWN).toFormat();\n  }\n}","import { LoadingButton } from '@mui/lab';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode\n  size?: 'small' | 'medium' | 'large'\n  variant?: 'text' | 'outlined' | 'contained'\n  color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning',\n  fullWidth?: boolean\n  autoFocus?: boolean\n  disabled?: boolean\n  callbackFn: () => Promise<void>\n}\n\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\n  const [isDisabled, setIsDisabled] = React.useState(false)\n\n  const handleClick = async () => {\n    setIsDisabled(true)\n    try {\n      await props.callbackFn()\n    } catch (error) {\n      console.log(error)\n    }\n    setIsDisabled(false)\n  }\n\n  return (\n    <LoadingButton\n      loading={isDisabled}\n      size={props.size ?? \"small\"}\n      variant={props.variant ?? \"contained\"}\n      color={props.color ?? \"primary\"}\n      fullWidth={props.fullWidth}\n      onClick={handleClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </LoadingButton>\n  );\n}\n","import { Skeleton, Typography } from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getMomentFactory } from \"../../../../factories\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  pool: Maybe<Pool>\n}\n\nexport const PoolCountdown: React.FC<Props> = (props: Props) => {\n  const [hasStarted, setHasStarted] = useState<boolean>(false);\n  const [remainingBlocks, setRemainingBlocks] = useState<BigNumber>(new BigNumber(0));\n  const [countdown, setCountdown] = useState<string>(\"\");\n  const moment = useMemo(() => getMomentFactory().create(), []);\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (props.pool?.endBlock) {\n        let remainingBlocks = new BigNumber(0);\n        if (height.lte(props.pool.startBlock)) {\n          setHasStarted(false);\n          remainingBlocks = props.pool.startBlock.minus(height);\n        } else {\n          setHasStarted(true);\n          remainingBlocks = props.pool.endBlock.minus(height);\n        }\n        if (remainingBlocks.gte(0)) {\n          setRemainingBlocks(remainingBlocks);\n          const duration = moment.getDuration(remainingBlocks.toNumber());\n          if (duration.months() > 0) {\n            setCountdown(duration.months() + \" months \" + duration.days() + \" days\")\n          } else if (duration.days() > 0) {\n            setCountdown(duration.days() + \" days \" + duration.hours() + \" hours\")\n          } else if (duration.hours() > 0) {\n            setCountdown(duration.hours() + \" hours \" + duration.minutes() + \" minutes\")\n          } else if (duration.minutes() > 0) {\n            setCountdown(duration.minutes() + \" minutes \" + duration.seconds() + \" seconds\")\n          } else {\n            setCountdown(duration.seconds() + \" seconds\")\n          }\n        } else {\n          setRemainingBlocks(new BigNumber(0));\n          setCountdown(\"\");\n        }\n      }\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, moment, networkManager]);\n\n  return (\n    <>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {hasStarted ? 'Ends in' : 'Starts in'}\n      </Typography>\n      {!props.pool ? (\n        <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n      ) : (\n        <>\n          {remainingBlocks.gt(0) ? (\n            <Typography variant=\"subtitle1\">\n              {remainingBlocks.toString()} Blocks\n              <Typography variant=\"body2\" color=\"text.secondary\" display=\"inline\" sx={{ ml: 1 }}>\n                {countdown}\n              </Typography>\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">-</Typography>\n          )}\n        </>\n      )}\n    </>\n  );\n}","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { GET_ACCOUNT_BALANCE_QUERY } from \"../queries\";\nimport { GetAccountBalance, GetAccountBalanceVariables } from \"../queries/__generated__/GetAccountBalance\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { getLogger } from \"../util/logger\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class AccountService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n  }\n\n  async getBalanceAsync(_account?: Maybe<string>, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<BigNumber> {\n    try {\n      const account = _account ?? this._walletManager.getActiveAccount()?.address;\n      if (!account || CommonUtil.isNullOrWhitespace(account)) {\n        return new BigNumber(0);\n      }\n      const poolQuery = await this._apollo.query<GetAccountBalance, GetAccountBalanceVariables>({\n        query: GET_ACCOUNT_BALANCE_QUERY,\n        variables: {\n          account\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const balance = poolQuery.data.accountBalance as unknown as BigNumber;\n      return balance;\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst service = new AccountService();\n\nexport const getAccountService = () => {\n  return service;\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport { BigNumber } from 'bignumber.js';\nimport React, { useEffect, useState } from 'react';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\nimport { getAccountService } from '../../../../services/account.service';\nimport { getLogger } from '../../../../util/logger';\n\nconst logger = getLogger();\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDepositDialog: React.FC<Props> = (props: Props) => {\n  const [amount, setAmount] = useState<string>(\"\");\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const poolService = getPoolService();\n  const accountService = getAccountService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(\"\")\n    }\n  }, [props.state])\n\n  useEffect(() => {\n    async function getBalanceAsync() {\n      const balance = await accountService.getBalanceAsync();\n      logger.info(\"Account balance:\", balance.toString())();\n    }\n    if (props.state.open) {\n      getBalanceAsync();\n    }\n  }, [props.state, accountService])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.depositAsync(props.pool.id, props.pool.stakingToken.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Stake</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Earn {props.pool.rewardToken.originalSymbol} by staking {props.pool.stakingToken.originalSymbol}\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { getAccountService } from '../../../../services/account.service';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { getLogger } from '../../../../util/logger';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ViteUtil } from '../../../../util/vite.util';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\nconst logger = getLogger();\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolWithdrawDialog: React.FC<Props> = (props: Props) => {\n  const getStakedAmount = useCallback(() => {\n    if (props.pool.userInfo?.stakingBalance.gt(0)) {\n      return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, 18).replace(',', '')\n    }\n    return \"\"\n  }, [props.pool])\n\n  const [amount, setAmount] = useState<string>(getStakedAmount());\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const accountService = getAccountService();\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(getStakedAmount())\n    }\n  }, [props.state, getStakedAmount])\n\n  useEffect(() => {\n    async function getBalanceAsync() {\n      const balance = await accountService.getBalanceAsync();\n      logger.info(\"Account balance:\", balance.toString())();\n    }\n    if (props.state.open) {\n      getBalanceAsync();\n    }\n  }, [props.state, accountService])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.withdrawAsync(props.pool.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Withdraw</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Enter the {props.pool.stakingToken.originalSymbol} amount to withdraw.\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import * as React from 'react';\nimport { Pool, PoolDialogState, PoolDialogType } from '../../../../util/types';\nimport { PoolDepositDialog } from '../dialog-deposit';\nimport { PoolWithdrawDialog } from '../dialog-withdraw';\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDialog: React.FC<Props> = (props: Props) => {\n  switch (props.state.type) {\n    case PoolDialogType.WITHDRAW:\n      return <PoolWithdrawDialog pool={props.pool} state={props.state} setState={props.setState}></PoolWithdrawDialog>\n    case PoolDialogType.DEPOSIT:\n      return <PoolDepositDialog pool={props.pool} state={props.state} setState={props.setState}></PoolDepositDialog>\n    default:\n      return <></>\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getPoolService } from \"../../../../services/pool.service\";\nimport { Pool } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\n\ninterface Props {\n  pool: Maybe<Pool>\n  account?: Maybe<string>\n  decimals: number\n  setCanClaim?: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const Rewards: React.FC<Props> = (props: Props) => {\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const [rewardTokens, setRewardTokens] = useState<BigNumber>(new BigNumber(0));\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    setPool(props.pool);\n  }, [props.pool]);\n\n  useEffect(() => {\n    if (pool) {\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\n      setRewardTokens(newRewardTokens);\n      if (props.setCanClaim) {\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\n      }\n    } else {\n      setRewardTokens(new BigNumber(0));\n      if (props.setCanClaim) {\n        props.setCanClaim(false);\n      }\n    }\n  }, [pool, props]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (pool) {\n        const updated = poolService.updateRewardPerToken(pool, height);\n        if (updated) {\n          const newPool: Pool = {\n            ...pool\n          }\n          setPool(newPool);\n        }\n      }\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [pool, poolService, networkManager]);\n\n  const showRewardTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(rewardTokens.times(pool.removedDecimals), pool.rewardToken.decimals, decimals);\n  }\n\n  return (\n    <>\n      {showRewardTokens(props.decimals)}\n    </>\n  );\n}","import BigNumber from \"bignumber.js\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getMomentFactory } from \"../../../../factories\";\nimport { MomentUtil } from \"../../../../util/moment.util\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  pool: Pool\n}\n\nexport const formatDuration = (timelock: BigNumber, moment: MomentUtil) => {\n    if(timelock.isEqualTo(0))return \"0 seconds\";\n    \n    const duration = moment.getDuration(timelock.toNumber());\n    const format = []\n    if (duration.months() > 0) {\n      format.push(duration.months() + \" month\"+(duration.months() > 1 ? \"s\" : \"\"))\n    }\n    if (\n      duration.days() > 0 || \n      (\n        format.length && \n        (duration.hours() > 0 || duration.minutes() > 0 || duration.seconds() > 0)\n      )) {\n      format.push(duration.days() + \" day\"+(duration.days()>1?\"s\":\"\"))\n    }\n    if (\n      duration.hours() > 0 || \n      (\n        format.length && \n        (duration.minutes() > 0 || duration.seconds() > 0)\n      )) {\n      format.push(duration.hours() + \" hour\"+(duration.hours()>1?\"s\":\"\"))\n    }\n    if (duration.minutes() > 0 ||\n      (\n        format.length &&\n        (duration.seconds() > 0)\n      )\n    ) {\n      format.push(duration.minutes() + \" minute\"+(duration.minutes()>1?\"s\":\"\"))\n    } \n    //shows seconds only when days and hours are ziro\n    if(duration.days() === 0 && duration.hours() === 0 && duration.seconds() > 0) {\n      format.push(duration.seconds() + \" second\"+(duration.seconds()>1?\"s\":\"\"))\n    }\n    return format.join(\" \")\n}\n\nexport const TimeLock: React.FC<Props> = (props: Props) => {\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const userInfo = pool?.userInfo\n  const moment = useMemo(() => getMomentFactory().create(), []);\n  const [userTimelock, setUserTimelock] = useState(new BigNumber(0));\n  const networkManager = getNetworkManager();\n  const untilEnd = pool?.endBlock.minus(networkManager.networkHeight)\n  const shouldRefreshReadable = untilEnd?.isLessThan(pool?.timelock || 0) ? new BigNumber(0) : untilEnd\n  const timelockReadable = useMemo(() => {\n    return formatDuration(untilEnd?.isLessThan(pool?.timelock || 0) ? untilEnd : pool?.timelock || new BigNumber(0), moment);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pool?.timelock, moment, shouldRefreshReadable])\n\n  useEffect(() => {\n    setPool(props.pool);\n  }, [props.pool]);\n\n  useEffect(() => {\n    let height = new BigNumber(0);\n    const refresh = () => {\n      if(height.isEqualTo(networkManager.networkHeight))return;\n      height = networkManager.networkHeight;\n      if (pool) {\n          // if pool ended/did not start, don't put any timelock\n        if(pool.timelock.isEqualTo(0) || !userInfo || pool.endBlock.isLessThan(height) || pool.startBlock.isGreaterThan(height)){\n            return setUserTimelock(new BigNumber(0));\n        }\n        \n        const elapsed = height.minus(userInfo?.depositBlock || 0).minus(1);\n        let remaining = pool.timelock.minus(elapsed);\n\n        if(pool.timelock.plus(userInfo.depositBlock).isGreaterThan(pool.endBlock)){\n          remaining = pool.endBlock.minus(height)\n        }\n        if(remaining.isLessThan(0)){\n            remaining = new BigNumber(0);\n        }\n        setUserTimelock(remaining);\n      } else {\n        setUserTimelock(new BigNumber(0));\n      }\n    }\n    const interval = setInterval(refresh, 500);\n    refresh();\n    return () => {\n      clearInterval(interval);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pool, props]);\n\n  const showPoolTimelock = (): string => {\n    if (!pool || pool.timelock.isEqualTo(0)) {\n      return \"None\";\n    }\n    return timelockReadable;\n  }\n  const showUserTimelock = (): string => {\n    if (!pool || !userInfo) {\n      return \"\";\n    }\n    if(userTimelock.isEqualTo(0))return \"\"\n    return formatDuration(userTimelock, moment)+\"/\";\n  }\n\n  return (\n    <>\n      {showUserTimelock()}{showPoolTimelock()}\n    </>\n  );\n}","import { Avatar, Badge, Grid, Skeleton, styled, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { getCoinUtil } from \"../../../../util/coin.util\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  loading: boolean\n  pool: Maybe<Pool>\n}\n\nexport const Tokens: React.FC<Props> = (props: Props) => {\n  const BigCoin = styled(Avatar)(({ theme }) => ({\n    width: 70,\n    height: 70,\n    backgroundColor: \"white\",\n    border: \"3px solid black\"\n  }));\n  const SmallCoin = styled(Avatar)(({ theme }) => ({\n    width: 40,\n    height: 40,\n    backgroundColor: \"white\",\n    border: `3px solid ${theme.palette.grey[600]}`\n  }));\n  const coinUtil = getCoinUtil();\n\n  return (\n    <Grid item container alignItems=\"center\" spacing={2}>\n      <Grid item xs={6} md={6} sx={{textAlign: \"right\"}} >\n        <Badge\n          overlap=\"circular\"\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n          badgeContent={\n            <SmallCoin alt={props.pool?.rewardToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.rewardToken.iconUrl)} />\n          }\n        >\n          <BigCoin alt={props.pool?.stakingToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.stakingToken.iconUrl)} />\n        </Badge>\n      </Grid>\n      <Grid item xs={6} md={6}>\n        {props.loading ? (\n          <>\n            <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n            <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n          </>\n        ) : (\n          <>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Stake {props.pool?.stakingToken.originalSymbol}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Earn {props.pool?.rewardToken.originalSymbol}\n            </Typography>\n          </>\n        )}\n      </Grid>\n    </Grid >\n  );\n}","import BigNumber from \"bignumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { Pool } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\n\ninterface Props {\n  pool: Maybe<Pool>\n  decimals: number\n}\n\nexport const TotalEarnedRewards: React.FC<Props> = (props: Props) => {\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const [rewardTokens, setRewardTokens] = useState<BigNumber>(new BigNumber(0));\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    setPool(props.pool);\n  }, [props.pool]);\n\n  useEffect(() => {\n    let height = new BigNumber(0);\n    const refresh = () => {\n      if(height.isEqualTo(networkManager.networkHeight))return;\n      height = networkManager.networkHeight;\n      if (pool) {\n        const duration = pool.endBlock.minus(pool.startBlock);\n        const now = (\n          networkManager.networkHeight.isLessThan(pool.startBlock) ? \n            pool.startBlock :\n            networkManager.networkHeight.isGreaterThan(pool.endBlock) ?\n              pool.endBlock :\n              networkManager.networkHeight\n        ).minus(pool.startBlock);\n\n        const rewards = now.div(duration).times(pool.totalRewards).times(pool.removedDecimals);\n        \n        setRewardTokens(rewards);\n      } else {\n        setRewardTokens(new BigNumber(0));\n      }\n    }\n    const interval = setInterval(refresh, 500);\n    refresh();\n    return () => {\n      clearInterval(interval);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pool, props]);\n\n  const showRewardTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(rewardTokens, pool.rewardToken.decimals, decimals);\n  }\n  const showTotalTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(pool.totalRewards.times(pool.removedDecimals), pool.rewardToken.decimals, decimals);\n  }\n\n  return (\n    <>\n      {showRewardTokens(props.decimals)}/{showTotalTokens(props.decimals)}\n    </>\n  );\n}","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Grid, Link, Paper, Skeleton, styled, Typography } from \"@mui/material\";\nimport BigNumber from 'bignumber.js';\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from '../../../../common/network';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { getLogger } from \"../../../../util/logger\";\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState, PoolDialogType } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\nimport { PoolCountdown } from \"../countdown\";\nimport { PoolDialog } from \"../dialog\";\nimport { Rewards } from '../rewards';\nimport { TimeLock } from '../timelock';\nimport { Tokens } from \"../tokens\";\nimport { TotalEarnedRewards } from '../totalearnedrewards';\n\nconst logger = getLogger()\n\nconst TransparentPaper = styled(Paper)(\n  ({ theme }) => ({\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    backgroundColor: \"transparent\"\n  }));\n\ninterface Props {\n  account?: Maybe<string>\n  pool?: Maybe<Pool>\n}\n\nexport const PoolListItem: React.FC<Props> = (props: Props) => {\n  const [dialogState, setDialogState] = useState<PoolDialogState>({\n    type: PoolDialogType.DEPOSIT,\n    open: false\n  });\n  const [canStake, setCanStake] = useState<boolean>(false);\n  const [canClaim, setCanClaim] = useState<boolean>(false);\n  const [canWithdraw, setCanWithdraw] = useState<boolean>(false);\n  const emitter = getEmitter();\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n  const [expanded, setExpanded] = useState<boolean>(() => {\n    if(!props.pool)return true\n    return localStorage.getItem(\n      `${networkManager.getNetwork()?.contractAddress}.${props.pool?.id}.expanded`\n    ) !== \"false\"\n  })\n\n  useEffect(() => {\n    let height = new BigNumber(0)\n    const refresh = () => {\n      if(height.isEqualTo(networkManager.networkHeight))return\n      height = networkManager.networkHeight\n      if (props.pool) {\n        logger.info(`Pool loaded: ${props.pool?.id} ${props.pool.stakingToken.name} => ${props.pool.rewardToken.name}`)();\n        let timelockOK = true;\n        const hasStarted = props.pool.startBlock.isLessThanOrEqualTo(height)\n        const hasNotEnded = props.pool.endBlock.isGreaterThanOrEqualTo(height)\n        if(props.pool.timelock.isGreaterThan(0) && props.pool.userInfo && hasStarted && hasNotEnded){\n          // timelock + depositBlock < networkHeight  \n          timelockOK = props.pool.userInfo.depositBlock.plus(props.pool.timelock).isLessThanOrEqualTo(height);\n        }\n        setCanWithdraw(!!props.account && (props.pool.userInfo?.stakingBalance.gt(0) ?? false) && timelockOK);\n      } else {\n        setCanWithdraw(false);\n      }\n    }\n    refresh()\n    const interval = setInterval(refresh, 500)\n    return () => {\n      clearInterval(interval)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.pool, props.account]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setCanStake(!!props.pool && !!props.account);\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, props.account, networkManager]);\n\n  const showApr = (): Maybe<string> => {\n    if (!props.pool || !props.pool.apr) {\n      return \"0\";\n    }\n    return props.pool.apr.toFormat(2);\n  }\n\n  const showTotalStaked = (): string => {\n    if (!props.pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.totalStaked, props.pool.stakingToken.decimals, 2);\n  }\n\n  const showStaked = (decimals: number): string => {\n    if (!props.pool?.userInfo) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, decimals);\n  }\n\n  const handleConnectWallet = () => {\n    emitter.emitConnectWalletDialog(true);\n  }\n\n  const handleClickDeposit = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.DEPOSIT,\n      open: true\n    })\n  }\n\n  const handleClickWithdraw = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.WITHDRAW,\n      open: true\n    })\n  }\n\n  const handleClickClaimAsync = async () => {\n    try {\n      if (props.pool) {\n        await poolService.withdrawAsync(props.pool.id, \"0\");\n      }\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <>\n      <Accordion expanded={expanded} onChange={(ev, expanded) => {\n        if(!props.pool)return\n        localStorage.setItem(\n          `${networkManager.getNetwork()?.contractAddress}.${props.pool.id}.expanded`,\n          String(expanded)\n        )\n        setExpanded(expanded)\n      }}>\n        <AccordionSummary sx={{ backgroundColor: \"rgba(217, 217, 217, 0.1)\" }} expandIcon={<ExpandMoreIcon />}>        \n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2} color=\"text.secondary\" sx={{minHeight: \"395px\"}}>\n            <Grid item xs={12} md={12}>\n              <Tokens loading={!props.pool} pool={props.pool}></Tokens>\n            </Grid>\n            <Grid item xs={12} md={12}>\n                <PoolCountdown pool={props.pool} />\n            </Grid>\n\n              <Grid item container justifyContent=\"space-evenly\" direction=\"row\">\n                <Grid item xs={12} sm={12} md={7}>\n                  {!props.pool ? (\n                    <>\n                      <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n                      <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n                    </>\n                  ) : (\n                    <>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Total {props.pool?.rewardToken.originalSymbol} earned\n                      </Typography>\n                      <Typography variant=\"subtitle1\">\n                        <TotalEarnedRewards pool={props.pool} decimals={0}></TotalEarnedRewards>\n                      </Typography>\n                    </>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={12} md={5} sx={{textAlign: 'right'}}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    APR\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"60px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {props.pool.apr ? (\n                        <>\n                          {showApr()}%\n                        </>\n                      ) : (\n                        <>\n                          -\n                        </>\n                      )}\n                    </Typography>\n                  )}\n                </Grid>\n                </Grid>\n\n                <Grid item container justifyContent=\"space-evenly\" direction=\"row\">\n                <Grid item xs={12} sm={12} md={12} mt={2}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Total staked\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"120px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {showTotalStaked()}\n                    </Typography>\n                  )}\n                </Grid>\n                </Grid>\n                <Grid item container justifyContent=\"space-evenly\" direction=\"row\">\n                {props.pool?.timelock.isGreaterThan(0) ? <Grid item xs={12} sm={12} md={12}>\n                  <Typography variant=\"subtitle1\" sx={{ color: '#ff4c4c', fontWeight: 700}}>\n                  This is a LOCKED pool, timelock \n                  </Typography>\n                  <Typography variant=\"subtitle1\" sx={{ color: '#ff4c4c'}}>\n                    <TimeLock pool={props.pool} />\n                  </Typography>\n                </Grid> : null}  \n              </Grid>\n\n\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails sx={{ backgroundColor: \"rgba(217, 217, 217, 0.3)\", pt: 2 }}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item xs container alignItems=\"center\">\n              <Grid item container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item xs={6} md={6} container justifyContent=\"center\" alignItems=\"center\">\n                  <Link color=\"secondary\" underline=\"none\" href={props.pool?.stakingToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                    {props.pool?.stakingToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n                  </Link>\n                </Grid>\n                <Grid item xs={6} md={6} container justifyContent=\"center\" alignItems=\"center\">\n                  <Link color=\"secondary\" underline=\"none\" href={props.pool?.rewardToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                    {props.pool?.rewardToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n                  </Link>\n                </Grid>\n                <Grid item xs={12} md={12} zeroMinWidth>\n                  <TransparentPaper variant=\"outlined\">\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {props.pool?.rewardToken.originalSymbol} earned\n                    </Typography>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      {!props.pool ? (\n                        <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                      ) : (\n                        <Typography sx={{ width: \"100%\" }} noWrap>\n                          <Rewards pool={props.pool} decimals={18} account={props.account} setCanClaim={setCanClaim}></Rewards>\n                        </Typography>\n                      )}\n                      <Box sx={{ ml: 2 }} >\n                        <ClickOnceButton variant=\"contained\" size=\"large\" callbackFn={handleClickClaimAsync} disabled={!canClaim}>\n                          Claim\n                        </ClickOnceButton>\n                      </Box>\n                    </Box>\n                  </TransparentPaper>\n                </Grid>\n                {!props.account ? (\n                  <Grid item xs={12} md={12}>\n                    <TransparentPaper variant=\"outlined\">\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Start staking\n                      </Typography>\n                      <Button variant=\"contained\" size=\"large\" fullWidth disabled={!props.pool} onClick={handleConnectWallet}>Connect wallet</Button>\n                    </TransparentPaper>\n                  </Grid>\n                ) : (\n                  <>\n                    <Grid item xs={12} md={12} zeroMinWidth>\n                      <TransparentPaper variant=\"outlined\">\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Staked\n                        </Typography>\n                        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                          {!props.pool ? (\n                            <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                          ) : (\n                            <Typography sx={{ width: \"100%\" }} noWrap>\n                              {showStaked(18)}\n                            </Typography>\n                          )}\n                          <Button variant=\"contained\" size=\"large\" sx={{ ml: 2 }} onClick={handleClickWithdraw} disabled={!canWithdraw}>\n                            Withdraw\n                          </Button>\n                        </Box>\n                      </TransparentPaper>\n                    </Grid>\n                    <Grid item xs={12} md={12} sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      <Button variant=\"contained\" size=\"large\" fullWidth onClick={handleClickDeposit} disabled={!canStake}>\n                        Stake\n                      </Button>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n      {props.pool && (\n        <PoolDialog pool={props.pool} state={dialogState} setState={setDialogState}></PoolDialog>\n      )}\n    </>\n  );\n}","import { Grid, Paper } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { DefaultPoolFilterValues } from \"../../../../common/constants\";\nimport { getCommonContext } from \"../../../../contexts/common\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { FilterUtil } from \"../../../../util/filter.util\";\nimport { getLogger } from \"../../../../util/logger\";\nimport { GlobalEvent, Pool, PoolFilterValues } from \"../../../../util/types\";\nimport { Alert } from \"../../../common/components/alert\";\n//import { PoolListItem } from \"../list-item\";\nimport { PoolListItem } from \"../list-card\";\n\nconst logger = getLogger()\n\ninterface Props {\n  account?: Maybe<string>\n  pools?: Maybe<Pool[]>\n}\n\nexport const PoolList: React.FC<Props> = (props: Props) => {\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [allPools, setAllPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [pools, setPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [filter, setFilter] = useState<PoolFilterValues>(DefaultPoolFilterValues)\n  const emitter = getEmitter()\n  const commonContext = getCommonContext()\n\n  useEffect(() => {\n    if (props.pools) {\n      setIsLoading(false)\n    } else {\n      setIsLoading(true)\n    }\n    setAllPools(props.pools)\n  }, [props.pools])\n\n  useEffect(() => {\n    setPools(FilterUtil.filterPools(filter, allPools))\n  }, [allPools, filter])\n\n  useEffect(() => {\n    const handleEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n      setFilter(newValues)\n    }\n    emitter.on(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolFilterValuesChanged)()\n      emitter.off(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    };\n  }, [emitter])\n\n  useEffect(() => {\n    const replacePool = (pool: Pool) => {\n      if (allPools && pool) {\n        const index = allPools.findIndex(e => e.id === pool.id)\n        if (index >= 0) {\n          // Replace existing\n          const updatedPools = [...allPools]\n          updatedPools[index] = {\n            ...pool\n          }\n          setAllPools(updatedPools)\n        } else {\n          // Prepend to existing pools\n          setAllPools([pool, ...allPools])\n        }\n      }\n    }\n    const handlePoolEvent = async (id: number) => {\n      const pool = await commonContext.datasource.getPoolAsync(id, props.account)\n      replacePool(pool)\n    }\n    emitter.on(GlobalEvent.PoolDeposit, handlePoolEvent)\n    emitter.on(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    emitter.on(GlobalEvent.PoolClaim, handlePoolEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolDeposit)()\n      emitter.off(GlobalEvent.PoolDeposit, handlePoolEvent)\n      emitter.off(GlobalEvent.PoolWithdraw, handlePoolEvent)\n      emitter.off(GlobalEvent.PoolClaim, handlePoolEvent)\n    };\n  }, [emitter, allPools, commonContext, props.account])\n\n  if (!isLoading && pools && pools.length <= 0) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message=\"No pools found.\" type=\"default\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n      {isLoading ? (\n        <>\n          {[0, 1, 2].map((index: number) => (\n            <Grid item key={index} xs={12} sm={5} md={4}>\n              <Paper elevation={16}>\n              <PoolListItem></PoolListItem>\n              </Paper>\n            </Grid>\n          ))}\n        </>\n      ) : (\n        <>\n          {pools?.map((p: Pool) => (          \n            <Grid item key={p.id} xs={12} sm={5} md={4}>\n              <Paper elevation={16}>\n              <PoolListItem account={props.account} pool={p}></PoolListItem>\n              </Paper>\n            </Grid>\n          ))}\n        </>\n      )}\n    </Grid>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { Container, Grid } from '@mui/material';\nimport React from 'react';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { GET_POOLS_QUERY } from '../../../../queries';\nimport { GetPools, GetPoolsVariables } from '../../../../queries/__generated__/GetPools';\nimport { Pool } from '../../../../util/types';\nimport { Alert } from '../../../common/components/alert';\nimport { PoolFilter } from '../filter';\nimport { PoolList } from '../list';\n\nexport const Pools: React.FC = () => {\n  const context = useConnectedWeb3Context();\n  const poolQuery = useQuery<GetPools, GetPoolsVariables>(GET_POOLS_QUERY, {\n    variables: {\n      account: context.account\n    },\n    fetchPolicy: 'network-only'\n  });\n\n  const error = poolQuery.error\n\n  if (error) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message={error.message} type=\"warning\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Container sx={{ pt: 6, pb: 6 }} maxWidth=\"lg\">\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n        <PoolFilter></PoolFilter>\n        <PoolList account={context.account} pools={poolQuery.data?.pools as Maybe<Pool[]>}></PoolList>\n      </Grid>\n    </Container>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\nimport React, { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  // @ts-ignore\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ConfirmTransactionDialog: React.FC = () => {\n  const [open, setOpen] = useState(false);\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    };\n  }, [emitter, setOpen])\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      style={{ zIndex: 9999 }}\n    >\n      <DialogTitle>ViteConnect</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please confirm transaction on VITE Wallet App\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { GET_NETWORK_BLOCK_HEIGHT_QUERY } from '../../../../queries';\nimport { GetNetworkBlockHeight } from '../../../../queries/__generated__/GetNetworkBlockHeight';\nimport { getEmitter } from '../../../../util/emitter.util';\n\nexport const Network: React.FC = () => {\n  const networkManager = getNetworkManager();\n  const emitter = getEmitter();\n  const query = useQuery<GetNetworkBlockHeight>(GET_NETWORK_BLOCK_HEIGHT_QUERY, {\n    fetchPolicy: 'network-only'\n  });\n\n  useEffect(() => {\n    let interval = setInterval(async () => {\n      await query.refetch();\n      if (query.data?.networkBlockHeight) {\n        const height = query.data.networkBlockHeight;\n        emitter.emitNetworkBlockHeightChanged(height);\n        networkManager.networkHeight = height;\n      }\n    }, 1000)\n    return () => {\n      clearInterval(interval);\n    }\n  })\n\n  return (\n    <>\n    </>\n  )\n}\n","import {Grid, Typography, Box, Link} from \"@mui/material\";\nimport React from 'react';\n\nexport const Desc: React.FC = () => {\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\">  \n        <Grid item xs={12} md={6} lg={6}>\n          <Box p={2}>\n          <Box>\n            <Typography color=\"text.secondary\">\n              <h1>Earn beefy staking rewards with VITCStake!</h1>\n            </Typography>\n            <Typography color=\"text.secondary\">\n              <h3>Easily claim free vitamincoin from our&nbsp;\n                <Link color=\"secondary\" underline=\"none\" href={\"https://vitaminfaucet.com\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n                  faucet\n                </Link>\n                , or earn in our&nbsp;\n                <Link color=\"secondary\" underline=\"none\" href={\"https://discord.gg/vitamincoin\"} target=\"_blank\" sx={{cursor: \"pointer\"}}>\n                  Discord\n                </Link>\n                </h3>\n            </Typography>\n            <Typography color=\"text.secondary\">\n              <h3>Connect your Vite wallet and start earning right away</h3>\n            </Typography>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid container xs={12} md={6} lg={6} alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\n          <Box p={2}>\n            <img alt=\"staking\" src={\"./Vault_gradient.png\"} width=\"350\" />\n          </Box>\n        </Grid>     \n    </Grid>\n  )\n}\n","import { useSnackbar } from 'notistack';\nimport React from 'react';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Footer } from '../../../layout/components/footer';\nimport { Header } from '../../../layout/components/header';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\nimport { Pools } from '../../../pool/components/main';\nimport { ConfirmTransactionDialog } from '../dialog-transaction';\nimport { Network } from '../network';\nimport { Desc } from '../desc';\n\nexport const Main: React.FC = (props: any) => {\n  SnackbarUtil.snackbar = useSnackbar();\n  return (\n    <MainWrapper>\n      <Header />\n      <Network />\n      <MainScroll>\n        <Desc></Desc>\n        <Pools></Pools>\n        <ConfirmTransactionDialog></ConfirmTransactionDialog>     \n      </MainScroll> \n      <Footer /> \n    </MainWrapper>   \n  )\n}\n","import { ApolloProvider } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport { getApolloClient } from './clients/apollo.client';\nimport { ConnectedWeb3 } from './contexts/connectedWeb3';\nimport { Web3Provider } from './contexts/web3';\nimport { Main } from './features/main/components/main';\n\nconst App: React.FC = () => {\n  const apolloClient = React.useMemo(() => getApolloClient(), [])\n  \n  // Almost never return exponential notation\n  BigNumber.config({ EXPONENTIAL_AT: 1e+9 })\n  return (\n      // Fails with CI I don't know why, and I have no time to debug now.\n      // @ts-ignore\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={apolloClient}>\n          <Web3Provider>\n            <ConnectedWeb3>\n              <Main /> \n            </ConnectedWeb3>\n          </Web3Provider>\n        </ApolloProvider> \n      </SnackbarProvider>\n  );\n}\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import theme from './theme';\nimport { ThemeCtxProvider, useThemeMode } from \"./hooks/themeContext\";\n\nconst Root = () => {\n  const { darkMode } = useThemeMode();\n  \n  //const [mode, setMode] = React.useState<'light' | 'dark'>('light');\n  //https://mui.com/customization/color/#picking-colors\n  //themes\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n          palette: {\n            ...(darkMode \n              ? {\n                  // palette values for light mode\n                  primary: {\n                    main: '#FF6729',\n                  },\n                  secondary: {\n                    main: '#C8440C',\n                  },\n                  //divider: '#fff',\n                  background: {\n                    default: '#FFFBF2',\n                    paper: '#fff5de',\n                  },\n                  //text: {\n                  //  primary: '#ebebeb',\n                  //  secondary: '#9E9E9E',\n                  //},\n                }\n              : {\n                  // palette values for dark mode\n                  primary: {\n                    main: '#C8440C',\n                  },\n                  secondary: {\n                    main: '#FF6729',\n                  },\n                  divider: '#515151',\n                  background: {\n                    default: '#303030',\n                    paper: '#424242',\n                  },\n                  text: {\n                    primary: '#cdcdcd',\n                    secondary: '#cdcdcd',\n                  },                  \n              }),\n          },\n      }),\n    [darkMode],\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeCtxProvider>\n      <Root />\n    </ThemeCtxProvider>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export abstract class CommonUtil {\n  static isString(value: any): boolean {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  static isNullOrWhitespace(value?: Maybe<string>): boolean {\n    if (!CommonUtil.isString(value)) {\n      return true;\n    } else {\n      return value === null || value === undefined || value.trim() === '';\n    }\n  }\n\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\n    return CommonUtil.isNullOrWhitespace(value) || value === defaultValue\n  }\n\n  static timeout(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\n    if (str) {\n      if (maxLength < str.length) {\n        return `${str.substr(0, maxLength)}...`\n      }\n    }\n    return str\n  }\n\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\n    if (str) {\n      const minTruncatedLength = strPositionStart + strPositionEnd\n      if (minTruncatedLength < str.length) {\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\n      }\n    }\n    return str\n  }\n\n  static toJsonString(data: any): string {\n    return JSON.stringify(data, null, 2);\n  }\n\n  static async imageUrlToBlob(url: string): Promise<Blob> {\n    return (await fetch(url)).blob();\n  }\n\n  static random(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  static equals(lh: any, rh: any): boolean {\n    // The ORDER of the properties IS IMPORTANT\n    return JSON.stringify(lh) === JSON.stringify(rh);\n  }\n}","import BigNumber from 'bignumber.js';\nimport EventEmitter from 'events';\nimport { GlobalEvent, Pool, PoolFilterValues } from './types';\n\nexport interface IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void\n  emitConnectWalletDialog(open: boolean): void\n  emitNetworkBlockHeightChanged(height: BigNumber): void\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void\n  emitPoolClaim(id: number, amount: BigNumber, account: string): void\n  emitPoolUpdate(pool: Pool): void\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class GlobalEmitter extends EventEmitter implements IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConfirmTransactionDialog, open)\n  }\n  emitConnectWalletDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConnectWalletDialog, open)\n  }\n  emitNetworkBlockHeightChanged(height: BigNumber): void {\n    this.emit(GlobalEvent.NetworkBlockHeightChanged, height)\n  }\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void {\n    this.emit(GlobalEvent.PoolFilterValuesChanged, oldValues, newValues)\n  }\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolDeposit, id, amount, account)\n  }\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolWithdraw, id, amount, account)\n  }\n  emitPoolClaim(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolClaim, id, amount, account)\n  }\n  emitPoolUpdate(pool: Pool): void {\n    this.emit(GlobalEvent.PoolUpdate, pool)\n  }\n}\n\nconst emitter = new GlobalEmitter();\n\nexport const getEmitter = (): IGlobalEmitter => {\n  return emitter;\n}\n","export enum WalletType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class Wallet<T> {\n  private readonly _type: WalletType\n\n  active?: T\n  accounts: T[] = []\n\n  constructor(type: WalletType, init?: Partial<Wallet<T>>) {\n    this._type = type\n    this.baseInitinit(init)\n  }\n\n  static fromJS(data: any): Maybe<WebWallet | SessionWallet> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWallet(data)\n      case WalletType.Session:\n        return new SessionWallet(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletType {\n    return this._type\n  }\n\n  protected abstract createAccount(data: any): T\n\n  private baseInitinit(data?: any): void {\n    if (data) {\n      this.active = data.active ? this.createAccount(data.active) : undefined\n      if (data.accounts && Array.isArray(data.accounts)) {\n        data.accounts.forEach((account: any) => {\n          this.accounts.push(this.createAccount(account))\n        })\n      }\n    }\n    if (!this.accounts) {\n      this.accounts = []\n    }\n  }\n}\n\nexport class WebWallet extends Wallet<WebWalletAccount> {\n  mnemonic!: string\n\n  constructor(init?: Partial<WebWallet>) {\n    super(WalletType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.mnemonic = data.mnemonic\n    }\n  }\n\n  protected createAccount(data: any): WebWalletAccount {\n    return new WebWalletAccount(data)\n  }\n}\n\nexport class SessionWallet extends Wallet<SessionWalletAccount> {\n  session!: string\n  timestamp!: number\n\n  constructor(init?: Partial<SessionWallet>) {\n    super(WalletType.Session, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.session = data.session\n      this.timestamp = data.timestamp\n    }\n  }\n\n  protected createAccount(data: any): SessionWalletAccount {\n    return new SessionWalletAccount(data)\n  }\n}\n\nexport enum WalletAccountType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class WalletAccount {\n  private readonly _type: WalletAccountType\n\n  id!: string\n  address!: string\n\n  constructor(type: WalletAccountType, init?: Partial<WalletAccount>) {\n    this._type = type\n    this.baseInit(init)\n  }\n\n  static fromJS(data: any): Maybe<WalletAccount> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWalletAccount(data)\n      case WalletType.Session:\n        return new SessionWalletAccount(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletAccountType {\n    return this._type\n  }\n\n  private baseInit(data?: any): void {\n    if (data) {\n      this.id = data.id\n      this.address = data.address\n    }\n  }\n}\n\nexport class WebWalletAccount extends WalletAccount {\n  privateKey!: string\n\n  constructor(init?: Partial<WebWalletAccount>) {\n    super(WalletAccountType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.privateKey = data.privateKey\n    }\n  }\n}\n\nexport class SessionWalletAccount extends WalletAccount {\n  constructor(init?: Partial<SessionWalletAccount>) {\n    super(WalletAccountType.Session, init)\n  }\n}","import Connector from '@vite/connector';\nimport { WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { SessionWallet, SessionWalletAccount } from './types';\n\nconst logger = getLogger()\n\nexport interface IWalletConnector {\n  readonly uri: string\n  sendTransactionAsync(...args: any): Promise<any>\n  signMessageAsync(...args: any): Promise<any>\n  killSessionAsync(): Promise<void>\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class WalletConnector extends Connector implements IWalletConnector {\n  private readonly _walletManager: WalletManager;\n\n  constructor(walletManager: WalletManager, opts: any, meta?: any) {\n    super(opts, meta);\n    this._walletManager = walletManager;\n    this.on('connect', (err: any, payload: any) => {\n      logger.info('WalletConnector.connect', err, payload)()\n      const { accounts } = payload.params[0];\n      this.saveSession(accounts);\n    });\n    this.on('disconnect', (err: any, payload: any) => {\n      logger.info('WalletConnector.disconnect', err, payload)()\n      this.stopBizHeartBeat()\n      this._walletManager.removeWallet()\n    });\n    this.on('session_update', (err: any, payload: any) => {\n      logger.info('WalletConnector.session_update', err, payload)()\n      const session = payload[0];\n      if (session && session.accounts) {\n        this.saveSession(session.accounts);\n      }\n    });\n  }\n\n  get uri(): string {\n    return super.uri\n  }\n\n  on(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.on(event, listener)\n  }\n\n  off(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.off(event, listener)\n  }\n\n  saveSession(accounts: string[]): void {\n    if (!accounts || !accounts[0]) {\n      throw new Error('address is null');\n    }\n    const sessionAccounts: SessionWalletAccount[] = []\n    for (let index = 0; index < accounts.length; index++) {\n      const address = accounts[index];\n      sessionAccounts.push(new SessionWalletAccount({\n        id: index.toString(),\n        address: address\n      }))\n    }\n    const wallet = new SessionWallet({\n      active: sessionAccounts[0],\n      accounts: sessionAccounts,\n      session: this.session,\n      timestamp: new Date().getTime()\n    })\n    this._walletManager.setWallet(wallet)\n  }\n\n  updateSession(): void {\n    const existing = this._walletManager.getWallet()\n    if (existing && existing instanceof SessionWallet) {\n      existing.timestamp = new Date().getTime()\n      this._walletManager.updateWalletStore(existing)\n    }\n  }\n\n  async createSession(): Promise<string> {\n    await super.createSession();\n    return this.uri;\n  }\n\n  async sendTransactionAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signAndSendTx', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async signMessageAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signMessage', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async killSessionAsync(): Promise<any> {\n    await super.killSession();\n  }\n}","import { IWalletConnector, WalletConnector, WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\n\nconst logger = getLogger()\n\nexport class WalletConnectorFactory {\n  private readonly _walletManager: WalletManager\n\n  constructor(walletManager: WalletManager) {\n    this._walletManager = walletManager\n  }\n\n  create(network: Network): IWalletConnector {\n    const session = this._walletManager.getValidSession()\n    const account = this._walletManager.getActiveAccount()\n    const opts = {\n      bridge: network.connectorUrl,\n      session\n    }\n    const meta = account ? { lastAccount: account.address } : undefined\n    const connector = new WalletConnector(this._walletManager, opts, meta)\n\n    if (!session) {\n      connector.createSession().then(() => logger.info('IWalletConnector connected', connector.uri)())\n    }\n\n    return connector\n  }\n}","import { SessionWallet, Wallet, WebWallet } from '.';\nimport { CommonConstants } from '../common/constants';\nimport { getLogger } from '../util/logger';\nimport { WalletType } from './types';\n\nconst logger = getLogger()\n\nexport class WalletStore {\n\n  private readonly _webWalletKey = CommonConstants.WEB_WALLET_STORAGE_SPACE;\n  private readonly _sessionWalletKey = CommonConstants.SESSION_WALLET_STORAGE_SPACE\n\n  clear(): void {\n    localStorage.removeItem(this._webWalletKey);\n    sessionStorage.removeItem(this._sessionWalletKey);\n  }\n\n  getItem(): Maybe<WebWallet | SessionWallet> {\n    let data;\n\n    try {\n      data = localStorage.getItem(this._webWalletKey);\n      if (!data) {\n        data = sessionStorage.getItem(this._sessionWalletKey);\n      }\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n\n    if (!data) {\n      return undefined;\n    }\n\n    try {\n      return Wallet.fromJS(JSON.parse(data));\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n  }\n\n  setItem(data: WebWallet | SessionWallet): void {\n    const saveData = JSON.stringify(data);\n\n    try {\n      switch (data.type) {\n        case WalletType.Web:\n          localStorage.setItem(this._webWalletKey, saveData);\n          break;\n        case WalletType.Session:\n          sessionStorage.setItem(this._sessionWalletKey, saveData);\n          break;\n        default:\n          throw new Error(`Wallet type '${data.type}' is not supported.`)\n      }\n    } catch (err) {\n      logger.error(err)();\n    }\n  }\n}","import { wallet } from '@vite/vitejs';\nimport { SessionWallet, WalletAccount, WebWallet, WebWalletAccount } from '.';\nimport { getLogger } from '../util/logger';\nimport { WalletStore } from './store';\n\nconst logger = getLogger()\n\nexport class WalletManager {\n  private readonly _store: WalletStore;\n  private _wallet?: WebWallet | SessionWallet;\n  private _mnemonicDeriveIndex = 0;\n  private _setWalletCallback?: (wallet?: WebWallet | SessionWallet | undefined) => void;\n\n  constructor() {\n    this._store = new WalletStore();\n  }\n\n  initWallet(): void {\n    const wallet = this._store.getItem();\n    if (wallet) {\n      this._wallet = wallet;\n      this._mnemonicDeriveIndex = wallet.accounts.length;\n      this.updateWallet();\n    }\n  }\n\n  set onSetWalletCallback(cb: (wallet?: WebWallet | SessionWallet | undefined) => void) {\n    this._setWalletCallback = cb;\n  }\n\n  getWallet(): Maybe<WebWallet | SessionWallet> {\n    return this._wallet;\n  }\n\n  setWallet(wallet?: WebWallet | SessionWallet): void {\n    this._wallet = wallet;\n    this.updateWalletStore(wallet)\n    this.updateWallet()\n  }\n\n  updateWallet(): void {\n    if (this._setWalletCallback) {\n      this._setWalletCallback(this._wallet);\n    }\n  }\n\n  updateWalletStore(wallet?: WebWallet | SessionWallet): void {\n    if (wallet) {\n      this._store.setItem(wallet);\n    }\n  }\n\n  createWebWallet(mnemonic: string): Maybe<WebWallet> {\n    if (!this.validateMnemonic(mnemonic)) {\n      return undefined;\n    }\n    this.resetWallet();\n    const account = this.createWebWalletAccount(mnemonic, 0);\n    const wallet = new WebWallet({\n      active: account,\n      mnemonic,\n      accounts: [\n        account\n      ]\n    });\n    this.setWallet(wallet);\n    return wallet;\n  }\n\n  removeWallet(): void {\n    this.resetWallet();\n    this.updateWallet();\n  }\n\n  getAccountByAddress(address: string): Maybe<WalletAccount> {\n    return this._wallet?.accounts?.find(e => e.address === address)\n  }\n\n  addAccount(): Maybe<WalletAccount> {\n    if (this._wallet instanceof WebWallet) {\n      const account = this.createWebWalletAccount(this._wallet.mnemonic);\n      this._wallet.accounts.push(account);\n      this.setActiveAccount(account);\n      return account;\n    }\n    return undefined\n  }\n\n  getActiveAccount(): Maybe<WalletAccount> {\n    return this._wallet?.active\n  }\n\n  setActiveAccount(account: WalletAccount): boolean {\n    if (this._wallet) {\n      this._wallet.active = account;\n      this._store.setItem(this._wallet);\n      this.updateWallet();\n      return true;\n    }\n    return false;\n  }\n\n  getAccounts(): WalletAccount[] {\n    if (this._wallet) {\n      return this._wallet.accounts;\n    }\n    return [];\n  }\n\n  getValidSession(): Maybe<string> {\n    const wallet = this._store.getItem();\n    if (wallet && wallet instanceof SessionWallet) {\n      if (new Date().getTime() - wallet.timestamp < 1000 * 60 * 10) {\n        return wallet.session;\n      } else {\n        logger.info('Found expired session.', wallet)();\n      }\n    }\n    return undefined;\n  }\n\n  private resetWallet(): void {\n    this._wallet = undefined;\n    this._mnemonicDeriveIndex = 0;\n    this._store.clear();\n  }\n\n  private createWebWalletAccount(mnemonic: string, index = this._mnemonicDeriveIndex): WebWalletAccount {\n    const { privateKey } = wallet.deriveAddress({\n      mnemonics: mnemonic,\n      index\n    });\n    let account = new WebWalletAccount({\n      id: index.toString(),\n      privateKey,\n      address: wallet.createAddressByPrivateKey(privateKey).address\n    });\n    this._mnemonicDeriveIndex = index + 1;\n    return account;\n  }\n\n  private validateMnemonic(mnemonic: Maybe<string>): Boolean {\n    if (mnemonic) {\n      return wallet.validateMnemonics(mnemonic);\n    }\n    return false;\n  }\n}\n\nconst manager = new WalletManager();\n\nexport const getWalletManager = () => {\n  return manager;\n}"],"sourceRoot":""}