{"version":3,"sources":["clients/vite.client.ts","util/coin.util.ts","common/queue.ts","util/task.ts","clients/coingecko.client.ts","util/types.ts","common/constants.ts","util/logger.ts","util/file.util.ts","clients/vitex.client.ts","util/ensure.ts","util/moment.util.ts","datasources/base.datasource.ts","datasources/mock.datasource.ts","util/cache.ts","datasources/vite.datasource.ts","contexts/common.ts","mutations/pool.ts","queries/account.ts","queries/network.ts","queries/token.ts","queries/pool.ts","clients/apollo.client.ts","common/network.ts","features/common/components/tooltip/component.tsx","features/layout/components/footer/component.tsx","features/layout/components/header-loading/component.tsx","features/layout/components/main-scroll/component.tsx","features/layout/components/main-wrapper/component.tsx","contexts/web3.tsx","contexts/connectedWeb3.tsx","features/main/components/loading/component.tsx","util/format.util.ts","util/snackbar.util.ts","features/main/components/qrcode/component.tsx","features/main/components/login/component.tsx","features/main/components/network-list/component.tsx","hooks/themeContext.js","features/layout/components/header/component.tsx","features/common/components/alert/component.tsx","features/pool/components/filter/component.tsx","factories/moment.factory.ts","util/filter.util.ts","services/pool.service.ts","util/vite.util.ts","features/common/components/click-once-button/component.tsx","features/pool/components/countdown/component.tsx","features/pool/components/dialog-deposit/component.tsx","services/account.service.ts","features/pool/components/dialog-withdraw/component.tsx","features/pool/components/dialog/component.tsx","features/pool/components/rewards/component.tsx","features/pool/components/tokens/component.tsx","features/pool/components/totalearnedrewards/component.tsx","features/pool/components/list-card/component.tsx","features/pool/components/list/component.tsx","features/pool/components/main/component.tsx","features/main/components/dialog-transaction/component.tsx","features/main/components/network/component.tsx","features/main/components/desc/component.tsx","features/main/components/main/component.tsx","App.tsx","reportWebVitals.ts","index.tsx","util/common.util.ts","util/emitter.util.ts","wallet/types.ts","wallet/connector.ts","wallet/factory.ts","wallet/store.ts","wallet/manager.ts"],"names":["WS_RPC","require","logger","getLogger","providerOptions","retryTimes","retryInterval","ViteClient","_isConnected","_connector","_provider","_client","_emitter","_walletManager","_connectorFactory","initAsync","network","a","Promise","resolve","reject","create","rpcUrl","isResolved","on","err","error","ViteAPI","info","path","this","getEmitter","getWalletManager","WalletConnectorFactory","disconnect","method","args","request","account","methodName","abi","params","tokenId","amount","toAddress","block","accountBlock","createAccountBlock","address","WebWalletAccount","setProvider","setPrivateKey","privateKey","autoSetPreviousAccountBlock","sign","send","result","SessionWalletAccount","connector","emitConfirmTransactionDialog","sendTransactionAsync","Error","contractAddress","offchaincode","data","abiutils","encodeFunctionCall","dataBase64","Buffer","from","toString","requestAsync","selfAddr","offChainCode","resultBytes","outputs","i","length","push","type","offchainDecodeResult","decodeParameters","resultList","name","value","vmLog","topics","j","abiItem","encodeLogSignature","topic","decodeLog","inputs","utils","_Buffer","slice","event","payload","addressHeightRange","placeholder","fromHeight","toHeight","tempPayload","JSON","stringify","replace","subscribe","parse","unsubscribe","height","undefined","Task","blockByHeight","receiveBlockHash","blockByHash","getAccountBlockStatus","start","status","resolveAccountBlockData","statusTxt","blockType","bytes","client","getViteClient","util","_iconUrlMap","_coinMarketCapMap","_coingeckoMap","Map","iconUrl","existing","get","toLowerCase","getCoinUtil","ActionQueue","actionQueues","key","nextStep","has","set","processing","queue","acc","then","r","action","shift","delete","task","interval","_taskTimer","_taskInterval","_task","_callback","setTimeout","_onStop","_run","callback","window","clearTimeout","CoingeckoClient","_coinUtil","_cache","_queue","_coinsToFetch","process","emitWarning","console","warn","CoinGecko","Set","mappedName","mapCoingeckoName","queueAction","add","setImmediate","ids","Array","simple","price","BigNumber","usd","getCoingeckoClient","PoolSortType","PoolDialogType","GlobalEvent","VmLogEvent","CommonConstants","APP_NAME","WEB_WALLET_STORAGE_SPACE","SESSION_WALLET_STORAGE_SPACE","VITE_TOKEN_ID","REWARD_FACTOR","Networks","id","networkId","connectorUrl","contract","TypeNames","Pool","PoolUserInfo","Token","UnknownToken","__typename","symbol","originalSymbol","decimals","url","PoolSortTypes","DefaultPoolFilterValues","stakedOnly","showLive","sortBy","DEFAULT","search","LogEventModel","init","banner","Object","assign","noop","ExtendedConsoleLogger","Boolean","Date","toLocaleTimeString","mapFn","e","CommonUtil","isString","message","toJsonString","timestamp","map","isArray","e1","isEnabled","createLogEventModel","Function","prototype","bind","call","debug","FileUtilType","VitexClient","_baseUrl","axios","Ensure","property","propertyName","trim","maxLength","MomentUtil","locale","_locale","navigator","language","moment","seconds","duration","date","unix","utc","local","getLocal","format","getLocalTime","getLocalDate","BaseDataSource","_coingeckoClient","_vitexClient","_tokens","_tokensURL","_moment","initAsyncProtected","clear","disposeProtected","getActiveAccount","notNull","pool","endTimestamp","isExpired","latestRewardBlock","endBlock","all","getTokenPriceUSDAsync","rewardToken","stakingToken","rewardTokenPrice","stakingTokenPrice","totalTime","minus","startBlock","secondsInYear","usdRewardAmount","times","totalRewards","shiftedBy","usdStakingAmount","totalStaked","log","toFixed","apr","div","isFinite","isNaN","lte","getNetworkBlockHeightAsync","networkBlockHeight","remainingSeconds","toNumber","getTokenDetailAsync","token","tokenDecimals","urlIcon","mapCoinMarketCapName","unknownToken","p","getTokenAsync","stakingTokenId","rewardTokenId","getEndTimestampAsync","totalStakingBalance","totalRewardBalance","rewardPerPeriod","rewardPerToken","paidOut","fetchTimestamp","u","poolId","stakingBalance","rewardDebt","FileUtil","BrowserFileUtil","fetch","response","text","MockDataSource","fileUtil","_fileUtil","_pools","_users","_networkBlockHeight","_networkBlockHeightInterval","setInterval","plus","readFileAsync","pools","index","toPoolAsync","getAprAsync","users","toPoolUserInfoAsync","initNetworkBlockHeight","initPoolsAsync","initPoolUsersAsync","clearInterval","_account","_id","timeout","random","getPoolUserInfoAsync","userInfo","getPoolAsync","_poolId","isNullOrWhitespace","find","blockNumber","latestBlock","eq","period","latestReward","_tokenId","_amount","_updatePoolAsync","getAccount","gt","pendingAmount","emitPoolDeposit","emitPoolWithdraw","ds","getMockDataSource","CachedFunctionCall","callbackFn","_duration","_callbackFn","_currentValue","_lastExecution","getTime","ViteDataSource","_offchainMethods","_cachedNetworkBlockHeight","_contract","_listener","handleResponseAsync","waitForAccountBlockAsync","objectFromEntries","entries","fromEntries","entry","contractName","createAddressListenerAsync","results","decodeVmLog","vmlog","handleVmLogAsync","removeAddressListener","removeListener","balanceInfoMap","balance","pow","getAsync","callOffChainMethodAsync","getOffchainMethodAbi","offChain","getTotalPoolsAsync","promises","sort","b","Number","callContractAsync","Deposit","addr","pid","Withdraw","CommonContext","_vite","_datasource","initViteClientAsync","dispose","context","getCommonContext","DEPOSIT_MUTATION","gql","WITHDRAW_MUTATION","PoolMutations","deposit","parent","datasource","depositAsync","withdraw","withdrawAsync","GET_ACCOUNT_BALANCE_QUERY","AccountQueries","accountBalance","getAccountBalanceAsync","GET_NETWORK_BLOCK_HEIGHT_QUERY","NetworkQueries","TOKEN_FIELDS","TokenQueries","POOL_FIELDS","POOL_USER_INFO_FIELDS","GET_POOL_QUERY","GET_POOLS_QUERY","GET_POOL_USER_INFO_QUERY","PoolQueries","getPoolsAsync","totalPools","poolUserInfo","ApolloClientWrapper","ApolloClient","cache","InMemoryCache","typePolicies","Query","fields","resolvers","GraphQLScalarType","description","serialize","parseValue","Mutation","headers","getApolloClient","manager","_networkHeight","_network","_setNetworkCallback","cb","split","filter","includes","getNetworkManager","BootstrapTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","arrow","black","Footer","maxWidth","typography","pxToRem","border","useState","setNetworkBlockHeight","rotated","setRotated","emitter","useEffect","handleEvent","heightString","heightRef","substr","mod","NetworkBlockHeightChanged","off","Box","sx","py","px","background","Grid","container","direction","justifyContent","alignItems","spacing","item","title","placement","Typography","variant","verticalAlign","display","mr","transform","Chip","label","size","Root","TitleTypography","HeaderLoading","AppBar","position","Toolbar","MainScrollStyled","MainScrollInner","MainScroll","children","restProps","Container","MainWrapperStyled","MainWrapper","Web3Context","React","createContext","Web3Provider","setError","wallet","setWallet","setNetwork","onSetWalletCallback","onSetNetworkCallback","Provider","ConnectedWeb3Context","useConnectedWeb3Context","useContext","ConnectedWeb3","connection","setConnection","web3Context","useWeb3Context","commonContext","initWallet","networkManager","getNetwork","logout","useCallback","removeWallet","location","reload","active","FormatUtil","defaultMessage","graphQLErrors","SnackbarUtil","snackbar","enqueueSnackbar","formatMessage","QrCode","elementRef","useRef","defaultOpt","ecLevel","HIGH","minVersion","mode","modes","DRAW_WITH_IMAGE_BOX","radius","image","mSize","current","innerHTML","qrcode","generate","ref","LoginDialog","onClose","open","setOpen","viteClient","ConnectWalletDialog","Dialog","DialogTitle","DialogContent","DialogContentText","mt","textAlign","uri","NetworksFormControl","FormControl","margin","NetworkList","networks","getNetworks","Select","labelId","onChange","selectedNetwork","target","MenuItem","ThemeCtx","ThemeCtxProvider","prefersDarkMode","useMediaQuery","darkMode","setDarkMode","localStorage","getItem","handleDarkMode","setItem","useThemeMode","Header","loginOpen","setLoginOpen","mobileView","drawerOpen","state","setState","setResponsiveness","innerWidth","prevState","addEventListener","removeEventListener","src","alt","width","IconButton","ml","onClick","icon","truncateStringInTheMiddle","Button","Alert","Paper","padding","PoolFilter","prop","values","setValues","emitEvent","oldValues","newValues","emitPoolFilterValuesChanged","handleCheckedChange","checked","mb","xs","md","FormGroup","Stack","FormControlLabel","control","Checkbox","Switch","minWidth","InputLabel","TextField","autoComplete","factory","_map","getMomentFactory","FilterUtil","partition","closedPools","openPools","filtered","sorted","sortPools","searchPools","APR","orderBy","TOTAL_STAKED","term","lowerCaseTerm","PoolService","_apollo","_fetchPolicy","query","variables","fetchPolicy","poolQuery","userInfoQuery","mutate","mutation","lt","service","getPoolService","ViteUtil","bn","decimalPlaces","ROUND_DOWN","toFormat","ClickOnceButton","isDisabled","setIsDisabled","handleClick","LoadingButton","loading","fullWidth","disabled","PoolCountdown","hasStarted","setHasStarted","remainingBlocks","setRemainingBlocks","countdown","setCountdown","useMemo","networkHeight","gte","getDuration","days","hours","minutes","Skeleton","animation","PoolDepositDialog","setAmount","setDisabled","poolService","changeAmount","handleClose","handleConfirmAsync","enqueueError","htmlFor","Input","autoFocus","startAdornment","InputAdornment","DialogActions","AccountService","PoolWithdrawDialog","getStakedAmount","formatBigNumber","accountService","getBalanceAsync","PoolDialog","WITHDRAW","DEPOSIT","Rewards","setPool","rewardTokens","setRewardTokens","newRewardTokens","calculateRewardTokens","setCanClaim","updateRewardPerToken","newPool","Tokens","BigCoin","Avatar","SmallCoin","grey","coinUtil","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","mapIconUrl","TotalEarnedRewards","refresh","isEqualTo","rewards","isLessThan","isGreaterThan","showTotalTokens","TransparentPaper","paddingTop","PoolListItem","dialogState","setDialogState","canStake","setCanStake","canClaim","canWithdraw","setCanWithdraw","expanded","setExpanded","handleClickClaimAsync","Accordion","ev","String","AccordionSummary","expandIcon","sm","AccordionDetails","pt","Link","underline","href","cursor","zeroMinWidth","noWrap","showStaked","emitConnectWalletDialog","PoolList","isLoading","setIsLoading","allPools","setAllPools","setPools","setFilter","filterPools","PoolFilterValuesChanged","replacePool","findIndex","updatedPools","handlePoolEvent","PoolDeposit","PoolWithdraw","elevation","Pools","useQuery","pb","Transition","forwardRef","Slide","ConfirmTransactionDialog","TransitionComponent","keepMounted","style","zIndex","Network","refetch","emitNetworkBlockHeightChanged","Desc","lg","Main","useSnackbar","App","apolloClient","config","EXPONENTIAL_AT","maxSnack","ApolloProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","secondary","default","paper","divider","ThemeProvider","CssBaseline","ReactDOM","render","document","querySelector","defaultValue","ms","blob","min","max","Math","floor","lh","rh","truncateString","str","strPositionStart","strPositionEnd","GlobalEmitter","emit","PoolUpdate","EventEmitter","WalletType","WalletAccountType","Wallet","_type","accounts","baseInitinit","createAccount","forEach","Web","WebWallet","Session","SessionWallet","mnemonic","session","WalletAccount","baseInit","WalletConnector","walletManager","opts","meta","saveSession","stopBizHeartBeat","listener","sessionAccounts","getWallet","updateWalletStore","res","rej","sendCustomRequest","updateSession","catch","Connector","getValidSession","bridge","lastAccount","createSession","WalletStore","_webWalletKey","_sessionWalletKey","removeItem","sessionStorage","fromJS","saveData","WalletManager","_store","_wallet","_mnemonicDeriveIndex","_setWalletCallback","updateWallet","validateMnemonic","resetWallet","createWebWalletAccount","setActiveAccount","deriveAddress","mnemonics","createAddressByPrivateKey","validateMnemonics"],"mappings":"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","file":"static/js/main.07e98c66.chunk.js","sourcesContent":["import { abi as abiutils, accountBlock, utils, ViteAPI } from \"@vite/vitejs\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Task } from \"../util/task\";\nimport { Network, VmLog } from \"../util/types\";\nimport { getWalletManager, IWalletConnector, SessionWalletAccount, WalletAccount, WalletConnectorFactory, WalletManager, WebWalletAccount } from \"../wallet\";\nconst { WS_RPC } = require('@vite/vitejs-ws');\n\nconst logger = getLogger();\n\nconst providerTimeout = 60000;\nconst providerOptions = { retryTimes: 10, retryInterval: 5000 };\n\nexport class ViteClient {\n  private _isConnected: boolean;\n  private _connector?: IWalletConnector;\n  private _provider?: any;\n  private _client?: any;\n  private readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _connectorFactory: WalletConnectorFactory;\n\n  constructor() {\n    this._isConnected = false;\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._connectorFactory = new WalletConnectorFactory(this._walletManager);\n  }\n\n  get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  get connector(): Maybe<IWalletConnector> {\n    return this._connector;\n  }\n\n  initAsync = async (network: Network) => new Promise<void>((resolve, reject) => {\n    this._connector = this._connectorFactory.create(network)\n    this._provider = new WS_RPC(network.rpcUrl, providerTimeout, providerOptions);\n    let isResolved = false;\n    this._provider.on('error', (err: any) => {\n      logger.error(err)();\n      if (isResolved) return;\n      reject(err);\n      this._isConnected = false;\n    });\n    this._client = new ViteAPI(this._provider, () => {\n      logger.info(`ViteAPI connected to ${this._provider.path}`)();\n      isResolved = true;\n      resolve();\n      this._isConnected = true;\n    });\n  });\n\n  dispose(): void {\n    logger.info(\"Disposing ViteClient\")();\n    this._provider?.disconnect();\n    this._isConnected = false;\n  }\n\n  async requestAsync(method: string, ...args: any[]): Promise<any> {\n    if (this._isConnected && this._client) {\n      return this._client.request(method, ...args);\n    } else {\n      return Promise.reject('Vite client is not ready to make requests.');\n    }\n  }\n\n  async callContractAsync(account: WalletAccount, methodName: string, abi: any, params: any, tokenId: any, amount: string, toAddress: string): Promise<any> {\n    let block = accountBlock\n      .createAccountBlock(\"callContract\", {\n        address: account.address,\n        abi,\n        methodName,\n        tokenId,\n        amount,\n        toAddress,\n        params,\n      })\n\n    if (account instanceof WebWalletAccount) {\n      block = block.setProvider(this._client).setPrivateKey(account.privateKey);\n      await block.autoSetPreviousAccountBlock();\n      const result = await block.sign().send();\n      return result;\n    } else if (account instanceof SessionWalletAccount) {\n      if (this.connector) {\n        this._emitter.emitConfirmTransactionDialog(true);\n        try {\n          const result = await this.connector.sendTransactionAsync({\n            block: block.accountBlock\n          });\n          this._emitter.emitConfirmTransactionDialog(false);\n          return result;\n        } catch (error) {\n          this._emitter.emitConfirmTransactionDialog(false);\n          throw error\n        }\n      } else {\n        throw new Error(\"Connector is not defined\");\n      }\n    } else {\n      throw new Error(\"Account not supported\");\n    }\n  }\n\n  async callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any> {\n    let data = abiutils.encodeFunctionCall(abi, params);\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\n    let result = await this.requestAsync(\"contract_callOffChainMethod\", {\n      selfAddr: contractAddress,\n      offChainCode: offchaincode,\n      data: dataBase64,\n    });\n    if (result) {\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\n      let outputs = [];\n      for (let i = 0; i < abi.outputs.length; i++) {\n        outputs.push(abi.outputs[i].type);\n      }\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\n      let resultList = [];\n      if (offchainDecodeResult) {\n        for (let i = 0; i < abi.outputs.length; i++) {\n          if (abi.outputs[i].name) {\n            resultList.push({\n              name: abi.outputs[i].name,\n              value: offchainDecodeResult[i],\n            });\n          } else {\n            resultList.push({\n              name: \"\",\n              value: offchainDecodeResult[i],\n            });\n          }\n        }\n      }\n      return resultList;\n    }\n    return \"\";\n  }\n\n  decodeVmLog(vmLog: any, abi: any): Maybe<VmLog> {\n    let topics = vmLog.topics;\n    for (let j = 0; j < abi.length; j++) {\n      let abiItem = abi[j];\n      if (abiutils.encodeLogSignature(abiItem) === topics[0]) {\n        if (vmLog.data) {\n          let log: VmLog = {\n            topic: topics[0],\n            args: abiutils.decodeLog(\n              abiItem.inputs,\n              utils._Buffer.from(vmLog.data, \"base64\").toString(\"hex\"),\n              topics.slice(1)\n            ),\n            event: abiItem.name,\n          };\n          return log;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  async createAddressListenerAsync(address: string): Promise<any> {\n    const payload = {\n      addressHeightRange: {\n        placeholder: {\n          fromHeight: \"0\",\n          toHeight: \"0\",\n        },\n      },\n    };\n    let tempPayload = JSON.stringify(payload);\n    tempPayload = tempPayload.replace(\"placeholder\", address);\n    const result = await this._client?.subscribe(\"createVmlogSubscription\", JSON.parse(tempPayload));\n    return result;\n  }\n\n  removeListener(event: any): void {\n    this._client?.unsubscribe(event);\n  }\n\n  async waitForAccountBlockAsync(address: string, height: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      let result: any = undefined;\n      let error: any = undefined;\n      const task = new Task(async () => {\n        try {\n          let blockByHeight = await this.requestAsync(\n            'ledger_getAccountBlockByHeight',\n            address,\n            height\n          );\n\n          if (!blockByHeight) {\n            return true;\n          }\n\n          let receiveBlockHash = blockByHeight.receiveBlockHash;\n          if (!receiveBlockHash) {\n            return true;\n          }\n\n          let blockByHash = await this.requestAsync('ledger_getAccountBlockByHash', receiveBlockHash);\n          if (!blockByHash) {\n            return true;\n          }\n\n          result = {\n            ...this.getAccountBlockStatus(blockByHash),\n            accountBlock: blockByHash\n          }\n\n          return false;\n        } catch (err) {\n          error = err\n          return false;\n        }\n      }, 500);\n      task.start(() => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  private getAccountBlockStatus(accountBlock: any) {\n    let status = this.resolveAccountBlockData(accountBlock);\n    let statusTxt = '';\n    switch (status) {\n      case 0:\n        statusTxt = '0, Execution succeed';\n        break;\n      case 1:\n        statusTxt = '1, Execution reverted';\n        break;\n      case 2:\n        statusTxt = '2, Max call depth exceeded';\n        break;\n    }\n    return {\n      status,\n      statusTxt\n    };\n  }\n\n  private resolveAccountBlockData(accountBlock: any) {\n    if (\n      (accountBlock.blockType !== 4 && accountBlock.blockType !== 5) ||\n      !accountBlock.data\n    ) {\n      return 0;\n    }\n    let bytes = utils._Buffer.from(accountBlock.data, 'base64');\n\n    if (bytes.length !== 33) {\n      return 0;\n    }\n    return bytes[32];\n  }\n}\n\nconst client = new ViteClient();\n\nexport const getViteClient = () => {\n  return client;\n}","export class CoinUtil {\n  private readonly _iconUrlMap: Map<string, string>;\n  private readonly _coinMarketCapMap: Map<string, string>;\n  private readonly _coingeckoMap: Map<string, string>;\n\n  constructor() {\n    this._iconUrlMap = new Map<string, string>([\n      [\"https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png\", \"./assets/coins/vite.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/5faa1fa2b952137081e36c51af2b493c.png\", \"./assets/coins/usdc.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/3c231a8309999ad226afa097488a6158.png\", \"./assets/coins/dai.png\"]\n    ]);\n    this._coinMarketCapMap = new Map<string, string>([\n      [\"Terra\", \"terra-luna\"]\n    ]);\n    this._coingeckoMap = new Map<string, string>([\n      [\"Avalanche\", \"avalanche-2\"],\n      [\"Terra\", \"terra-luna\"]\n    ]);\n  }\n\n  mapIconUrl(iconUrl?: Maybe<string>): string {\n    if (!iconUrl) {\n      return \"\";\n    }\n    const existing = this._iconUrlMap.get(iconUrl);\n    return existing ?? iconUrl;\n  }\n\n  mapCoinMarketCapName(name: string): string {\n    const existing = this._coinMarketCapMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n\n  mapCoingeckoName(name: string): string {\n    const existing = this._coingeckoMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n}\n\nconst util = new CoinUtil();\n\nexport const getCoinUtil = (): CoinUtil => {\n  return util;\n}","export type Queue = {\n    processing: boolean;\n    queue: Action[];\n};\nexport type Action = (()=>Promise<void>);\n\nexport default class ActionQueue<keyType = any> {\n    private readonly actionQueues:Map<keyType, Queue> = new Map();\n\n    async queueAction<T=void>(key:keyType, nextStep:()=>Promise<T>):Promise<T>{\n        if(!this.actionQueues.has(key)){\n            this.actionQueues.set(key, {\n                processing: false,\n                queue: []\n            });\n        }\n        const acc = this.actionQueues.get(key) as Queue;\n        acc.queue.push(()=>nextStep().then(resolve, reject));\n        let resolve:((value:T)=>void);\n        let reject:((error?:Error)=>void);\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise<T>(async (r, j) => {\n            resolve = r;\n            reject = j;\n\n            if(acc.processing)return;\n            acc.processing = true;\n            while(acc.queue[0]){\n                const action = acc.queue.shift() as Action;\n                await action();\n            }\n            this.actionQueues.delete(key);\n        });\n    }\n}","export class Task {\n  private _taskTimer: NodeJS.Timeout | undefined\n  private _taskInterval: number\n  private _task: () => Promise<boolean>\n  private _callback?: () => any\n\n  constructor(task: () => Promise<boolean>, interval: number) {\n    this._task = task;\n    this._taskInterval = interval;\n\n    return this;\n  }\n\n  _run(): void {\n    this._taskTimer = setTimeout(async () => {\n      if (!this._task) {\n        this._onStop();\n        return;\n      }\n      if (!(await this._task())) {\n        this._onStop();\n        return;\n      }\n      this._run();\n    }, this._taskInterval);\n  }\n\n  _onStop() {\n    this._callback && this._callback();\n  }\n\n  start(callback?: () => any): void {\n    this._callback = callback;\n    if (this._taskTimer) {\n      return;\n    }\n\n    this._run();\n  }\n\n\n  stop(): void {\n    this._onStop();\n    if (!this._taskTimer) {\n      return;\n    }\n    window.clearTimeout(this._taskTimer);\n    this._taskTimer = undefined;\n  }\n}","import BigNumber from \"bignumber.js\";\nimport CoinGecko from \"coingecko-api\";\nimport ActionQueue from \"../common/queue\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getLogger } from \"../util/logger\";\n\nconst logger = getLogger();\n\nexport class CoingeckoClient {\n  private readonly _client: any;\n  private readonly _coinUtil: CoinUtil;\n  private readonly _cache: Map<string, BigNumber>;\n  private readonly _queue: ActionQueue<string>;\n  private _coinsToFetch: Set<string>;\n\n  constructor() {\n    process.emitWarning = console.warn\n    this._client = new CoinGecko();\n    this._coinUtil = getCoinUtil();\n    this._cache = new Map<string, BigNumber>();\n    this._queue = new ActionQueue<string>();\n    this._coinsToFetch = new Set<string>();\n  }\n\n  async getTokenPriceUSDAsync(name: string): Promise<BigNumber> {\n    try {\n      const mappedName = this._coinUtil.mapCoingeckoName(name);\n      if(this._cache.has(mappedName))return this._cache.get(mappedName) as BigNumber;\n      return await this._queue.queueAction(mappedName, async () => {\n        if(this._cache.has(mappedName))return this._cache.get(mappedName) as BigNumber;\n        this._coinsToFetch.add(mappedName);\n        return await this._queue.queueAction(\"global\", async () => {\n          if(this._cache.has(mappedName))return this._cache.get(mappedName) as BigNumber;\n          // let other requests to batch them\n          await new Promise(r=>setImmediate(r));\n          const params = { ids: Array.from(this._coinsToFetch) };\n          this._coinsToFetch = new Set<string>();\n          const result = await this._client.simple.price(params);\n  \n          for(const mappedName in result.data){\n            const price = new BigNumber(result.data[mappedName].usd);\n    \n            this._cache.set(mappedName, price);\n            setTimeout(() => {\n              this._cache.delete(mappedName)\n            }, 2*60*1000);\n          }\n  \n          return this._cache.get(mappedName) || new BigNumber(0);\n        });\n      })\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst client = new CoingeckoClient();\n\nexport const getCoingeckoClient = () => {\n  return client;\n}","import BigNumber from \"bignumber.js\"\n\nexport interface GenericType {\n  name: string;\n  type: string;\n}\n\nexport type Contract = {\n  address: string\n  contractName: string\n  binary: string\n  offChain: string\n  abi: any[]\n}\n\nexport type Network = {\n  id: number\n  networkId: number\n  name: string\n  rpcUrl: string\n  connectorUrl: string,\n  contract: string\n}\n\nexport type Token = {\n  __typename: string\n  id: string\n  name: string\n  symbol: string\n  originalSymbol: string\n  decimals: number\n  iconUrl: Maybe<string>\n  url: Maybe<string>\n}\n\nexport type Pool = {\n  __typename: string\n  id: number\n  stakingToken: Token\n  rewardToken: Token\n  apr?: Maybe<BigNumber>\n  totalStaked: BigNumber\n  totalRewards: BigNumber\n  startBlock: BigNumber\n  endBlock: BigNumber\n  endTimestamp: number\n  latestRewardBlock: BigNumber\n  rewardPerPeriod: BigNumber\n  rewardPerToken: BigNumber\n  paidOut: BigNumber\n  userInfo?: Maybe<PoolUserInfo>\n  fetchTimestamp: number\n}\n\nexport type ContractPool = {\n  stakingTokenId: string\n  rewardTokenId: string\n  totalStakingBalance: string\n  totalRewardBalance: string\n  startBlock: string\n  endBlock: string\n  latestRewardBlock: string\n  rewardPerPeriod: string\n  rewardPerToken: string\n  paidOut: string\n}\n\nexport type PoolUserInfo = {\n  __typename: string\n  id: string\n  poolId: number\n  account: string\n  stakingBalance: BigNumber\n  rewardDebt: BigNumber\n}\n\nexport type ContractPoolUserInfo = {\n  poolId: number\n  address: string\n  stakingBalance: string\n  rewardDebt: string\n}\n\nexport type PoolFilterValues = {\n  stakedOnly: boolean\n  showLive: boolean\n  sortBy: string\n  search: string\n}\n\nexport enum PoolSortType {\n  DEFAULT = 0,\n  APR = 1,\n  TOTAL_STAKED = 2\n}\n\nexport type PoolDialogState = {\n  type: PoolDialogType\n  open: boolean\n}\n\nexport enum PoolDialogType {\n  DEPOSIT = 0,\n  WITHDRAW = 1,\n  CLAIM = 2\n}\n\nexport enum GlobalEvent {\n  ConfirmTransactionDialog = 'ConfirmTransactionDialog',\n  ConnectWalletDialog = 'ConnectWalletDialog',\n  NetworkBlockHeightChanged = 'NetworkBlockHeightChanged',\n  PoolFilterValuesChanged = 'PoolFilterValuesChanged',\n  PoolDeposit = 'PoolDeposit',\n  PoolWithdraw = 'PoolWithdraw',\n  PoolUpdate = 'PoolUpdate'\n}\n\nexport type VmLog = {\n  event: string\n  topic: string\n  args: any\n}\n\nexport enum VmLogEvent {\n  PoolCreated = 'PoolCreated',\n  Deposit = 'Deposit',\n  Withdraw = 'Withdraw'\n}","import { GenericType, Network, PoolFilterValues, PoolSortType, Token } from \"../util/types\"\n\nexport const CommonConstants = {\n  APP_NAME: 'BeefStake',\n  WEB_WALLET_STORAGE_SPACE: 'VSP_WEB_WALLET',\n  SESSION_WALLET_STORAGE_SPACE: 'VSP_SESSION_WALLET',\n  VITE_TOKEN_ID: 'tti_5649544520544f4b454e6e40',\n  REWARD_FACTOR: 1e36 // 10^36 = new BigNumber(10).pow(36)\n}\n\nexport const Networks: Network[] = [\n  {\n    id: 1,\n    networkId: 1,\n    name: 'BeefStake v0.1',\n    rpcUrl: 'wss://node-vite.thomiz.dev/ws',\n    connectorUrl: 'wss://viteconnect.thomiz.dev',\n    contract: \"vite_cc2d0c2c34ae6af8bd58e111ca8c958d002c2b3199f449c8d7\"\n  }/*,\n  {\n    id: 2,\n    networkId: 2,\n    name: 'TESTNET',\n    rpcUrl: 'wss://buidl.vite.net/gvite/ws', // https://buidl.vite.net/gvite\n    connectorUrl: 'wss://viteconnect.thomiz.dev',\n    contract: \"vite_dcd10d6c5e72d616d5352c891040b49f5b333cfc039e40d5b6\"\n  },\n  {\n    id: 4,\n    networkId: 5,\n    name: 'DEBUG',\n    rpcUrl: 'ws://localhost:23457',\n    connectorUrl: 'wss://viteconnect.thomiz.dev',\n    contract: null\n  }*/\n]\n\nexport const TypeNames = {\n  Pool: \"Pool\",\n  PoolUserInfo: \"PoolUserInfo\",\n  Token: \"Token\"\n}\n\nexport const UnknownToken: Token = {\n  __typename: TypeNames.Token,\n  id: \"-1\",\n  name: \"UNKNOWN\",\n  symbol: \"UNKNOWN\",\n  originalSymbol: \"UNKNOWN\",\n  decimals: 0,\n  iconUrl: undefined,\n  url: undefined\n}\n\nexport const PoolSortTypes: GenericType[] = [\n  {\n    name: \"\",\n    type: \"DEFAULT\"\n  },\n  {\n    name: \"APR\",\n    type: \"APR\"\n  },\n  {\n    name: \"Total staked\",\n    type: \"TOTAL_STAKED\"\n  }\n]\n\nexport const DefaultPoolFilterValues: PoolFilterValues = {\n  stakedOnly: false,\n  showLive: true,\n  sortBy: PoolSortTypes[PoolSortType.DEFAULT].type,\n  search: \"\"\n}","import { CommonUtil } from './common.util';\n\nexport class LogEventModel {\n  banner?: string;\n  args?: any[];\n\n  public constructor(init?: Partial<LogEventModel>) {\n    Object.assign(this, init);\n  }\n}\n\nexport interface ILogger {\n  // Make sure level is selected e.g. 'Verbose' in Chrome\n  readonly debug: any;\n  readonly info: any;\n  readonly warn: any;\n  readonly error: any;\n}\n\nconst noop = (): any => undefined;\n\nexport class ConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return console.debug.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return console.info.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return console.warn.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return console.error.bind(console);\n    } else {\n      return noop;\n    }\n  }\n}\n\nexport class ExtendedConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  private timestamp(type: string): string {\n    return `[${type} ${new Date().toLocaleTimeString()}]`;\n  }\n\n  private createLogEventModel(type: string, ...args: any[]): LogEventModel {\n    const mapFn = (e: any) => {\n      if (CommonUtil.isString(e)) {\n        return e;\n      } else if (e instanceof Error) {\n        return e.message;\n      }\n      return CommonUtil.toJsonString(e);\n    };\n    const result = new LogEventModel({\n      banner: this.timestamp(type),\n      args: args?.map(e => Array.isArray(e) ? e.map(e1 => mapFn(e1)) : mapFn(e))\n    });\n    return result;\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('DEBUG', args);\n        return Function.prototype.bind.call(console.debug, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('INFO', args);\n        return Function.prototype.bind.call(console.info, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('WARN', args);\n        return Function.prototype.bind.call(console.warn, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        if (args?.length > 0) {\n          if (!CommonUtil.isString(args[0])) {\n            args.push('(See console output for more information.)');\n          }\n        }\n        const result = this.createLogEventModel('ERROR', args);\n        return Function.prototype.bind.call(console.error, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n}\n\nconst logger = new ExtendedConsoleLogger();\n\nexport const getLogger = (): ILogger => {\n  return logger;\n}","import fs from 'fs';\n\nexport abstract class FileUtil {\n  abstract readFileAsync(path: string): Promise<any>;\n}\n\nexport class BrowserFileUtil extends FileUtil {\n  async readFileAsync(path: string): Promise<any> {\n    const response = await fetch(path);\n    return response.text();\n  }\n}\n\nexport class LocalFileUtil extends FileUtil {\n  public async readFileAsync(path: string): Promise<any> {\n    return Promise.resolve(fs.readFileSync(path, 'utf8'));\n  }\n}\n\nexport enum FileUtilType {\n  Browser = 0,\n  Local = 1\n}\n\nexport const getFileUtil = (type: FileUtilType = FileUtilType.Browser) => {\n  switch (type) {\n    case FileUtilType.Local:\n      return new LocalFileUtil();\n    default:\n      return new BrowserFileUtil();\n  }\n}","import axios from 'axios';\n\ntype BaseResult<T> = {\n  code: number,\n  data: T\n}\n\nexport type TokenDetailResult = {\n  name: string\n  symbol: string\n  originalSymbol: string\n  tokenDecimals: number\n  urlIcon: string\n}\n\nexport class VitexClient {\n  private readonly _baseUrl: string;\n\n  constructor() {\n    this._baseUrl = \"https://vitex.vite.net\"\n  }\n\n  async getTokenDetailAsync(tokenId: string): Promise<Maybe<TokenDetailResult>> {\n    const result = await axios.get<BaseResult<TokenDetailResult>>(this._baseUrl + \"/api/v1/token/detail?tokenId=\" + tokenId);\n    return result.data.data;\n  }\n}\n\nconst client = new VitexClient();\n\nexport const getVitexClient = () => {\n  return client;\n}\n","export class Ensure {\n\n  public static notNull(property: any, propertyName: string, message?: string) {\n    if (property === null || property === undefined) {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static notNullOrWhiteSpace(property: Maybe<string>, propertyName: string, message?: string) {\n    if (property === null || property === undefined || property?.trim() === '') {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static maxLength(property: Maybe<string>, propertyName: string, maxLength: number) {\n    if (property && property.length > maxLength) {\n      throw new Error(`${propertyName} exceeds the maximum length of ${maxLength}`);\n    }\n  }\n\n}\n","import moment from 'moment';\n\nexport class MomentUtil {\n  private readonly _locale: string;\n\n  constructor(locale?: Maybe<string>) {\n    if (locale) {\n      this._locale = locale;\n    } else {\n      this._locale = navigator.language;\n    }\n    moment.locale(this._locale);\n  }\n\n  public getLocale(): string {\n    return this._locale;\n  }\n\n  public get(): moment.Moment {\n    return moment();\n  }\n\n  public getDuration(seconds: number): moment.Duration {\n    return moment.duration(seconds, 'seconds');\n  }\n\n  public getFromUnix(date: number) {\n    return moment.unix(date);\n  }\n\n  public getFromMilliseconds(date: number) {\n    return moment(date, 'x');\n  }\n\n  public getLocal(date: any): moment.Moment {\n    return moment.utc(date).local();\n  }\n\n  public getLocalTime(date: any): string {\n    return this.getLocal(date).format('LTS');\n  }\n\n  public getLocalDate(date: any): string {\n    return this.getLocal(date).format('L');\n  }\n\n  public getLocalFormatted(date: any): string {\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\n  }\n\n  public getLocalReverseFormatted(date: any): string {\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\n  }\n\n  public isExpired(timestamp: number): boolean {\n    try {\n      if (timestamp >= 0) {\n        return moment.utc().unix() >= timestamp;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { CoingeckoClient, getCoingeckoClient } from \"../clients/coingecko.client\";\nimport { getVitexClient, VitexClient } from \"../clients/vitex.client\";\nimport { TypeNames, UnknownToken } from \"../common/constants\";\nimport ActionQueue from \"../common/queue\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { Ensure } from \"../util/ensure\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { ContractPool, ContractPoolUserInfo, Network, Pool, PoolUserInfo, Token } from \"../util/types\";\nimport { getWalletManager, WalletAccount, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport interface IDataSource {\n  initAsync(network: Network): Promise<void>;\n  dispose(): void;\n  getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n  getNetworkBlockHeightAsync(): Promise<BigNumber>;\n  getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n  getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n  getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n  getTokenAsync(_id: string): Promise<Token>;\n  getTotalPoolsAsync(): Promise<number>;\n  depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n  withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}\n\nexport abstract class BaseDataSource implements IDataSource {\n  protected readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _coingeckoClient: CoingeckoClient;\n  private readonly _vitexClient: VitexClient;\n  private readonly _coinUtil: CoinUtil;\n  private readonly _tokens: Map<string, Token>;\n  private readonly _queue: ActionQueue<string>;\n  private readonly _tokensURL: Map<string, string>;\n  private _moment: MomentUtil = new MomentUtil();\n\n  constructor() {\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._coingeckoClient = getCoingeckoClient();\n    this._vitexClient = getVitexClient();\n    this._coinUtil = getCoinUtil();\n    this._tokens = new Map<string, Token>();\n    this._tokensURL = new Map<string, string>([\n      [\"tti_22d0b205bed4d268a05dfc3c\", \"https://vitamincoin.org/home\"]\n    ])\n    this._queue = new ActionQueue<string>();\n  }\n\n  async initAsync(network: Network): Promise<void> {\n    logger.info(\"Init BaseDataSource\")();\n    this._moment = new MomentUtil();\n    await this.initAsyncProtected(network);\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing BaseDataSource\")();\n    this._tokens.clear();\n    this.disposeProtected();\n  }\n\n  getAccount(): WalletAccount {\n    const account = this._walletManager.getActiveAccount();\n    Ensure.notNull(account, \"account\", \"Please connect your wallet first.\");\n    return account as WalletAccount;\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    try {\n      if (pool.endTimestamp >= 0 && (this._moment.isExpired(pool.endTimestamp) || pool.latestRewardBlock === pool.endBlock)) {\n        // pool is closed, should not display numeric APR.\n        return undefined;\n      }\n      const [\n        rewardTokenPrice,\n        stakingTokenPrice\n      ] = await Promise.all([\n        this._coingeckoClient.getTokenPriceUSDAsync(pool.rewardToken.name),\n        this._coingeckoClient.getTokenPriceUSDAsync(pool.stakingToken.name)\n      ]);\n      const totalTime = pool.endBlock.minus(pool.startBlock);\n      const secondsInYear = new BigNumber(365 * 24 * 60 * 60);\n      const usdRewardAmount = rewardTokenPrice.times(pool.totalRewards).shiftedBy(-pool.rewardToken.decimals);\n      const usdStakingAmount = stakingTokenPrice.times(pool.totalStaked).shiftedBy(-pool.stakingToken.decimals);\n      console.log(usdRewardAmount.toFixed(), usdStakingAmount.toFixed())\n      const apr = new BigNumber(usdRewardAmount)\n      .div(usdStakingAmount)\n      .div(totalTime)\n      .times(secondsInYear)\n      .times(100)\n      return !apr.isFinite() || apr.isNaN() ? undefined : apr;\n    } catch (error) {\n      logger.error(error)();\n      return undefined;\n    }\n  }\n\n  async getEndTimestampAsync(endBlock: BigNumber): Promise<number> {\n    try {\n      if (!endBlock || endBlock.lte(0)) {\n        return -1;\n      }\n      const networkBlockHeight = await this.getNetworkBlockHeightAsync();\n      const remainingSeconds = endBlock.minus(networkBlockHeight);\n      if (remainingSeconds.lte(0)) {\n        return 0;\n      }\n      return this._moment.get().add(remainingSeconds.toNumber(), \"seconds\").unix();\n    } catch (error) {\n      logger.error(error)();\n    }\n    return 0;\n  }\n\n  async getTokenAsync(id: string): Promise<Token> {\n    try {\n      if(this._tokens.has(id))return this._tokens.get(id) as Token;\n      // @ts-ignore\n      return await this._queue.queueAction<Token>(id, async () => {\n        if(this._tokens.has(id))return this._tokens.get(id) as Token;\n        const result = await this._vitexClient.getTokenDetailAsync(id);\n        if(!result)return\n        const token:Token = {\n          __typename: \"Token\",\n          id,\n          name: result.name,\n          symbol: result.symbol,\n          originalSymbol: result.originalSymbol,\n          decimals: result.tokenDecimals,\n          iconUrl: result.urlIcon,\n          url: this._tokensURL.get(id) || \"https://coinmarketcap.com/currencies/\" + this._coinUtil.mapCoinMarketCapName(result.name)\n        }\n        this._tokens.set(id, token);\n        return token;\n      });\n    } catch (error) {\n      logger.error(error)();\n    }\n    const unknownToken = {\n      ...UnknownToken,\n      id\n    }\n    this._tokens.set(id, unknownToken);\n    return unknownToken;\n  }\n\n  protected async toPoolAsync(id: number, p: ContractPool): Promise<Pool> {\n    const [\n      stakingToken,\n      rewardToken,\n      endTimestamp\n    ] = await Promise.all([\n      this.getTokenAsync(p.stakingTokenId),\n      this.getTokenAsync(p.rewardTokenId),\n      this.getEndTimestampAsync(new BigNumber(p.endBlock))\n    ]);\n    const pool: Pool = {\n      __typename: TypeNames.Pool,\n      id,\n      stakingToken,\n      rewardToken,\n      totalStaked: new BigNumber(p.totalStakingBalance),\n      totalRewards: new BigNumber(p.totalRewardBalance),\n      startBlock: new BigNumber(p.startBlock),\n      endBlock: new BigNumber(p.endBlock),\n      endTimestamp,\n      latestRewardBlock: new BigNumber(p.latestRewardBlock),\n      rewardPerPeriod: new BigNumber(p.rewardPerPeriod),\n      rewardPerToken: new BigNumber(p.rewardPerToken),\n      paidOut: new BigNumber(p.paidOut),\n      fetchTimestamp: this._moment.get().unix()\n    };\n    return pool;\n  }\n\n  protected async toPoolUserInfoAsync(u: ContractPoolUserInfo): Promise<PoolUserInfo> {\n    return {\n      __typename: TypeNames.PoolUserInfo,\n      id: `${u.address}_${u.poolId}`,\n      poolId: u.poolId,\n      account: u.address,\n      stakingBalance: new BigNumber(u.stakingBalance),\n      rewardDebt: new BigNumber(u.rewardDebt)\n    }\n  }\n\n  protected abstract initAsyncProtected(network: Network): Promise<void>;\n\n  protected abstract disposeProtected(): void;\n\n  abstract getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n\n  abstract getNetworkBlockHeightAsync(): Promise<BigNumber>;\n\n  abstract getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n\n  abstract getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n\n  abstract getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n\n  abstract getTotalPoolsAsync(): Promise<number>;\n\n  abstract depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n\n  abstract withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\n\nconst logger = getLogger();\n\nexport class MockDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private _pools: Pool[];\n  private _users: PoolUserInfo[];\n  private _networkBlockHeight: BigNumber;\n  private _networkBlockHeightInterval?: NodeJS.Timeout;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._pools = [];\n    this._users = [];\n    this._networkBlockHeight = new BigNumber(0);\n    logger.info(\"MockDataSource loaded\")();\n  }\n\n  private initNetworkBlockHeight() {\n    this._networkBlockHeight = new BigNumber(0);\n    this._networkBlockHeightInterval = setInterval(() => {\n      this._networkBlockHeight = this._networkBlockHeight.plus(1);\n      // console.log(this._networkBlockHeight.toString())\n    }, 1000);\n  }\n\n  private async initPoolsAsync(): Promise<void> {\n    let pools = await this._fileUtil.readFileAsync(\"./assets/data/mock_pool_info.json\");\n    pools = JSON.parse(pools);\n    this._pools = [];\n    for (let index = 0; index < pools.length; index++) {\n      const p: ContractPool = pools[index];\n      const pool = await this.toPoolAsync(index, p);\n      pool.apr = await this.getAprAsync(pool);\n      this._pools.push(pool);\n    }\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    switch (pool.id) {\n      case 0:\n        return new BigNumber(2.12345678)\n      case 1:\n        return new BigNumber(3.55555555)\n      default:\n        return super.getAprAsync(pool)\n    };\n  }\n\n  private async initPoolUsersAsync(): Promise<void> {\n    let users = await this._fileUtil.readFileAsync(\"./assets/data/mock_user_info.json\");\n    users = JSON.parse(users);\n    this._users = [];\n    for (let index = 0; index < users.length; index++) {\n      const u: ContractPoolUserInfo = users[index];\n      const info = await this.toPoolUserInfoAsync(u);\n      this._users.push(info);\n    }\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    logger.info(\"MockDataSource initAsyncProtected\")();\n    this.initNetworkBlockHeight();\n    await this.initPoolsAsync();\n    await this.initPoolUsersAsync();\n  }\n\n  protected disposeProtected(): void {\n    if (this._networkBlockHeightInterval) {\n      clearInterval(this._networkBlockHeightInterval);\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    return new BigNumber(0);\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    return this._networkBlockHeight;\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    await CommonUtil.timeout(CommonUtil.random(100, 500));\n    const pool = this._pools[_id];\n    if (!_account) {\n      return pool;\n    }\n    return {\n      ...pool,\n      userInfo: await this.getPoolUserInfoAsync(_id, _account)\n    }\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    await CommonUtil.timeout(1000);\n    if (!_account) {\n      return this._pools;\n    }\n    const pools = [];\n    for (const p of this._pools) {\n      pools.push(await this.getPoolAsync(p.id, _account))\n    }\n    return pools;\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    return this._users.find(e => e.poolId === _poolId && e.account.toLowerCase() === _account?.toLowerCase());\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    return this._pools.length;\n  }\n\n  private async _updatePoolAsync(pool: Pool): Promise<void> {\n    const blockNumber = await this.getNetworkBlockHeightAsync();\n    const latestBlock = blockNumber < pool.endBlock ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock <= pool.latestRewardBlock) {\n      return;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(0)) {\n      pool.latestRewardBlock = latestBlock;\n      return;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    let userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (userInfo) {\n      // dispense rewards\n      if (userInfo.stakingBalance.gt(0)) {\n        const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n        pool.paidOut = pool.paidOut.plus(pendingAmount);\n      }\n      // update balances & recompute rewardDebt\n      userInfo.stakingBalance = userInfo.stakingBalance.plus(amount);\n      userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n    } else {\n      userInfo = await this.toPoolUserInfoAsync({\n        poolId: _id,\n        address: account,\n        stakingBalance: amount.toString(),\n        rewardDebt: \"0\"\n      });\n      this._users.push(userInfo);\n    }\n    pool.totalStaked = pool.totalStaked.plus(amount);\n    this._emitter.emitPoolDeposit(_id, new BigNumber(_amount), account);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    const userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (!userInfo) {\n      throw new Error(\"Withdraw not possible\")\n    }\n    if (userInfo.stakingBalance.lte(0) || amount.gt(userInfo.stakingBalance)) {\n      throw new Error(\"Insufficient balance\")\n    }\n\n    // dispense rewards\n    const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n    pool.paidOut = pool.paidOut.plus(pendingAmount);\n\n    // update balances & recompute rewardDebt\n    userInfo.stakingBalance = userInfo.stakingBalance.minus(amount);\n    pool.totalStaked = pool.totalStaked.minus(amount);\n    userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n\n    this._emitter.emitPoolWithdraw(_id, new BigNumber(_amount), account);\n    return true;\n  }\n}\n\nconst ds = new MockDataSource();\n\nexport const getMockDataSource = () => {\n  return ds;\n}","export class CachedFunctionCall<T> {\n  private readonly _duration: number;\n  private readonly _callbackFn: () => Promise<T>;\n  private _currentValue?: Maybe<T>;\n  private _lastExecution: number;\n\n  constructor(duration: number, callbackFn: () => Promise<T>) {\n    this._duration = duration;\n    this._callbackFn = callbackFn;\n    this._lastExecution = new Date(0).getTime();\n  }\n\n  private isExpired(): boolean {\n    return new Date().getTime() >= this._lastExecution + this._duration;\n  }\n\n  async getAsync(): Promise<T> {\n    if (!this._currentValue || this.isExpired()) {\n      this._currentValue = await this._callbackFn();\n      this._lastExecution = new Date().getTime();\n    }\n    return this._currentValue;\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { CommonConstants } from \"../common/constants\";\nimport { CachedFunctionCall } from \"../util/cache\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Contract, ContractPool, ContractPoolUserInfo, Network, Pool, PoolUserInfo, VmLog, VmLogEvent } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\n\nconst logger = getLogger();\n\nexport class ViteDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private readonly _client: ViteClient;\n  private readonly _offchainMethods: Map<string, string> = new Map<string, string>();\n  private readonly _cachedNetworkBlockHeight: CachedFunctionCall<number>;\n  private _contract?: Contract;\n  private _listener: any;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._client = getViteClient();\n    this._cachedNetworkBlockHeight = new CachedFunctionCall(500, async () => {\n      // prevent function from being called more than once every 500 milliseconds\n      return await this._client.requestAsync(\"ledger_getSnapshotChainHeight\")\n    });\n    logger.info(\"ViteDataSource loaded\")();\n  }\n\n  protected async initAsyncProtected(network: Network): Promise<void> {\n    const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools.json');\n    this._contract = JSON.parse(contract) as Contract;\n    this._contract.address = network.contract\n    logger.info(`Contract ${this._contract?.contractName} loaded`)();\n    this._listener = await this._client.createAddressListenerAsync(this._contract.address);\n    this._listener.on((results: any[]) => {\n      if (!this._contract?.abi) {\n        logger.info('Could not decode vmlog because contract abi is not defined.')();\n      } else {\n        for (let index = 0; index < results.length; index++) {\n          const result = results[index];\n          const vmLog = this._client.decodeVmLog(result.vmlog, this._contract.abi);\n          logger.info(vmLog ?? result)();\n          if (vmLog) {\n            this.handleVmLogAsync(vmLog);\n          }\n        }\n      }\n    });\n  }\n\n  protected disposeProtected(): void {\n    this.removeAddressListener();\n    this._offchainMethods.clear();\n  }\n\n  private removeAddressListener(): void {\n    if (this._listener) {\n      this._client.removeListener(this._listener);\n    }\n  }\n\n  private get contract(): Contract {\n    if (this._contract?.address === undefined) {\n      throw new Error(\"Contract is not defined.\");\n    } else {\n      return this._contract;\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    try {\n      if (CommonUtil.isNullOrWhitespace(_account)) {\n        return new BigNumber(0);\n      }\n      const result = await this._client.requestAsync(\"ledger_getAccountInfoByAddress\", _account);\n      if (!result?.balanceInfoMap) {\n        return new BigNumber(0);\n      }\n      return new BigNumber(result.balanceInfoMap[CommonConstants.VITE_TOKEN_ID].balance).div(new BigNumber(10).pow(18));\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    try {\n      const result = await this._cachedNetworkBlockHeight.getAsync();\n      return new BigNumber(result);\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolInfo\"), this.contract.offChain, [_id]);\n    const p = this.objectFromEntries(result) as ContractPool;\n    const pool = await this.toPoolAsync(_id, p);\n    const [\n      apr,\n      userInfo\n    ] = await Promise.all([\n      this.getAprAsync(pool),\n      this.getPoolUserInfoAsync(_id, _account)\n    ])\n    pool.apr = apr;\n    pool.userInfo = userInfo;\n    return pool;\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    const amount = await this.getTotalPoolsAsync();\n    const pools:Pool[] = [];\n    const promises = [];\n    for (let index = 0; index < amount; index++) {\n      promises.push((async () => {\n        try {\n          const pool = await this.getPoolAsync(index, _account);\n          pools.push(pool)\n        } catch (error) {\n          logger.error(error)();\n        }\n      })());\n    }\n    await Promise.all(promises);\n    return pools.sort((a, b) => a.id - b.id);\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (!_account || CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getUserInfo\"), this.contract.offChain, [_poolId, _account]);\n    const u = this.objectFromEntries(result) as ContractPoolUserInfo;\n    const info = await this.toPoolUserInfoAsync(u);\n    return info;\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolCount\"), this.contract.offChain, []);\n    return Number(result[0].value);\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"deposit\", this.contract.abi, [_id], _tokenId, _amount, this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"withdraw\", this.contract.abi, [_id, _amount], undefined, \"0\", this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  private getOffchainMethodAbi(name: string): any {\n    let result: Maybe<any>\n    if (this._offchainMethods.has(name)) {\n      result = this._offchainMethods.get(name)\n    } else {\n      result = this.contract.abi.find(e => e.type === \"offchain\" && e.name === name)\n      if (result) {\n        this._offchainMethods.set(name, result)\n      }\n    }\n    if (result) {\n      return result\n    } else {\n      throw new Error(`The offchain method '${name}' does not exist.'`)\n    }\n  }\n\n  private handleResponseAsync = async (address: string, height: string) => new Promise<void>((resolve, reject) => {\n    this._client.waitForAccountBlockAsync(address, height).then((result: any) => {\n      if (result?.status === 0) {\n        resolve()\n      } else {\n        reject(result?.statusTxt ?? \"Something went wrong.\")\n      }\n    })\n  })\n\n  private async handleVmLogAsync(vmlog: VmLog): Promise<void> {\n    try {\n      if (vmlog.event === VmLogEvent.Deposit && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolDeposit(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else if (vmlog.event === VmLogEvent.Withdraw && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolWithdraw(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else {\n        logger.info('Unknown vmlog event.', vmlog)();\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  private objectFromEntries = (entries: any) => {\n    return Object.fromEntries(\n      entries.map((entry: any) => {\n        return [entry.name, entry.value];\n      })\n    );\n  }\n}\n\nconst ds = new ViteDataSource();\n\nexport const getViteDataSource = () => {\n  return ds;\n}","import { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { getMockDataSource, getViteDataSource, IDataSource } from \"../datasources\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\n\nconst logger = getLogger();\n\nexport class CommonContext {\n  private readonly _vite: ViteClient;\n  private _datasource: IDataSource;\n\n  constructor() {\n    this._vite = getViteClient();\n    this._datasource = getMockDataSource();\n  }\n\n  async initAsync(network: Network): Promise<void> {\n    await this.initViteClientAsync(network);\n    switch (network.id) {\n      case 3:\n        this._datasource = getMockDataSource();\n        break;\n      default:\n        this._datasource = getViteDataSource();\n        break;\n    }\n    await this._datasource.initAsync(network);\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing CommonContext\")();\n    this._datasource.dispose();\n    this._vite.dispose();\n  }\n\n  get datasource(): IDataSource {\n    return this._datasource;\n  }\n\n  private async initViteClientAsync(network: Network): Promise<void> {\n    try {\n      await this._vite.initAsync(network);\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n}\n\nconst context = new CommonContext();\n\nexport const getCommonContext = () => {\n  return context;\n}","import { gql } from \"@apollo/client\";\nimport { ApolloContext } from \"../clients/apollo.client\";\n\nexport const DEPOSIT_MUTATION = gql`\nmutation Deposit($id: ID!, $tokenId: String!, $amount: String!) {\n  deposit(id: $id, tokenId: $tokenId, amount: $amount) @client\n}\n`;\n\nexport const WITHDRAW_MUTATION = gql`\nmutation Withdraw($id: ID!, $amount: String!) {\n  withdraw(id: $id, amount: $amount) @client\n}\n`;\n\nexport const PoolMutations = {\n  async deposit(parent: any, { id, tokenId, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.depositAsync(Number(id), tokenId, amount);\n  },\n  async withdraw(parent: any, { id, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.withdrawAsync(Number(id), amount);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_ACCOUNT_BALANCE_QUERY = gql`\n  query GetAccountBalance($account: String) {\n    accountBalance(account: $account) @client\n  }\n`;\n\nexport const AccountQueries = {\n  async accountBalance(parent: any, { account }: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getAccountBalanceAsync(account);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_NETWORK_BLOCK_HEIGHT_QUERY = gql`\n  query GetNetworkBlockHeight {\n    networkBlockHeight @client\n  }\n`;\n\nexport const NetworkQueries = {\n  async networkBlockHeight(parent: any, params: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getNetworkBlockHeightAsync();\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Token } from '../util/types';\n\nexport const TOKEN_FIELDS = gql`\n  fragment TokenFields on Token {\n    id\n    name\n    symbol\n    originalSymbol\n    decimals\n    iconUrl\n    url\n  }\n`;\n\nexport const GET_TOKEN_QUERY = gql`\n  ${TOKEN_FIELDS}\n  query GetToken($id: ID!) {\n    token(id: $id) @client {\n      ...TokenFields\n    }\n  }\n`;\n\nexport const TokenQueries = {\n  async token(parent: any, { id }: any, context: ApolloContext): Promise<Token> {\n    return context.client.datasource.getTokenAsync(id);\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Pool, PoolUserInfo } from '../util/types';\nimport { TOKEN_FIELDS } from './token';\n\nexport const POOL_FIELDS = gql`\n  fragment PoolFields on Pool {\n    id\n    stakingToken {\n      ...TokenFields\n    }\n    rewardToken {\n      ...TokenFields\n    }\n    apr\n    totalStaked\n    totalRewards\n    startBlock\n    endBlock\n    endTimestamp\n    latestRewardBlock\n    rewardPerPeriod\n    rewardPerToken\n    paidOut\n    userInfo {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const POOL_USER_INFO_FIELDS = gql`\n  fragment PoolUserInfoFields on PoolUserInfo {\n    id\n    poolId\n    account\n    stakingBalance\n    rewardDebt\n  }\n`;\n\nexport const GET_POOL_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPool($id: ID!, $account: String) {\n    pool(id: $id, account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_POOLS_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPools($account: String) {\n    pools(account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_TOTAL_POOLS_QUERY = gql`\n  query GetTotalPools {\n    totalPools @client\n  }\n`;\n\nexport const GET_POOL_USER_INFO_QUERY = gql`\n  ${POOL_USER_INFO_FIELDS}\n  query GetPoolUserInfo($poolId: Int!, $account: String) {\n    poolUserInfo(poolId: $poolId, account: $account) @client {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const PoolQueries = {\n  async pool(parent: any, { id, account }: any, context: ApolloContext): Promise<Pool> {\n    return context.client.datasource.getPoolAsync(Number(id), account);\n  },\n  async pools(parent: any, { account }: any, context: ApolloContext): Promise<Pool[]> {\n    return context.client.datasource.getPoolsAsync(account);\n  },\n  async totalPools(parent: any, params: any, context: ApolloContext): Promise<number> {\n    return await context.client.datasource.getTotalPoolsAsync();\n  },\n  async poolUserInfo(parent: any, { poolId, account }: any, context: ApolloContext): Promise<Maybe<PoolUserInfo>> {\n    return context.client.datasource.getPoolUserInfoAsync(Number(poolId), account);\n  }\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { GraphQLScalarType } from 'graphql';\nimport { getCommonContext } from '../contexts/common';\nimport { IDataSource } from '../datasources';\nimport { PoolMutations } from '../mutations';\nimport { NetworkQueries, PoolQueries, TokenQueries } from '../queries';\nimport { AccountQueries } from '../queries/account';\n\nexport type ApolloContext = {\n  cache: InMemoryCache,\n  client: ApolloClientWrapper,\n  clientAwareness: any,\n  getCacheKey: (obj: any) => string | undefined\n}\n\nexport class ApolloClientWrapper extends ApolloClient<NormalizedCacheObject> {\n  get datasource(): IDataSource {\n    return getCommonContext().datasource;\n  }\n}\n\nconst cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n      }\n    }\n  }\n});\n\nconst bigNumberScalar = new GraphQLScalarType({\n  name: 'BigNumber',\n  description: 'BigNumber custom scalar type',\n  serialize(value: BigNumber) {\n    return value.toString();\n  },\n  parseValue(value: string) {\n    return new BigNumber(value);\n  }\n});\n\nconst resolvers: any = {\n  BigNumber: bigNumberScalar,\n  Query: {\n    ...AccountQueries,\n    ...NetworkQueries,\n    ...PoolQueries,\n    ...TokenQueries\n  },\n  Mutation: {\n    ...PoolMutations\n  }\n};\n\n// https://www.apollographql.com/docs/react/networking/authentication/#header\nconst client = new ApolloClientWrapper({\n  // link: authLink.concat(httpLink),\n  cache: cache,\n  resolvers,\n  headers: {\n    'client-name': process.env.REACT_APP_NAME || 'client',\n    'client-version': process.env.REACT_APP_VERSION || '0',\n  },\n})\n\nexport const getApolloClient = () => {\n  return client;\n}","import BigNumber from \"bignumber.js\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\nimport { Networks } from \"./constants\";\n\nconst logger = getLogger();\n\nexport class NetworkManager {\n  private _networkHeight: BigNumber;\n  private _network?: Maybe<Network>;\n  private _setNetworkCallback?: (network?: Maybe<Network>) => void;\n\n  constructor() {\n    this._networkHeight = new BigNumber(0);\n  }\n\n  set networkHeight(height: BigNumber) {\n    this._networkHeight = height;\n  }\n\n  get networkHeight(): BigNumber {\n    return this._networkHeight;\n  }\n\n  set onSetNetworkCallback(cb: (network?: Maybe<Network>) => void) {\n    this._setNetworkCallback = cb;\n  }\n\n  getNetwork(): Maybe<Network> {\n    return this._network;\n  }\n\n  setNetwork(network?: Maybe<Network>): void {\n    this._network = network;\n    if (this._setNetworkCallback) {\n      this._setNetworkCallback(this._network);\n    }\n  }\n\n  getNetworks(): Network[] {\n    try {\n      const ids = process.env.REACT_APP_NETWORKS?.split(\",\").map(e => Number(e));\n      return Networks.filter(e => ids?.includes(e.id))\n    } catch (error) {\n      logger.error(error)\n    }\n    return Networks;\n  }\n}\n\nconst manager = new NetworkManager();\n\nexport const getNetworkManager = () => {\n  return manager;\n}","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\n\nexport const LightTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}));\n\nexport const BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nexport const HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}));","import CropSquareIcon from '@mui/icons-material/CropSquare';\nimport { Box, Chip, Grid, Typography } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\n\nexport const Footer: React.FC = () => {\n  const [networkBlockHeight, setNetworkBlockHeight] = useState(new BigNumber(0))\n  const [rotated, setRotated] = useState(false)\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (height: BigNumber) => {\n      const heightString = height.toString();\n      let heightRef = height;\n      if (heightString.length > 1) {\n        heightRef = new BigNumber(heightString.substr(heightString.length - 1, heightString.length))\n      }\n      setRotated(heightRef.mod(2).eq(0));\n      setNetworkBlockHeight(height);\n    }\n    emitter.on(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    };\n  }, [emitter]);\n\n  return (\n    <Box sx={{ py: \"10px\", px: \"24px\", background: \"#171716\", color: \"#AFAEAC\"}}>\n      <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <BootstrapTooltip title=\"Network block height\" placement=\"top\" arrow>\n            <Typography variant=\"caption\" sx={{ verticalAlign: \"middle\", display: \"inline-flex\" }}>\n              <CropSquareIcon sx={{\n                color: \"gray\",\n                mr: \"2px\",\n                transform: rotated ? \"rotate(45deg)\" : \"rotate(0deg)\",\n                fontSize: \"17px\"\n              }} />\n              {networkBlockHeight.toString()}\n            </Typography>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip title=\"Version\" placement=\"top\" arrow>\n            <Chip label={'v' + process.env.REACT_APP_VERSION} variant=\"outlined\" size=\"small\" sx={{color: \"#AFAEAC\"}}/>\n          </BootstrapTooltip>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n","import React from 'react';\nimport { AppBar, styled, Toolbar, Typography } from '@mui/material';\nimport { CommonConstants } from '../../../../common/constants';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`,\n);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`,\n);\n\nexport const HeaderLoading: React.FC = (props: any) => {\n  return (\n    <Root>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <img src={\"./logo_white.png\"} alt=\"logo\" width=\"30\" /> */}\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n          </TitleTypography>\n        </Toolbar>\n      </AppBar>\n    </Root>\n  )\n}","import { Container, styled } from '@mui/material';\nimport * as React from 'react';\n\nconst MainScrollStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: center;\n  padding-bottom: 15px;\n  //padding-top: 30px;\n  overflow: auto;\n  overflow-x: hidden;\n`,\n);\n\nconst MainScrollInner = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`,\n);\n\nexport const MainScroll: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return (\n    <MainScrollStyled {...restProps}>\n      <Container maxWidth=\"lg\">\n        <MainScrollInner>{children}</MainScrollInner>\n      </Container>\n    </MainScrollStyled>\n  )\n}\n","import { styled } from '@mui/material';\nimport React from 'react';\n\nconst MainWrapperStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  bgcolor: 'background.default\n`,\n);\n\nexport const MainWrapper: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\n}\n","import React, { useState } from 'react';\nimport { getNetworkManager } from '../common/network';\nimport { Network } from '../util/types';\nimport { getWalletManager, SessionWallet, WebWallet } from '../wallet';\n\nexport interface IWeb3Context {\n  setError: (error: Error) => void,\n  error?: Maybe<Error>,\n  wallet?: Maybe<WebWallet | SessionWallet>\n  network?: Maybe<Network>\n}\n\nconst Web3Context = React.createContext<Maybe<IWeb3Context>>(undefined)\n\nexport const useWeb3Context = () => {\n  const context = React.useContext(Web3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\nexport const Web3Provider: React.FC<Props> = (props: Props) => {\n  const [error, setError] = useState<Maybe<Error>>(null)\n  const [wallet, setWallet] = useState<Maybe<WebWallet | SessionWallet>>(null)\n  const [network, setNetwork] = useState<Maybe<Network>>(null)\n\n  const walletManager = getWalletManager()\n  walletManager.onSetWalletCallback = setWallet\n\n  const networkManager = getNetworkManager()\n  networkManager.onSetNetworkCallback = setNetwork\n\n  const context: IWeb3Context = {\n    setError,\n    error,\n    wallet,\n    network\n  }\n\n  return (\n    <Web3Context.Provider value={context}>{props.children}</Web3Context.Provider>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Networks } from '../common/constants';\nimport { getNetworkManager } from '../common/network';\nimport { MainLoading } from '../features/main/components/loading';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\nimport { getWalletManager } from '../wallet';\nimport { getCommonContext } from './common';\nimport { useWeb3Context } from './web3';\n\nconst logger = getLogger()\n\nexport interface IConnectedWeb3Context {\n  account?: string\n  network?: Maybe<Network>\n  logout: () => void\n}\n\nconst ConnectedWeb3Context = React.createContext<Maybe<IConnectedWeb3Context>>(undefined)\n\n/**\n * This hook can only be used by components under the `ConnectedWeb3` component. Otherwise it will throw.\n */\nexport const useConnectedWeb3Context = () => {\n  const context = React.useContext(ConnectedWeb3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\n/**\n * Component used to render components that depend on Web3 being available. These components can then\n * `useConnectedWeb3Context` safely to get web3 stuff without having to null check it.\n */\nexport const ConnectedWeb3: React.FC<Props> = (props: Props) => {\n  const [connection, setConnection] = useState<IConnectedWeb3Context | null>(null)\n  const web3Context = useWeb3Context()\n  const commonContext = getCommonContext()\n\n  const { wallet, network } = web3Context\n\n  useEffect(() => {\n    if (!wallet) {\n      const walletManager = getWalletManager()\n      walletManager.initWallet()\n    }\n  }, [wallet])\n\n  useEffect(() => {\n    if (!network) {\n      const networkManager = getNetworkManager()\n      const networkId = Number(process.env.REACT_APP_DEFAULT_NETWORK ?? \"2\");\n      networkManager.setNetwork(Networks.find(e => e.id === networkId))\n      logger.info(\"Network:\", networkManager.getNetwork())()\n    }\n  }, [network])\n\n  const logout = useCallback(() => {\n    const walletManager = getWalletManager()\n    walletManager.removeWallet()\n    window.location.reload()\n  }, [])\n\n  useEffect(() => {\n    const value = {\n      account: wallet?.active?.address,\n      network,\n      logout\n    }\n\n    logger.info('ConnectedWeb3.account', wallet?.active?.address)()\n\n    const initAsync = async () => {\n      if (network) {\n        logger.info('Init ConnectedWeb3')()\n        try {\n          setConnection(null)\n          await commonContext.initAsync(network)\n          setConnection(value)\n        } catch (error) {\n          logger.error(error)();\n        }\n      }\n    }\n    initAsync()\n    return () => {\n      commonContext.dispose()\n    }\n  }, [wallet, network, logout, commonContext])\n\n  if (!connection) {\n    return MainLoading()\n  }\n\n  const value = {\n    ...connection\n  }\n\n  return (\n    <ConnectedWeb3Context.Provider value={value}>{props.children}</ConnectedWeb3Context.Provider>\n  )\n}","\nimport { Typography } from '@mui/material';\nimport { Footer } from '../../../layout/components/footer';\nimport { HeaderLoading } from '../../../layout/components/header-loading';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\n\nexport const MainLoading = () => {\n\n  return (\n    <MainWrapper>\n      <HeaderLoading />\n      <MainScroll>\n        <Typography>Loading...</Typography>\n      </MainScroll>\n      <Footer />\n    </MainWrapper>\n  )\n}\n","import { CommonUtil } from './common.util';\n\nexport abstract class FormatUtil {\n  static formatMessage(data: any): string {\n    const defaultMessage = \"Something went wrong.\"\n    if (data) {\n      console.log(data)\n      let message: string\n      if (!CommonUtil.isString(data)) {\n        if (data.message) {\n          message = data.message\n        }\n        else if (data.error?.message) {\n          message = data.error.message\n        } else if (data.graphQLErrors) {\n          if (data.graphQLErrors.length > 0) {\n            message = data.graphQLErrors[0].message\n          } else {\n            message = defaultMessage\n          }\n        } else {\n          message = JSON.stringify(data)\n          if (message === \"{}\") {\n            message = defaultMessage\n          }\n        }\n      } else {\n        message = data\n      }\n      if (message.length > 128) {\n        return message.substr(0, 128) + \"...\"\n      }\n      return message\n    }\n    return defaultMessage\n  }\n}","import { ProviderContext } from \"notistack\";\nimport { FormatUtil } from \"./format.util\";\n\nexport abstract class SnackbarUtil {\n  static snackbar: ProviderContext;\n  static enqueueError(error: any): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(FormatUtil.formatMessage(error));\n  }\n  static enqueueMessage(message: string): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(message);\n  }\n}","import React, { useEffect, useRef } from 'react';\nimport { qrcode, modes, ecLevel } from 'qrcode.es';\n\ninterface Props {\n  text?: string\n}\n\nexport const QrCode: React.FC<Props> = (props: Props) => {\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const defaultOpt = {\n      size: 240,\n      ecLevel: ecLevel.HIGH,\n      minVersion: 4,\n      background: '#fff',\n      mode: modes.DRAW_WITH_IMAGE_BOX,\n      radius: 0,\n      image: process.env.PUBLIC_URL + '/cow1.png',\n      mSize: 0.3\n    };\n\n    if (props.text && elementRef.current) {\n      elementRef.current.innerHTML = ''\n      const q = new qrcode(elementRef.current);\n      q.generate(props.text, defaultOpt).then(() => {\n        console.log('QR code generated')\n      });\n    }\n  }, [props.text])\n\n  return (\n    <div ref={elementRef}></div>\n  );\n}\n","import { Dialog, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect } from 'react';\nimport { getViteClient } from '../../../../clients/vite.client';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { QrCode } from '../qrcode';\n\ninterface Props {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  onClose: () => void;\n}\n\nexport const LoginDialog: React.FC<Props> = (props: Props) => {\n  const { onClose, open, setOpen } = props;\n  const viteClient = getViteClient();\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConnectWalletDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConnectWalletDialog, handleEvent)\n    };\n  }, [emitter, setOpen]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  if (!viteClient.connector) {\n    return (\n      <>\n      </>\n    )\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={open} maxWidth=\"xs\">\n      <DialogTitle>Connect Wallet</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Scan the QR code via Vite Wallet App\n        </DialogContentText>\n        <Box sx={{ mt: 2, textAlign: \"center\" }}>\n          <QrCode text={viteClient.connector?.uri}></QrCode>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import { FormControl, MenuItem, Select, SelectChangeEvent, styled } from '@mui/material';\nimport React, { useState } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { Network } from '../../../../util/types';\n\nconst NetworksFormControl = styled(FormControl)(\n  ({ theme }) => ({\n    margin: theme.spacing(1),\n    '& > div > div': {\n      color: theme.palette.common.white\n    },\n    '& .MuiSvgIcon-root': {\n      color: theme.palette.common.white\n    }\n  }));\n\nexport const NetworkList: React.FC = () => {\n  const networkManager = getNetworkManager()\n  const networks = networkManager.getNetworks()\n  const [network, setNetwork] = useState<Maybe<Network>>(networkManager.getNetwork())\n\n  const handleChange = (event: SelectChangeEvent) => {\n    const selectedNetwork = networks.find(e => e.id.toString() === event.target.value)\n    if (selectedNetwork) {\n      setNetwork(selectedNetwork)\n      networkManager.setNetwork(selectedNetwork)\n    }\n  }\n\n  return (\n    networks.length > 0 ? (\n      <NetworksFormControl variant=\"outlined\" size=\"small\">\n        <Select\n          labelId=\"select-network-label\"\n          id=\"select-network-label\"\n          value={network?.id.toString()}\n          onChange={handleChange}\n          className=\"MuiSelect-root\"\n        >\n          {networks.map(e => {\n            return (\n              <MenuItem key={e.id.toString()} value={e.id.toString()}>{e.name}</MenuItem>\n            )\n          })}\n        </Select>\n      </NetworksFormControl>\n    ) : (\n      <></>\n    )\n  );\n}","import useMediaQuery from '@mui/material/useMediaQuery';\nimport { createContext, useContext, useEffect, useState } from \"react\";\n\nconst ThemeCtx = createContext();\n// Creates a new context object\n\n\nexport function ThemeCtxProvider({ children }) {\n  // check whether the client's system has enabled dark theme\n  // if enabled then, use dark theme by default\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");   \n\n  // state variable to check wheather dark mode is enabled or not\n  const [darkMode, setDarkMode] = useState();\n\n  useEffect(() => {\n    if (localStorage.getItem('theme') === \"dark\") {\n      // if user has opted for dark theme\n      // then set the value of darkMode as true\n      setDarkMode(true);\n    } else if (localStorage.getItem('theme') === \"light\") {\n      // if user has opted for light theme\n      // then set the value of darkMode as false\n      setDarkMode(false);\n    } else {\n      // if there is nothing in the local storage\n      // then, use the system theme by default\n      setDarkMode(prefersDarkMode);\n    }\n  }, [prefersDarkMode]);\n\n  // toggle the theme function\n  const handleDarkMode = () => {\n    if (darkMode) {\n      // if dark theme is enabled,\n      // then disable it and select the light theme\n      localStorage.setItem('theme', \"light\");\n      setDarkMode(false);\n    } else {\n      // if dark theme is disabled,\n      // then enable it and select the dark theme\n      localStorage.setItem('theme', \"dark\");\n      setDarkMode(true);\n    }\n  };\n  \n  // return the, Provider component that allows the\n  // consuming components to subscribe to context\n  // changes.\n  return (\n    <ThemeCtx.Provider value={{ darkMode, handleDarkMode }}>\n      {children}\n    </ThemeCtx.Provider>\n  );\n}\n\nexport function useThemeMode(props) {\n  // return the current context value for themeCtx\n  // i.e. darkMode and handleDarkMode\n  return useContext(ThemeCtx);\n}","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { AppBar, Button, Chip, styled, Toolbar, tooltipClasses, Typography } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { CommonConstants } from '../../../../common/constants';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\nimport { LoginDialog } from '../../../main/components/login';\nimport { NetworkList } from '../../../main/components/network-list';\nimport IconButton from '@mui/material/IconButton';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { useThemeMode } from \"../../../../hooks/themeContext\";\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`);\n\nexport const Header: React.FC = (props: any) => {\n  const context = useConnectedWeb3Context();\n  const [loginOpen, setLoginOpen] = React.useState(false);\n  const handleClickLogin = () => {\n    setLoginOpen(true);\n  };\n  const handleClickLogout = () => {\n    context.logout();\n  };\n  const handleLoginClose = () => {\n    setLoginOpen(false);\n  };\n  const truncateAddress = (address?: string) => {\n    return CommonUtil.truncateStringInTheMiddle(address, 10, 5)\n  }\n\n  const { darkMode, handleDarkMode } = useThemeMode();\n\n  //mobile detect\n  const [state, setState] = useState({\n    mobileView: false,\n    drawerOpen: false,\n  });\n  const { mobileView } = state;\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\n    };\n    setResponsiveness();\n    window.addEventListener(\"resize\", () => setResponsiveness());\n    return () => {\n      window.removeEventListener(\"resize\", () => setResponsiveness());\n    };\n  }, []);\n  //end mobile detect\n\n  return (\n    <Root>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <img src={\"./cow1.png\"} alt=\"logo\" width=\"60\" />\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n            <TitleTypography sx={{ fontSize: 11 }}>\n              By Hexa\n            </TitleTypography>\n          </TitleTypography>\n            <IconButton sx={{ ml: 1 }} onClick={() => handleDarkMode()} color=\"inherit\">\n              {darkMode ? <Brightness7Icon /> : <Brightness4Icon />}\n            </IconButton>\n            <NetworkList></NetworkList>\n          {context.account ? (\n            <>\n              {mobileView ? (\n                  <>\n                  </>\n                ) : (\n                  <>\n                  <BootstrapTooltip sx={{ [`& .${tooltipClasses.tooltip}`]: { maxWidth: \"none\" } }} title={context.account} placement=\"bottom\" arrow>\n                    <Chip sx={{ color: \"white\", '& .MuiChip-icon': { color: \"white\" } }} icon={<AccountCircleIcon />} label={truncateAddress(context.account)} variant=\"outlined\" />\n                  </BootstrapTooltip >\n                </>\n                )}\n              <Button color=\"inherit\" onClick={handleClickLogout}>\n                Logout\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button color=\"inherit\" onClick={handleClickLogin}>\n                Login\n              </Button>\n              <LoginDialog open={loginOpen} setOpen={setLoginOpen} onClose={handleLoginClose}></LoginDialog>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Root >\n  )\n}","import React from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { CommonUtil } from '../../../../util/common.util';\n\ninterface Props {\n  message: string\n  type: 'default' | 'warning'\n  error?: any\n  color?: string\n  backgroundColor?: string\n}\n\nexport const Alert: React.FC<Props> = (props: Props) => {\n  let color = '#000000';\n  let backgroundColor = 'rgba(255, 255, 255, 0.5)';\n\n  switch (props.type) {\n    case 'warning':\n      color = '#611a15';\n      backgroundColor = 'rgba(255, 0, 0, 0.1)';\n      break;\n    default:\n      break;\n  }\n\n  if (props.error) {\n    console.log(CommonUtil.toJsonString(props.error));\n  }\n\n  return (\n    <Paper>\n      <Box sx={{\n        color: props.color ?? color,\n        backgroundColor: props.backgroundColor ?? backgroundColor,\n        padding: '15px',\n        textAlign: 'center'\n      }}>\n        <Typography>{props.message}</Typography>\n      </Box>\n    </Paper>\n  );\n}\n","import { Checkbox, FormControl, FormControlLabel, FormGroup, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack, Switch, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { DefaultPoolFilterValues, PoolSortTypes } from \"../../../../common/constants\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { PoolFilterValues } from \"../../../../util/types\";\n\n\n\n\nexport const PoolFilter: React.FC = () => {\n  const [values, setValues] = useState<PoolFilterValues>(DefaultPoolFilterValues);\n  const emitter = getEmitter();\n\n  const emitEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n    emitter.emitPoolFilterValuesChanged(oldValues, newValues);\n  }\n\n  const handleSortByChange = (event: SelectChangeEvent) => {\n    const newValues = { ...values, sortBy: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleCheckedChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.checked };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mb: 2 }}>\n      <Grid item xs={12} md={10}>\n        <Grid container>\n          <Grid item xs sx={{ mr: 2, mb: 2 }}>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControlLabel control={<Checkbox\n                  checked={values.stakedOnly}\n                  onChange={handleCheckedChange('stakedOnly')} />} label=\"Staked only\" />\n                <Stack direction=\"row\" alignItems=\"center\" >\n                  <Typography>Ended</Typography>\n                  <Switch checked={values.showLive} onChange={handleCheckedChange('showLive')} />\n                  <Typography>Live</Typography>\n                </Stack>\n              </Stack>\n            </FormGroup>\n          </Grid>\n          <Grid item>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControl size=\"small\" sx={{ minWidth: \"120px\" }}>\n                  <InputLabel id=\"sortby-select-label\">Sort by</InputLabel>\n                  <Select\n                    labelId=\"sortby-select-label\"\n                    id=\"sortby-select\"\n                    value={values.sortBy}\n                    label=\"Sort by\"\n                    onChange={handleSortByChange}\n                  >\n                    {PoolSortTypes.map(e => (\n                      <MenuItem key={e.type} value={e.type}>{e.name}&nbsp;</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  id=\"search\"\n                  value={values.search}\n                  label=\"Search\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  autoComplete=\"off\"\n                  onChange={handleChange('search')}\n                />\n              </Stack>\n            </FormGroup>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { MomentUtil } from \"../util/moment.util\";\n\nexport class MomentFactory {\n  private readonly _map: Map<string, MomentUtil>\n\n  constructor() {\n    this._map = new Map<string, MomentUtil>();\n  }\n\n  create(locale?: Maybe<string>): MomentUtil {\n    const _locale = locale ?? navigator.language;\n    let util = this._map.get(_locale);\n    if (!util) {\n      util = new MomentUtil(_locale);\n      this._map.set(_locale, util);\n    }\n    return util;\n  }\n}\n\nconst factory = new MomentFactory();\n\nexport const getMomentFactory = (): MomentFactory => {\n  return factory;\n}","import { orderBy, partition } from \"lodash\";\nimport { PoolSortTypes } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories/moment.factory\";\nimport { Pool, PoolFilterValues, PoolSortType } from \"./types\";\n\nexport abstract class FilterUtil {\n  static filterPools(filter: PoolFilterValues, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools) {\n      return pools;\n    }\n    const moment = getMomentFactory().create();\n    const [closedPools, openPools] = partition(pools, (pool) => pool.endTimestamp >= 0 && moment.get().unix() >= pool.endTimestamp);\n    let filtered: Pool[] = openPools;\n    if (filter.showLive) {\n      if (filter.stakedOnly) {\n        filtered = openPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = openPools;\n      }\n    } else {\n      if (filter.stakedOnly) {\n        filtered = closedPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = closedPools;\n      }\n    }\n    const sorted = FilterUtil.sortPools(filter.sortBy, filtered);\n    return FilterUtil.searchPools(filter.search, sorted);\n  }\n\n  static sortPools(sortBy: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !sortBy) {\n      return pools;\n    }\n    switch (sortBy) {\n      case PoolSortTypes[PoolSortType.APR].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.apr?.toNumber() ?? 0,\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.TOTAL_STAKED].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.totalStaked.toNumber(),\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.DEFAULT].type:\n      default:\n        return pools;\n    }\n  }\n\n  static searchPools(term: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !term) {\n      return pools;\n    }\n    const lowerCaseTerm = term.toLowerCase();\n    return pools.filter((pool: Pool) =>\n      pool.rewardToken.originalSymbol.toLowerCase().includes(lowerCaseTerm) || pool.stakingToken.originalSymbol.toLowerCase().includes(lowerCaseTerm)\n    );\n  }\n}","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { CommonConstants } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories\";\nimport { DEPOSIT_MUTATION, WITHDRAW_MUTATION } from \"../mutations\";\nimport { Deposit, DepositVariables } from \"../mutations/__generated__/Deposit\";\nimport { Withdraw, WithdrawVariables } from \"../mutations/__generated__/Withdraw\";\nimport { GET_POOL_QUERY, GET_POOL_USER_INFO_QUERY } from \"../queries\";\nimport { GetPool, GetPoolVariables } from \"../queries/__generated__/GetPool\";\nimport { GetPoolUserInfo, GetPoolUserInfoVariables } from \"../queries/__generated__/GetPoolUserInfo\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { Pool } from \"../util/types\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class PoolService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n  private readonly _moment: MomentUtil;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n    this._moment = getMomentFactory().create();\n  }\n\n  async getAsync(_id: number, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<Maybe<Pool>> {\n    try {\n      const poolQuery = await this._apollo.query<GetPool, GetPoolVariables>({\n        query: GET_POOL_QUERY,\n        variables: {\n          id: _id.toString()\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const userInfoQuery = await this._apollo.query<GetPoolUserInfo, GetPoolUserInfoVariables>({\n        query: GET_POOL_USER_INFO_QUERY,\n        variables: {\n          poolId: _id,\n          account: this._walletManager.getActiveAccount()?.address\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const pool = poolQuery.data.pool as unknown as Pool;\n      return {\n        ...pool,\n        userInfo: userInfoQuery.data.poolUserInfo,\n        fetchTimestamp: this._moment.get().unix()\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Deposit, DepositVariables>({\n      mutation: DEPOSIT_MUTATION,\n      variables: {\n        id: _id.toString(),\n        tokenId: _tokenId,\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.deposit ?? false);\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Withdraw, WithdrawVariables>({\n      mutation: WITHDRAW_MUTATION,\n      variables: {\n        id: _id.toString(),\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.withdraw ?? false);\n  }\n\n  updateRewardPerToken(pool: Maybe<Pool>, blockNumber: BigNumber): boolean {\n    if (!pool?.userInfo) {\n      return false;\n    }\n\n    const latestBlock = blockNumber.lt(pool.endBlock) ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock.lte(pool.latestRewardBlock)) {\n      return false;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(new BigNumber(0))) {\n      pool.latestRewardBlock = latestBlock;\n      return true;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n    return true;\n  }\n}\n\nconst service = new PoolService();\n\nexport const getPoolService = () => {\n  return service;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { Pool } from \"./types\";\n\nexport abstract class ViteUtil {\n  static calculateRewardTokens(pool: Maybe<Pool>): BigNumber {\n    if (!pool?.userInfo) {\n      return new BigNumber(0);\n    }\n    return (pool.userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(pool.userInfo.rewardDebt));\n  }\n\n  static formatBigNumber(bn: BigNumber, tokenDecimals: number, decimals: number): string {\n    return bn.shiftedBy(-tokenDecimals).decimalPlaces(decimals, BigNumber.ROUND_DOWN).toFormat();\n  }\n}","import { LoadingButton } from '@mui/lab';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode\n  size?: 'small' | 'medium' | 'large'\n  variant?: 'text' | 'outlined' | 'contained'\n  color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning',\n  fullWidth?: boolean\n  autoFocus?: boolean\n  disabled?: boolean\n  callbackFn: () => Promise<void>\n}\n\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\n  const [isDisabled, setIsDisabled] = React.useState(false)\n\n  const handleClick = async () => {\n    setIsDisabled(true)\n    try {\n      await props.callbackFn()\n    } catch (error) {\n      console.log(error)\n    }\n    setIsDisabled(false)\n  }\n\n  return (\n    <LoadingButton\n      loading={isDisabled}\n      size={props.size ?? \"small\"}\n      variant={props.variant ?? \"contained\"}\n      color={props.color ?? \"primary\"}\n      fullWidth={props.fullWidth}\n      onClick={handleClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </LoadingButton>\n  );\n}\n","import { Skeleton, Typography } from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getMomentFactory } from \"../../../../factories\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  pool: Maybe<Pool>\n}\n\nexport const PoolCountdown: React.FC<Props> = (props: Props) => {\n  const [hasStarted, setHasStarted] = useState<boolean>(false);\n  const [remainingBlocks, setRemainingBlocks] = useState<BigNumber>(new BigNumber(0));\n  const [countdown, setCountdown] = useState<string>(\"\");\n  const moment = useMemo(() => getMomentFactory().create(), []);\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (props.pool?.endBlock) {\n        let remainingBlocks = new BigNumber(0);\n        if (height.lte(props.pool.startBlock)) {\n          setHasStarted(false);\n          remainingBlocks = props.pool.startBlock.minus(height);\n        } else {\n          setHasStarted(true);\n          remainingBlocks = props.pool.endBlock.minus(height);\n        }\n        if (remainingBlocks.gte(0)) {\n          setRemainingBlocks(remainingBlocks);\n          const duration = moment.getDuration(remainingBlocks.toNumber());\n          if (duration.days() > 0) {\n            setCountdown(duration.days() + \" days \" + duration.hours() + \" hours\")\n          } else if (duration.hours() > 0) {\n            setCountdown(duration.hours() + \" hours \" + duration.minutes() + \" minutes\")\n          } else if (duration.minutes() > 0) {\n            setCountdown(duration.minutes() + \" minutes \" + duration.seconds() + \" seconds\")\n          } else {\n            setCountdown(duration.seconds() + \" seconds\")\n          }\n        } else {\n          setRemainingBlocks(new BigNumber(0));\n          setCountdown(\"\");\n        }\n      }\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, moment, networkManager]);\n\n  return (\n    <>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {hasStarted ? 'Ends in' : 'Starts in'}\n      </Typography>\n      {!props.pool ? (\n        <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n      ) : (\n        <>\n          {remainingBlocks.gt(0) ? (\n            <Typography variant=\"subtitle1\">\n              {remainingBlocks.toString()} Blocks\n              <Typography variant=\"body2\" color=\"text.secondary\" display=\"inline\" sx={{ ml: 1 }}>\n                {countdown}\n              </Typography>\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">-</Typography>\n          )}\n        </>\n      )}\n    </>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport { BigNumber } from 'bignumber.js';\nimport React, { useEffect, useState } from 'react';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDepositDialog: React.FC<Props> = (props: Props) => {\n  const [amount, setAmount] = useState<string>(\"\");\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(\"\")\n    }\n  }, [props.state])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.depositAsync(props.pool.id, props.pool.stakingToken.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Stake</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Earn {props.pool.rewardToken.originalSymbol} by staking {props.pool.stakingToken.originalSymbol}\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { GET_ACCOUNT_BALANCE_QUERY } from \"../queries\";\nimport { GetAccountBalance, GetAccountBalanceVariables } from \"../queries/__generated__/GetAccountBalance\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { getLogger } from \"../util/logger\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class AccountService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n  }\n\n  async getBalanceAsync(_account?: Maybe<string>, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<BigNumber> {\n    try {\n      const account = _account ?? this._walletManager.getActiveAccount()?.address;\n      if (!account || CommonUtil.isNullOrWhitespace(account)) {\n        return new BigNumber(0);\n      }\n      const poolQuery = await this._apollo.query<GetAccountBalance, GetAccountBalanceVariables>({\n        query: GET_ACCOUNT_BALANCE_QUERY,\n        variables: {\n          account\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const balance = poolQuery.data.accountBalance as unknown as BigNumber;\n      return balance;\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst service = new AccountService();\n\nexport const getAccountService = () => {\n  return service;\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { getAccountService } from '../../../../services/account.service';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { getLogger } from '../../../../util/logger';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ViteUtil } from '../../../../util/vite.util';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\nconst logger = getLogger();\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolWithdrawDialog: React.FC<Props> = (props: Props) => {\n  const getStakedAmount = useCallback(() => {\n    if (props.pool.userInfo?.stakingBalance.gt(0)) {\n      return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, 18).replace(',', '')\n    }\n    return \"\"\n  }, [props.pool])\n\n  const [amount, setAmount] = useState<string>(getStakedAmount());\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const accountService = getAccountService();\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(getStakedAmount())\n    }\n  }, [props.state, getStakedAmount])\n\n  useEffect(() => {\n    async function getBalanceAsync() {\n      const balance = await accountService.getBalanceAsync();\n      logger.info(\"Account balance:\", balance.toString())();\n    }\n    if (props.state.open) {\n      getBalanceAsync();\n    }\n  }, [props.state, accountService])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.withdrawAsync(props.pool.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Withdraw</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Enter the {props.pool.stakingToken.originalSymbol} amount to withdraw.\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import * as React from 'react';\nimport { Pool, PoolDialogState, PoolDialogType } from '../../../../util/types';\nimport { PoolDepositDialog } from '../dialog-deposit';\nimport { PoolWithdrawDialog } from '../dialog-withdraw';\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDialog: React.FC<Props> = (props: Props) => {\n  switch (props.state.type) {\n    case PoolDialogType.WITHDRAW:\n      return <PoolWithdrawDialog pool={props.pool} state={props.state} setState={props.setState}></PoolWithdrawDialog>\n    case PoolDialogType.DEPOSIT:\n      return <PoolDepositDialog pool={props.pool} state={props.state} setState={props.setState}></PoolDepositDialog>\n    default:\n      return <></>\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getPoolService } from \"../../../../services/pool.service\";\nimport { Pool } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\n\ninterface Props {\n  pool: Maybe<Pool>\n  account?: Maybe<string>\n  decimals: number\n  setCanClaim?: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const Rewards: React.FC<Props> = (props: Props) => {\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const [rewardTokens, setRewardTokens] = useState<BigNumber>(new BigNumber(0));\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    setPool(props.pool);\n  }, [props.pool]);\n\n  useEffect(() => {\n    if (pool) {\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\n      setRewardTokens(newRewardTokens);\n      if (props.setCanClaim) {\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\n      }\n    } else {\n      setRewardTokens(new BigNumber(0));\n      if (props.setCanClaim) {\n        props.setCanClaim(false);\n      }\n    }\n  }, [pool, props]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (pool) {\n        const updated = poolService.updateRewardPerToken(pool, height);\n        if (updated) {\n          const newPool: Pool = {\n            ...pool\n          }\n          setPool(newPool);\n        }\n      }\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [pool, poolService, networkManager]);\n\n  const showRewardTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(rewardTokens, pool.rewardToken.decimals, decimals);\n  }\n\n  return (\n    <>\n      {showRewardTokens(props.decimals)}\n    </>\n  );\n}","import { Avatar, Badge, Grid, Skeleton, styled, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { getCoinUtil } from \"../../../../util/coin.util\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  loading: boolean\n  pool: Maybe<Pool>\n}\n\nexport const Tokens: React.FC<Props> = (props: Props) => {\n  const BigCoin = styled(Avatar)(({ theme }) => ({\n    width: 70,\n    height: 70,\n    backgroundColor: \"white\",\n    border: \"1px solid black\"\n  }));\n  const SmallCoin = styled(Avatar)(({ theme }) => ({\n    width: 40,\n    height: 40,\n    backgroundColor: \"white\",\n    border: `1px solid ${theme.palette.grey[600]}`\n  }));\n  const coinUtil = getCoinUtil();\n\n  return (\n    <Grid item container alignItems=\"center\" spacing={2}>\n      <Grid item xs={6} md={6} sx={{textAlign: \"right\"}} >\n        <Badge\n          overlap=\"circular\"\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n          badgeContent={\n            <SmallCoin alt={props.pool?.rewardToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.rewardToken.iconUrl)} />\n          }\n        >\n          <BigCoin alt={props.pool?.stakingToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.stakingToken.iconUrl)} />\n        </Badge>\n      </Grid>\n      <Grid item xs={6} md={6}>\n        {props.loading ? (\n          <>\n            <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n            <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n          </>\n        ) : (\n          <>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Stake {props.pool?.stakingToken.originalSymbol}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Earn {props.pool?.rewardToken.originalSymbol}\n            </Typography>\n          </>\n        )}\n      </Grid>\n    </Grid >\n  );\n}","import BigNumber from \"bignumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { Pool } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\n\ninterface Props {\n  pool: Maybe<Pool>\n  decimals: number\n}\n\nexport const TotalEarnedRewards: React.FC<Props> = (props: Props) => {\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const [rewardTokens, setRewardTokens] = useState<BigNumber>(new BigNumber(0));\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    setPool(props.pool);\n  }, [props.pool]);\n\n  useEffect(() => {\n    let height = networkManager.networkHeight;\n    const refresh = () => {\n      if(height.isEqualTo(networkManager.networkHeight))return;\n      height = networkManager.networkHeight;\n      if (pool) {\n        const duration = pool.endBlock.minus(pool.startBlock);\n        const now = (\n          networkManager.networkHeight.isLessThan(pool.startBlock) ? \n            pool.startBlock :\n            networkManager.networkHeight.isGreaterThan(pool.endBlock) ?\n              pool.endBlock :\n              networkManager.networkHeight\n        ).minus(pool.startBlock);\n\n        const rewards = now.div(duration).times(pool.totalRewards);\n        \n        setRewardTokens(rewards);\n      } else {\n        setRewardTokens(new BigNumber(0));\n      }\n    }\n    const interval = setInterval(refresh, 500);\n    refresh();\n    return () => {\n      clearInterval(interval);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pool, props]);\n\n  const showRewardTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(rewardTokens, pool.rewardToken.decimals, decimals);\n  }\n  const showTotalTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(pool.totalRewards, pool.rewardToken.decimals, decimals);\n  }\n\n  return (\n    <>\n      {showRewardTokens(props.decimals)}/{showTotalTokens(props.decimals)}\n    </>\n  );\n}","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Grid, Link, Paper, Skeleton, styled, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from '../../../../common/network';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { getLogger } from \"../../../../util/logger\";\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState, PoolDialogType } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\nimport { PoolCountdown } from \"../countdown\";\nimport { PoolDialog } from \"../dialog\";\nimport { Rewards } from '../rewards';\nimport { Tokens } from \"../tokens\";\nimport { TotalEarnedRewards } from '../totalearnedrewards';\n\nconst logger = getLogger()\n\nconst TransparentPaper = styled(Paper)(\n  ({ theme }) => ({\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    backgroundColor: \"transparent\"\n  }));\n\ninterface Props {\n  account?: Maybe<string>\n  pool?: Maybe<Pool>\n}\n\nexport const PoolListItem: React.FC<Props> = (props: Props) => {\n  const [dialogState, setDialogState] = useState<PoolDialogState>({\n    type: PoolDialogType.DEPOSIT,\n    open: false\n  });\n  const [canStake, setCanStake] = useState<boolean>(false);\n  const [canClaim, setCanClaim] = useState<boolean>(false);\n  const [canWithdraw, setCanWithdraw] = useState<boolean>(false);\n  const emitter = getEmitter();\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n  const [expanded, setExpanded] = useState<boolean>(() => {\n    if(!props.pool)return true\n    return localStorage.getItem(\n      `${networkManager.getNetwork()?.contract}.${props.pool?.id}.expanded`\n    ) !== \"false\"\n  })\n\n  useEffect(() => {\n    if (props.pool) {\n      logger.info(`Pool loaded: ${props.pool?.id}`)();\n      setCanWithdraw(!!props.pool && !!props.account && (props.pool.userInfo?.stakingBalance.gt(0) ?? false));\n    } else {\n      setCanWithdraw(false);\n    }\n  }, [props.pool, props.account]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setCanStake(!!props.pool && !!props.account);\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, props.account, networkManager]);\n\n  const showApr = (): Maybe<string> => {\n    if (!props.pool || !props.pool.apr) {\n      return \"0\";\n    }\n    return props.pool.apr.toFormat(2);\n  }\n\n  const showTotalStaked = (): string => {\n    if (!props.pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.totalStaked, props.pool.stakingToken.decimals, 2);\n  }\n\n  const showStaked = (decimals: number): string => {\n    if (!props.pool?.userInfo) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, decimals);\n  }\n\n  const handleConnectWallet = () => {\n    emitter.emitConnectWalletDialog(true);\n  }\n\n  const handleClickDeposit = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.DEPOSIT,\n      open: true\n    })\n  }\n\n  const handleClickWithdraw = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.WITHDRAW,\n      open: true\n    })\n  }\n\n  const handleClickClaimAsync = async () => {\n    try {\n      if (props.pool) {\n        await poolService.withdrawAsync(props.pool.id, \"0\");\n      }\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <>\n      <Accordion expanded={expanded} onChange={(ev, expanded) => {\n        if(!props.pool)return\n        localStorage.setItem(\n          `${networkManager.getNetwork()?.contract}.${props.pool.id}.expanded`,\n          String(expanded)\n        )\n        setExpanded(expanded)\n      }}>\n        <AccordionSummary sx={{ backgroundColor: \"rgba(217, 217, 217, 0.1)\" }} expandIcon={<ExpandMoreIcon />}>        \n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2} color=\"text.secondary\">\n            <Grid item xs={12} md={12}>\n              <Tokens loading={!props.pool} pool={props.pool}></Tokens>\n            </Grid>\n            <Grid item xs={12} md={12}>\n                <PoolCountdown pool={props.pool} />\n            </Grid>\n            <Grid item xs container>\n              <Grid item xs container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item xs={9} sm={12} md={9}>\n                  {!props.pool ? (\n                    <>\n                      <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n                      <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n                    </>\n                  ) : (\n                    <>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Total {props.pool?.rewardToken.originalSymbol} earned\n                      </Typography>\n                      <Typography variant=\"subtitle1\">\n                        <TotalEarnedRewards pool={props.pool} decimals={4}></TotalEarnedRewards>\n                      </Typography>\n                    </>\n                  )}\n                </Grid>\n                <Grid item xs={3} sm={12} md={3}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    APR\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"60px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {props.pool.apr ? (\n                        <>\n                          {showApr()}%\n                        </>\n                      ) : (\n                        <>\n                          -\n                        </>\n                      )}\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Total staked\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"120px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {showTotalStaked()}\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails sx={{ backgroundColor: \"rgba(217, 217, 217, 0.3)\", pt: 2 }}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item xs container alignItems=\"center\">\n              <Grid item container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item xs={6} md={6} container justifyContent=\"center\" alignItems=\"center\">\n                  <Link color=\"secondary\" underline=\"none\" href={props.pool?.stakingToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                    {props.pool?.stakingToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n                  </Link>\n                </Grid>\n                <Grid item xs={6} md={6} container justifyContent=\"center\" alignItems=\"center\">\n                  <Link color=\"secondary\" underline=\"none\" href={props.pool?.rewardToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                    {props.pool?.rewardToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n                  </Link>\n                </Grid>\n                <Grid item xs={12} md={12} zeroMinWidth>\n                  <TransparentPaper variant=\"outlined\">\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {props.pool?.rewardToken.originalSymbol} earned\n                    </Typography>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      {!props.pool ? (\n                        <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                      ) : (\n                        <Typography sx={{ width: \"100%\" }} noWrap>\n                          <Rewards pool={props.pool} decimals={18} account={props.account} setCanClaim={setCanClaim}></Rewards>\n                        </Typography>\n                      )}\n                      <Box sx={{ ml: 2 }} >\n                        <ClickOnceButton variant=\"contained\" size=\"large\" callbackFn={handleClickClaimAsync} disabled={!canClaim}>\n                          Claim\n                        </ClickOnceButton>\n                      </Box>\n                    </Box>\n                  </TransparentPaper>\n                </Grid>\n                {!props.account ? (\n                  <Grid item xs={12} md={12}>\n                    <TransparentPaper variant=\"outlined\">\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Start staking\n                      </Typography>\n                      <Button variant=\"contained\" size=\"large\" fullWidth disabled={!props.pool} onClick={handleConnectWallet}>Connect wallet</Button>\n                    </TransparentPaper>\n                  </Grid>\n                ) : (\n                  <>\n                    <Grid item xs={12} md={12} zeroMinWidth>\n                      <TransparentPaper variant=\"outlined\">\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Staked\n                        </Typography>\n                        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                          {!props.pool ? (\n                            <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                          ) : (\n                            <Typography sx={{ width: \"100%\" }} noWrap>\n                              {showStaked(18)}\n                            </Typography>\n                          )}\n                          <Button variant=\"contained\" size=\"large\" sx={{ ml: 2 }} onClick={handleClickWithdraw} disabled={!canWithdraw}>\n                            Withdraw\n                          </Button>\n                        </Box>\n                      </TransparentPaper>\n                    </Grid>\n                    <Grid item xs={12} md={12} sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      <Button variant=\"contained\" size=\"large\" fullWidth onClick={handleClickDeposit} disabled={!canStake}>\n                        Stake\n                      </Button>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n      {props.pool && (\n        <PoolDialog pool={props.pool} state={dialogState} setState={setDialogState}></PoolDialog>\n      )}\n    </>\n  );\n}","import { Grid, Paper } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { DefaultPoolFilterValues } from \"../../../../common/constants\";\nimport { getCommonContext } from \"../../../../contexts/common\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { FilterUtil } from \"../../../../util/filter.util\";\nimport { getLogger } from \"../../../../util/logger\";\nimport { GlobalEvent, Pool, PoolFilterValues } from \"../../../../util/types\";\nimport { Alert } from \"../../../common/components/alert\";\n//import { PoolListItem } from \"../list-item\";\nimport { PoolListItem } from \"../list-card\";\n\nconst logger = getLogger()\n\ninterface Props {\n  account?: Maybe<string>\n  pools?: Maybe<Pool[]>\n}\n\nexport const PoolList: React.FC<Props> = (props: Props) => {\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [allPools, setAllPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [pools, setPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [filter, setFilter] = useState<PoolFilterValues>(DefaultPoolFilterValues)\n  const emitter = getEmitter()\n  const commonContext = getCommonContext()\n\n  useEffect(() => {\n    if (props.pools) {\n      setIsLoading(false)\n    } else {\n      setIsLoading(true)\n    }\n    setAllPools(props.pools)\n  }, [props.pools])\n\n  useEffect(() => {\n    setPools(FilterUtil.filterPools(filter, allPools))\n  }, [allPools, filter])\n\n  useEffect(() => {\n    const handleEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n      setFilter(newValues)\n    }\n    emitter.on(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolFilterValuesChanged)()\n      emitter.off(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    };\n  }, [emitter])\n\n  useEffect(() => {\n    const replacePool = (pool: Pool) => {\n      if (allPools && pool) {\n        const index = allPools.findIndex(e => e.id === pool.id)\n        if (index >= 0) {\n          // Replace existing\n          const updatedPools = [...allPools]\n          updatedPools[index] = {\n            ...pool\n          }\n          setAllPools(updatedPools)\n        } else {\n          // Prepend to existing pools\n          setAllPools([pool, ...allPools])\n        }\n      }\n    }\n    const handlePoolEvent = async (id: number) => {\n      const pool = await commonContext.datasource.getPoolAsync(id, props.account)\n      replacePool(pool)\n    }\n    emitter.on(GlobalEvent.PoolDeposit, handlePoolEvent)\n    emitter.on(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolDeposit)()\n      emitter.off(GlobalEvent.PoolDeposit, handlePoolEvent)\n      emitter.off(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    };\n  }, [emitter, allPools, commonContext, props.account])\n\n  if (!isLoading && pools && pools.length <= 0) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message=\"No pools found.\" type=\"default\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n      {isLoading ? (\n        <>\n          {[0, 1, 2].map((index: number) => (\n            <Grid item key={index} xs={12} sm={5} md={4}>\n              <Paper elevation={16}>\n              <PoolListItem></PoolListItem>\n              </Paper>\n            </Grid>\n          ))}\n        </>\n      ) : (\n        <>\n          {pools?.map((p: Pool) => (          \n            <Grid item key={p.id} xs={12} sm={5} md={4}>\n              <Paper elevation={16}>\n              <PoolListItem account={props.account} pool={p}></PoolListItem>\n              </Paper>\n            </Grid>\n          ))}\n        </>\n      )}\n    </Grid>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { Container, Grid } from '@mui/material';\nimport React from 'react';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { GET_POOLS_QUERY } from '../../../../queries';\nimport { GetPools, GetPoolsVariables } from '../../../../queries/__generated__/GetPools';\nimport { Pool } from '../../../../util/types';\nimport { Alert } from '../../../common/components/alert';\nimport { PoolFilter } from '../filter';\nimport { PoolList } from '../list';\n\nexport const Pools: React.FC = () => {\n  const context = useConnectedWeb3Context();\n  const poolQuery = useQuery<GetPools, GetPoolsVariables>(GET_POOLS_QUERY, {\n    variables: {\n      account: context.account\n    },\n    fetchPolicy: 'network-only'\n  });\n\n  const error = poolQuery.error\n\n  if (error) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message={error.message} type=\"warning\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Container sx={{ pt: 6, pb: 6 }} maxWidth=\"lg\">\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n        <PoolFilter></PoolFilter>\n        <PoolList account={context.account} pools={poolQuery.data?.pools as Maybe<Pool[]>}></PoolList>\n      </Grid>\n    </Container>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\nimport React, { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  // @ts-ignore\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ConfirmTransactionDialog: React.FC = () => {\n  const [open, setOpen] = useState(false);\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    };\n  }, [emitter, setOpen])\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      style={{ zIndex: 9999 }}\n    >\n      <DialogTitle>ViteConnect</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please confirm transaction on VITE Wallet App\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { GET_NETWORK_BLOCK_HEIGHT_QUERY } from '../../../../queries';\nimport { GetNetworkBlockHeight } from '../../../../queries/__generated__/GetNetworkBlockHeight';\nimport { getEmitter } from '../../../../util/emitter.util';\n\nexport const Network: React.FC = () => {\n  const networkManager = getNetworkManager();\n  const emitter = getEmitter();\n  const query = useQuery<GetNetworkBlockHeight>(GET_NETWORK_BLOCK_HEIGHT_QUERY, {\n    fetchPolicy: 'network-only'\n  });\n\n  useEffect(() => {\n    let interval = setInterval(async () => {\n      await query.refetch();\n      if (query.data?.networkBlockHeight) {\n        const height = query.data.networkBlockHeight;\n        emitter.emitNetworkBlockHeightChanged(height);\n        networkManager.networkHeight = height;\n      }\n    }, 1000)\n    return () => {\n      clearInterval(interval);\n    }\n  })\n\n  return (\n    <>\n    </>\n  )\n}\n","import {Grid, Typography, Box } from \"@mui/material\";\nimport React from 'react';\n\nexport const Desc: React.FC = () => {\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\">  \n        <Grid item xs={12} md={6} lg={6}>\n          <Box p={2}>\n          <Box>\n            <Typography color=\"text.secondary\">\n              <h1>Earn big staking rewards with BeefStake</h1>\n            </Typography>\n            <Typography color=\"text.secondary\">\n              <h2>Just connect your Vite wallet and start earning right away</h2>\n            </Typography>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid container xs={12} md={6} lg={6} alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\n          <Box p={2}>\n            <img alt=\"staking\" src={\"./cow1.png\"} width=\"350\" />\n          </Box>\n        </Grid>     \n    </Grid>\n  )\n}\n","import { useSnackbar } from 'notistack';\nimport React from 'react';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Footer } from '../../../layout/components/footer';\nimport { Header } from '../../../layout/components/header';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\nimport { Pools } from '../../../pool/components/main';\nimport { ConfirmTransactionDialog } from '../dialog-transaction';\nimport { Network } from '../network';\nimport { Desc } from '../desc';\n\nexport const Main: React.FC = (props: any) => {\n  SnackbarUtil.snackbar = useSnackbar();\n  return (\n    <MainWrapper>\n      <Header />\n      <Network />\n      <MainScroll>\n        <Desc></Desc>\n        <Pools></Pools>\n        <ConfirmTransactionDialog></ConfirmTransactionDialog>     \n      </MainScroll> \n      <Footer /> \n    </MainWrapper>   \n  )\n}\n","import { ApolloProvider } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport { getApolloClient } from './clients/apollo.client';\nimport { ConnectedWeb3 } from './contexts/connectedWeb3';\nimport { Web3Provider } from './contexts/web3';\nimport { Main } from './features/main/components/main';\n\nconst App: React.FC = () => {\n  const apolloClient = React.useMemo(() => getApolloClient(), [])\n  \n  // Almost never return exponential notation\n  BigNumber.config({ EXPONENTIAL_AT: 1e+9 })\n  return (\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={apolloClient}>\n          <Web3Provider>\n            <ConnectedWeb3>\n              <Main /> \n            </ConnectedWeb3>\n          </Web3Provider>\n        </ApolloProvider> \n      </SnackbarProvider>\n  );\n}\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import theme from './theme';\nimport { ThemeCtxProvider, useThemeMode } from \"./hooks/themeContext\";\n\nconst Root = () => {\n  const { darkMode } = useThemeMode();\n  \n  //const [mode, setMode] = React.useState<'light' | 'dark'>('light');\n  //https://mui.com/customization/color/#picking-colors\n  //themes\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n          palette: {\n            ...(darkMode \n              ? {\n                  // palette values for light mode\n                  primary: {\n                    main: '#FF6729',\n                  },\n                  secondary: {\n                    main: '#C8440C',\n                  },\n                  //divider: '#fff',\n                  background: {\n                    default: '#FFFBF2',\n                    paper: '#fff5de',\n                  },\n                  //text: {\n                  //  primary: '#ebebeb',\n                  //  secondary: '#9E9E9E',\n                  //},\n                }\n              : {\n                  // palette values for dark mode\n                  primary: {\n                    main: '#C8440C',\n                  },\n                  secondary: {\n                    main: '#FF6729',\n                  },\n                  divider: '#515151',\n                  background: {\n                    default: '#303030',\n                    paper: '#424242',\n                  },\n                  text: {\n                    primary: '#cdcdcd',\n                    secondary: '#cdcdcd',\n                  },                  \n              }),\n          },\n      }),\n    [darkMode],\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeCtxProvider>\n      <Root />\n    </ThemeCtxProvider>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export abstract class CommonUtil {\n  static isString(value: any): boolean {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  static isNullOrWhitespace(value?: Maybe<string>): boolean {\n    if (!CommonUtil.isString(value)) {\n      return true;\n    } else {\n      return value === null || value === undefined || value.trim() === '';\n    }\n  }\n\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\n    return CommonUtil.isNullOrWhitespace(value) || value === defaultValue\n  }\n\n  static timeout(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\n    if (str) {\n      if (maxLength < str.length) {\n        return `${str.substr(0, maxLength)}...`\n      }\n    }\n    return str\n  }\n\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\n    if (str) {\n      const minTruncatedLength = strPositionStart + strPositionEnd\n      if (minTruncatedLength < str.length) {\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\n      }\n    }\n    return str\n  }\n\n  static toJsonString(data: any): string {\n    return JSON.stringify(data, null, 2);\n  }\n\n  static async imageUrlToBlob(url: string): Promise<Blob> {\n    return (await fetch(url)).blob();\n  }\n\n  static random(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  static equals(lh: any, rh: any): boolean {\n    // The ORDER of the properties IS IMPORTANT\n    return JSON.stringify(lh) === JSON.stringify(rh);\n  }\n}","import BigNumber from 'bignumber.js';\nimport EventEmitter from 'events';\nimport { GlobalEvent, Pool, PoolFilterValues } from './types';\n\nexport interface IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void\n  emitConnectWalletDialog(open: boolean): void\n  emitNetworkBlockHeightChanged(height: BigNumber): void\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void\n  emitPoolUpdate(pool: Pool): void\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class GlobalEmitter extends EventEmitter implements IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConfirmTransactionDialog, open)\n  }\n  emitConnectWalletDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConnectWalletDialog, open)\n  }\n  emitNetworkBlockHeightChanged(height: BigNumber): void {\n    this.emit(GlobalEvent.NetworkBlockHeightChanged, height)\n  }\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void {\n    this.emit(GlobalEvent.PoolFilterValuesChanged, oldValues, newValues)\n  }\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolDeposit, id, amount, account)\n  }\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolWithdraw, id, amount, account)\n  }\n  emitPoolUpdate(pool: Pool): void {\n    this.emit(GlobalEvent.PoolUpdate, pool)\n  }\n}\n\nconst emitter = new GlobalEmitter();\n\nexport const getEmitter = (): IGlobalEmitter => {\n  return emitter;\n}\n","export enum WalletType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class Wallet<T> {\n  private readonly _type: WalletType\n\n  active?: T\n  accounts: T[] = []\n\n  constructor(type: WalletType, init?: Partial<Wallet<T>>) {\n    this._type = type\n    this.baseInitinit(init)\n  }\n\n  static fromJS(data: any): Maybe<WebWallet | SessionWallet> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWallet(data)\n      case WalletType.Session:\n        return new SessionWallet(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletType {\n    return this._type\n  }\n\n  protected abstract createAccount(data: any): T\n\n  private baseInitinit(data?: any): void {\n    if (data) {\n      this.active = data.active ? this.createAccount(data.active) : undefined\n      if (data.accounts && Array.isArray(data.accounts)) {\n        data.accounts.forEach((account: any) => {\n          this.accounts.push(this.createAccount(account))\n        })\n      }\n    }\n    if (!this.accounts) {\n      this.accounts = []\n    }\n  }\n}\n\nexport class WebWallet extends Wallet<WebWalletAccount> {\n  mnemonic!: string\n\n  constructor(init?: Partial<WebWallet>) {\n    super(WalletType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.mnemonic = data.mnemonic\n    }\n  }\n\n  protected createAccount(data: any): WebWalletAccount {\n    return new WebWalletAccount(data)\n  }\n}\n\nexport class SessionWallet extends Wallet<SessionWalletAccount> {\n  session!: string\n  timestamp!: number\n\n  constructor(init?: Partial<SessionWallet>) {\n    super(WalletType.Session, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.session = data.session\n      this.timestamp = data.timestamp\n    }\n  }\n\n  protected createAccount(data: any): SessionWalletAccount {\n    return new SessionWalletAccount(data)\n  }\n}\n\nexport enum WalletAccountType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class WalletAccount {\n  private readonly _type: WalletAccountType\n\n  id!: string\n  address!: string\n\n  constructor(type: WalletAccountType, init?: Partial<WalletAccount>) {\n    this._type = type\n    this.baseInit(init)\n  }\n\n  static fromJS(data: any): Maybe<WalletAccount> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWalletAccount(data)\n      case WalletType.Session:\n        return new SessionWalletAccount(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletAccountType {\n    return this._type\n  }\n\n  private baseInit(data?: any): void {\n    if (data) {\n      this.id = data.id\n      this.address = data.address\n    }\n  }\n}\n\nexport class WebWalletAccount extends WalletAccount {\n  privateKey!: string\n\n  constructor(init?: Partial<WebWalletAccount>) {\n    super(WalletAccountType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.privateKey = data.privateKey\n    }\n  }\n}\n\nexport class SessionWalletAccount extends WalletAccount {\n  constructor(init?: Partial<SessionWalletAccount>) {\n    super(WalletAccountType.Session, init)\n  }\n}","import Connector from '@vite/connector';\nimport { WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { SessionWallet, SessionWalletAccount } from './types';\n\nconst logger = getLogger()\n\nexport interface IWalletConnector {\n  readonly uri: string\n  sendTransactionAsync(...args: any): Promise<any>\n  signMessageAsync(...args: any): Promise<any>\n  killSessionAsync(): Promise<void>\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class WalletConnector extends Connector implements IWalletConnector {\n  private readonly _walletManager: WalletManager;\n\n  constructor(walletManager: WalletManager, opts: any, meta?: any) {\n    super(opts, meta);\n    this._walletManager = walletManager;\n    this.on('connect', (err: any, payload: any) => {\n      logger.info('WalletConnector.connect', err, payload)()\n      const { accounts } = payload.params[0];\n      this.saveSession(accounts);\n    });\n    this.on('disconnect', (err: any, payload: any) => {\n      logger.info('WalletConnector.disconnect', err, payload)()\n      this.stopBizHeartBeat()\n      this._walletManager.removeWallet()\n    });\n    this.on('session_update', (err: any, payload: any) => {\n      logger.info('WalletConnector.session_update', err, payload)()\n      const session = payload[0];\n      if (session && session.accounts) {\n        this.saveSession(session.accounts);\n      }\n    });\n  }\n\n  get uri(): string {\n    return super.uri\n  }\n\n  on(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.on(event, listener)\n  }\n\n  off(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.off(event, listener)\n  }\n\n  saveSession(accounts: string[]): void {\n    if (!accounts || !accounts[0]) {\n      throw new Error('address is null');\n    }\n    const sessionAccounts: SessionWalletAccount[] = []\n    for (let index = 0; index < accounts.length; index++) {\n      const address = accounts[index];\n      sessionAccounts.push(new SessionWalletAccount({\n        id: index.toString(),\n        address: address\n      }))\n    }\n    const wallet = new SessionWallet({\n      active: sessionAccounts[0],\n      accounts: sessionAccounts,\n      session: this.session,\n      timestamp: new Date().getTime()\n    })\n    this._walletManager.setWallet(wallet)\n  }\n\n  updateSession(): void {\n    const existing = this._walletManager.getWallet()\n    if (existing && existing instanceof SessionWallet) {\n      existing.timestamp = new Date().getTime()\n      this._walletManager.updateWalletStore(existing)\n    }\n  }\n\n  async createSession(): Promise<string> {\n    await super.createSession();\n    return this.uri;\n  }\n\n  async sendTransactionAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signAndSendTx', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async signMessageAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signMessage', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async killSessionAsync(): Promise<any> {\n    await super.killSession();\n  }\n}","import { IWalletConnector, WalletConnector, WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\n\nconst logger = getLogger()\n\nexport class WalletConnectorFactory {\n  private readonly _walletManager: WalletManager\n\n  constructor(walletManager: WalletManager) {\n    this._walletManager = walletManager\n  }\n\n  create(network: Network): IWalletConnector {\n    const session = this._walletManager.getValidSession()\n    const account = this._walletManager.getActiveAccount()\n    const opts = {\n      bridge: network.connectorUrl,\n      session\n    }\n    const meta = account ? { lastAccount: account.address } : undefined\n    const connector = new WalletConnector(this._walletManager, opts, meta)\n\n    if (!session) {\n      connector.createSession().then(() => logger.info('IWalletConnector connected', connector.uri)())\n    }\n\n    return connector\n  }\n}","import { SessionWallet, Wallet, WebWallet } from '.';\nimport { CommonConstants } from '../common/constants';\nimport { getLogger } from '../util/logger';\nimport { WalletType } from './types';\n\nconst logger = getLogger()\n\nexport class WalletStore {\n\n  private readonly _webWalletKey = CommonConstants.WEB_WALLET_STORAGE_SPACE;\n  private readonly _sessionWalletKey = CommonConstants.SESSION_WALLET_STORAGE_SPACE\n\n  clear(): void {\n    localStorage.removeItem(this._webWalletKey);\n    sessionStorage.removeItem(this._sessionWalletKey);\n  }\n\n  getItem(): Maybe<WebWallet | SessionWallet> {\n    let data;\n\n    try {\n      data = localStorage.getItem(this._webWalletKey);\n      if (!data) {\n        data = sessionStorage.getItem(this._sessionWalletKey);\n      }\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n\n    if (!data) {\n      return undefined;\n    }\n\n    try {\n      return Wallet.fromJS(JSON.parse(data));\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n  }\n\n  setItem(data: WebWallet | SessionWallet): void {\n    const saveData = JSON.stringify(data);\n\n    try {\n      switch (data.type) {\n        case WalletType.Web:\n          localStorage.setItem(this._webWalletKey, saveData);\n          break;\n        case WalletType.Session:\n          sessionStorage.setItem(this._sessionWalletKey, saveData);\n          break;\n        default:\n          throw new Error(`Wallet type '${data.type}' is not supported.`)\n      }\n    } catch (err) {\n      logger.error(err)();\n    }\n  }\n}","import { wallet } from '@vite/vitejs';\nimport { SessionWallet, WalletAccount, WebWallet, WebWalletAccount } from '.';\nimport { getLogger } from '../util/logger';\nimport { WalletStore } from './store';\n\nconst logger = getLogger()\n\nexport class WalletManager {\n  private readonly _store: WalletStore;\n  private _wallet?: WebWallet | SessionWallet;\n  private _mnemonicDeriveIndex = 0;\n  private _setWalletCallback?: (wallet?: WebWallet | SessionWallet | undefined) => void;\n\n  constructor() {\n    this._store = new WalletStore();\n  }\n\n  initWallet(): void {\n    const wallet = this._store.getItem();\n    if (wallet) {\n      this._wallet = wallet;\n      this._mnemonicDeriveIndex = wallet.accounts.length;\n      this.updateWallet();\n    }\n  }\n\n  set onSetWalletCallback(cb: (wallet?: WebWallet | SessionWallet | undefined) => void) {\n    this._setWalletCallback = cb;\n  }\n\n  getWallet(): Maybe<WebWallet | SessionWallet> {\n    return this._wallet;\n  }\n\n  setWallet(wallet?: WebWallet | SessionWallet): void {\n    this._wallet = wallet;\n    this.updateWalletStore(wallet)\n    this.updateWallet()\n  }\n\n  updateWallet(): void {\n    if (this._setWalletCallback) {\n      this._setWalletCallback(this._wallet);\n    }\n  }\n\n  updateWalletStore(wallet?: WebWallet | SessionWallet): void {\n    if (wallet) {\n      this._store.setItem(wallet);\n    }\n  }\n\n  createWebWallet(mnemonic: string): Maybe<WebWallet> {\n    if (!this.validateMnemonic(mnemonic)) {\n      return undefined;\n    }\n    this.resetWallet();\n    const account = this.createWebWalletAccount(mnemonic, 0);\n    const wallet = new WebWallet({\n      active: account,\n      mnemonic,\n      accounts: [\n        account\n      ]\n    });\n    this.setWallet(wallet);\n    return wallet;\n  }\n\n  removeWallet(): void {\n    this.resetWallet();\n    this.updateWallet();\n  }\n\n  getAccountByAddress(address: string): Maybe<WalletAccount> {\n    return this._wallet?.accounts?.find(e => e.address === address)\n  }\n\n  addAccount(): Maybe<WalletAccount> {\n    if (this._wallet instanceof WebWallet) {\n      const account = this.createWebWalletAccount(this._wallet.mnemonic);\n      this._wallet.accounts.push(account);\n      this.setActiveAccount(account);\n      return account;\n    }\n    return undefined\n  }\n\n  getActiveAccount(): Maybe<WalletAccount> {\n    return this._wallet?.active\n  }\n\n  setActiveAccount(account: WalletAccount): boolean {\n    if (this._wallet) {\n      this._wallet.active = account;\n      this._store.setItem(this._wallet);\n      this.updateWallet();\n      return true;\n    }\n    return false;\n  }\n\n  getAccounts(): WalletAccount[] {\n    if (this._wallet) {\n      return this._wallet.accounts;\n    }\n    return [];\n  }\n\n  getValidSession(): Maybe<string> {\n    const wallet = this._store.getItem();\n    if (wallet && wallet instanceof SessionWallet) {\n      if (new Date().getTime() - wallet.timestamp < 1000 * 60 * 10) {\n        return wallet.session;\n      } else {\n        logger.info('Found expired session.', wallet)();\n      }\n    }\n    return undefined;\n  }\n\n  private resetWallet(): void {\n    this._wallet = undefined;\n    this._mnemonicDeriveIndex = 0;\n    this._store.clear();\n  }\n\n  private createWebWalletAccount(mnemonic: string, index = this._mnemonicDeriveIndex): WebWalletAccount {\n    const { privateKey } = wallet.deriveAddress({\n      mnemonics: mnemonic,\n      index\n    });\n    let account = new WebWalletAccount({\n      id: index.toString(),\n      privateKey,\n      address: wallet.createAddressByPrivateKey(privateKey).address\n    });\n    this._mnemonicDeriveIndex = index + 1;\n    return account;\n  }\n\n  private validateMnemonic(mnemonic: Maybe<string>): Boolean {\n    if (mnemonic) {\n      return wallet.validateMnemonics(mnemonic);\n    }\n    return false;\n  }\n}\n\nconst manager = new WalletManager();\n\nexport const getWalletManager = () => {\n  return manager;\n}"],"sourceRoot":""}