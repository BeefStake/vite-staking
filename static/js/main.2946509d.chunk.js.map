{"version":3,"sources":["util/task.ts","util/types.ts","common/constants.ts","util/logger.ts","util/file.util.ts","bg.svg","util/coin.util.ts","clients/coingecko.client.ts","clients/vitex.client.ts","util/ensure.ts","util/moment.util.ts","datasources/base.datasource.ts","datasources/mock.datasource.ts","util/cache.ts","datasources/vite.datasource.ts","contexts/common.ts","mutations/pool.ts","queries/account.ts","queries/network.ts","queries/token.ts","queries/pool.ts","clients/apollo.client.ts","common/network.ts","features/common/components/tooltip/component.tsx","features/layout/components/footer/component.tsx","features/layout/components/header-loading/component.tsx","features/layout/components/main-scroll/component.tsx","features/layout/components/main-wrapper/component.tsx","contexts/web3.tsx","contexts/connectedWeb3.tsx","features/main/components/loading/component.tsx","util/format.util.ts","util/snackbar.util.ts","features/main/components/qrcode/component.tsx","features/main/components/login/component.tsx","features/main/components/network-list/component.tsx","features/layout/components/header/component.tsx","features/common/components/alert/component.tsx","features/pool/components/filter/component.tsx","factories/moment.factory.ts","util/filter.util.ts","services/pool.service.ts","util/vite.util.ts","features/common/components/click-once-button/component.tsx","features/pool/components/countdown/component.tsx","features/pool/components/dialog-deposit/component.tsx","services/account.service.ts","features/pool/components/dialog-withdraw/component.tsx","features/pool/components/dialog/component.tsx","features/pool/components/rewards/component.tsx","features/pool/components/tokens/component.tsx","features/pool/components/list-item/component.tsx","features/pool/components/list/component.tsx","features/pool/components/main/component.tsx","features/main/components/dialog-transaction/component.tsx","features/main/components/network/component.tsx","features/main/components/main/component.tsx","App.tsx","reportWebVitals.ts","theme.tsx","index.tsx","util/common.util.ts","util/emitter.util.ts","wallet/types.ts","wallet/connector.ts","wallet/factory.ts","wallet/store.ts","wallet/manager.ts","clients/vite.client.ts"],"names":["Task","task","interval","_taskTimer","_taskInterval","_task","_callback","this","setTimeout","a","_onStop","_run","callback","window","clearTimeout","undefined","PoolSortType","PoolDialogType","GlobalEvent","VmLogEvent","CommonConstants","APP_NAME","WEB_WALLET_STORAGE_SPACE","SESSION_WALLET_STORAGE_SPACE","POOLS_CONTRACT_ADDRESS","VITE_TOKEN_ID","REWARD_FACTOR","Networks","id","networkId","name","rpcUrl","connectorUrl","TypeNames","Pool","PoolUserInfo","Token","UnknownToken","__typename","symbol","originalSymbol","decimals","iconUrl","url","PoolSortTypes","type","DefaultPoolFilterValues","stakedOnly","showLive","sortBy","DEFAULT","search","LogEventModel","init","banner","args","Object","assign","noop","ExtendedConsoleLogger","Boolean","process","Date","toLocaleTimeString","mapFn","e","CommonUtil","isString","Error","message","toJsonString","result","timestamp","map","Array","isArray","e1","isEnabled","createLogEventModel","Function","prototype","bind","call","console","debug","info","warn","length","push","error","logger","getLogger","FileUtilType","util","_iconUrlMap","_coinMarketCapMap","_coingeckoMap","Map","existing","get","replace","toLowerCase","getCoinUtil","CoingeckoClient","_client","_coinUtil","CoinGecko","mappedName","mapCoingeckoName","params","ids","simple","price","BigNumber","data","usd","client","VitexClient","_baseUrl","tokenId","axios","Ensure","property","propertyName","trim","maxLength","MomentUtil","locale","_locale","navigator","language","moment","seconds","duration","date","unix","utc","local","getLocal","format","getLocalTime","getLocalDate","BaseDataSource","_emitter","_walletManager","_coingeckoClient","_vitexClient","_tokens","_moment","getEmitter","getWalletManager","initAsyncProtected","clear","disposeProtected","account","getActiveAccount","notNull","pool","endTimestamp","isExpired","latestRewardBlock","endBlock","getTokenPriceUSDAsync","stakingToken","stakingTokenPrice","rewardToken","rewardTokenPrice","totalTime","minus","startBlock","secondsInYear","toPercent","apr","times","totalRewards","dividedBy","totalStaked","isFinite","isNaN","lte","getNetworkBlockHeightAsync","networkBlockHeight","remainingSeconds","add","toNumber","getTokenDetailAsync","token","tokenDecimals","urlIcon","mapCoinMarketCapName","set","unknownToken","p","getTokenAsync","stakingTokenId","rewardTokenId","getEndTimestampAsync","totalStakingBalance","totalRewardBalance","rewardPerPeriod","rewardPerToken","paidOut","fetchTimestamp","u","address","poolId","stakingBalance","rewardDebt","FileUtil","BrowserFileUtil","path","fetch","response","text","MockDataSource","fileUtil","_fileUtil","_pools","_users","_networkBlockHeight","_networkBlockHeightInterval","setInterval","plus","readFileAsync","pools","JSON","parse","index","toPoolAsync","getAprAsync","users","toPoolUserInfoAsync","initNetworkBlockHeight","initPoolsAsync","initPoolUsersAsync","clearInterval","_account","_id","timeout","random","getPoolUserInfoAsync","userInfo","getPoolAsync","_poolId","isNullOrWhitespace","find","blockNumber","latestBlock","eq","period","latestReward","div","_tokenId","_amount","_updatePoolAsync","amount","getAccount","gt","pendingAmount","toString","emitPoolDeposit","emitPoolWithdraw","ds","getMockDataSource","CachedFunctionCall","callbackFn","_duration","_callbackFn","_currentValue","_lastExecution","getTime","ViteDataSource","_offchainMethods","_cachedNetworkBlockHeight","_contract","_listener","handleResponseAsync","height","Promise","resolve","reject","waitForAccountBlockAsync","then","status","statusTxt","objectFromEntries","entries","fromEntries","entry","value","getViteClient","requestAsync","contract","contractName","createAddressListenerAsync","on","results","abi","vmLog","decodeVmLog","vmlog","handleVmLogAsync","removeAddressListener","removeListener","balanceInfoMap","balance","pow","getAsync","callOffChainMethodAsync","getOffchainMethodAbi","offChain","getTotalPoolsAsync","Number","callContractAsync","has","event","Deposit","addr","pid","Withdraw","CommonContext","_vite","_datasource","network","initViteClientAsync","initAsync","dispose","context","getCommonContext","DEPOSIT_MUTATION","gql","WITHDRAW_MUTATION","PoolMutations","deposit","parent","datasource","depositAsync","withdraw","withdrawAsync","GET_ACCOUNT_BALANCE_QUERY","AccountQueries","accountBalance","getAccountBalanceAsync","GET_NETWORK_BLOCK_HEIGHT_QUERY","NetworkQueries","TOKEN_FIELDS","TokenQueries","POOL_FIELDS","POOL_USER_INFO_FIELDS","GET_POOL_QUERY","GET_POOLS_QUERY","GET_POOL_USER_INFO_QUERY","PoolQueries","getPoolsAsync","totalPools","poolUserInfo","ApolloClientWrapper","ApolloClient","cache","InMemoryCache","typePolicies","Query","fields","resolvers","GraphQLScalarType","description","serialize","parseValue","Mutation","headers","getApolloClient","manager","_networkHeight","_network","_setNetworkCallback","cb","split","filter","includes","getNetworkManager","BootstrapTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","arrow","black","Footer","maxWidth","typography","pxToRem","border","useState","setNetworkBlockHeight","rotated","setRotated","emitter","useEffect","handleEvent","heightString","heightRef","substr","mod","NetworkBlockHeightChanged","off","Box","sx","py","px","Grid","container","direction","justifyContent","alignItems","spacing","item","title","placement","Typography","variant","verticalAlign","display","mr","transform","Chip","label","size","Root","TitleTypography","HeaderLoading","AppBar","position","Toolbar","MainScrollStyled","MainScrollInner","MainScroll","children","restProps","Container","MainWrapperStyled","MainWrapper","Web3Context","React","createContext","Web3Provider","setError","wallet","setWallet","setNetwork","onSetWalletCallback","onSetNetworkCallback","Provider","ConnectedWeb3Context","useConnectedWeb3Context","useContext","ConnectedWeb3","connection","setConnection","web3Context","useWeb3Context","commonContext","initWallet","networkManager","getNetwork","logout","useCallback","removeWallet","location","reload","active","FormatUtil","defaultMessage","log","graphQLErrors","stringify","SnackbarUtil","snackbar","enqueueSnackbar","formatMessage","QrCode","elementRef","useRef","defaultOpt","ecLevel","HIGH","minVersion","background","mode","modes","DRAW_WITH_IMAGE_BOX","radius","image","mSize","current","innerHTML","qrcode","generate","ref","LoginDialog","onClose","open","setOpen","viteClient","ConnectWalletDialog","connector","Dialog","DialogTitle","DialogContent","DialogContentText","mt","textAlign","uri","NetworksFormControl","FormControl","margin","NetworkList","networks","getNetworks","InputLabel","Select","labelId","onChange","selectedNetwork","target","MenuItem","Header","loginOpen","setLoginOpen","src","alt","width","icon","truncateStringInTheMiddle","Button","onClick","Alert","Paper","padding","PoolFilter","prop","values","setValues","emitEvent","oldValues","newValues","emitPoolFilterValuesChanged","handleCheckedChange","checked","mb","xs","md","FormGroup","Stack","FormControlLabel","control","Checkbox","Switch","minWidth","TextField","autoComplete","factory","_map","getMomentFactory","FilterUtil","create","partition","closedPools","openPools","filtered","sorted","sortPools","searchPools","APR","orderBy","TOTAL_STAKED","term","lowerCaseTerm","PoolService","_apollo","_fetchPolicy","query","variables","fetchPolicy","poolQuery","userInfoQuery","mutate","mutation","lt","service","getPoolService","ViteUtil","bn","decimalPlaces","ROUND_DOWN","toFormat","ClickOnceButton","isDisabled","setIsDisabled","handleClick","LoadingButton","loading","fullWidth","disabled","PoolCountdown","hasStarted","setHasStarted","remainingBlocks","setRemainingBlocks","countdown","setCountdown","useMemo","networkHeight","gte","getDuration","days","hours","minutes","ml","Skeleton","animation","PoolDepositDialog","setAmount","setDisabled","poolService","changeAmount","state","handleClose","setState","handleConfirmAsync","enqueueError","htmlFor","Input","autoFocus","startAdornment","InputAdornment","DialogActions","AccountService","PoolWithdrawDialog","getStakedAmount","formatBigNumber","accountService","getBalanceAsync","PoolDialog","WITHDRAW","DEPOSIT","Rewards","setPool","rewardTokens","setRewardTokens","newRewardTokens","calculateRewardTokens","setCanClaim","updateRewardPerToken","newPool","Tokens","BigCoin","Avatar","SmallCoin","grey","coinUtil","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","mapIconUrl","TransparentPaper","paddingTop","PoolListItem","dialogState","setDialogState","canStake","setCanStake","canClaim","canWithdraw","setCanWithdraw","handleClickClaimAsync","Accordion","defaultExpanded","AccordionSummary","expandIcon","AccordionDetails","pt","Link","underline","href","cursor","lg","zeroMinWidth","noWrap","showStaked","emitConnectWalletDialog","PoolList","isLoading","setIsLoading","allPools","setAllPools","setPools","setFilter","filterPools","PoolFilterValuesChanged","replacePool","findIndex","updatedPools","handlePoolEvent","PoolDeposit","PoolWithdraw","Pools","useQuery","pb","Transition","forwardRef","Slide","ConfirmTransactionDialog","TransitionComponent","keepMounted","style","zIndex","Network","refetch","emitNetworkBlockHeightChanged","Main","useSnackbar","Background","BackgroundSVG","App","apolloClient","config","EXPONENTIAL_AT","maxSnack","ApolloProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","secondary","red","A400","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector","String","defaultValue","ms","blob","min","max","Math","floor","lh","rh","truncateString","str","strPositionStart","strPositionEnd","GlobalEmitter","emit","PoolUpdate","EventEmitter","WalletType","WalletAccountType","Wallet","_type","accounts","baseInitinit","createAccount","forEach","Web","WebWallet","Session","SessionWallet","mnemonic","WebWalletAccount","session","SessionWalletAccount","WalletAccount","baseInit","privateKey","WalletConnector","walletManager","opts","meta","err","payload","saveSession","stopBizHeartBeat","listener","sessionAccounts","getWallet","updateWalletStore","res","rej","sendCustomRequest","method","r","updateSession","catch","Connector","WalletConnectorFactory","getValidSession","bridge","lastAccount","createSession","WalletStore","_webWalletKey","_sessionWalletKey","localStorage","removeItem","sessionStorage","getItem","fromJS","saveData","setItem","WalletManager","_store","_wallet","_mnemonicDeriveIndex","_setWalletCallback","updateWallet","validateMnemonic","resetWallet","createWebWalletAccount","setActiveAccount","deriveAddress","mnemonics","createAddressByPrivateKey","validateMnemonics","WS_RPC","require","providerOptions","retryTimes","retryInterval","ViteClient","_isConnected","_connector","_provider","_connectorFactory","isResolved","ViteAPI","disconnect","request","methodName","toAddress","block","accountBlock","createAccountBlock","setProvider","setPrivateKey","autoSetPreviousAccountBlock","sign","send","emitConfirmTransactionDialog","sendTransactionAsync","contractAddress","offchaincode","abiutils","encodeFunctionCall","dataBase64","Buffer","from","selfAddr","offChainCode","resultBytes","outputs","i","offchainDecodeResult","decodeParameters","resultList","topics","j","abiItem","encodeLogSignature","topic","decodeLog","inputs","utils","_Buffer","slice","addressHeightRange","placeholder","fromHeight","toHeight","tempPayload","subscribe","unsubscribe","blockByHeight","receiveBlockHash","blockByHash","getAccountBlockStatus","start","resolveAccountBlockData","blockType","bytes"],"mappings":"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","file":"static/js/main.2946509d.chunk.js","sourcesContent":["export class Task {\n  private _taskTimer: NodeJS.Timeout | undefined\n  private _taskInterval: number\n  private _task: () => Promise<boolean>\n  private _callback?: () => any\n\n  constructor(task: () => Promise<boolean>, interval: number) {\n    this._task = task;\n    this._taskInterval = interval;\n\n    return this;\n  }\n\n  _run(): void {\n    this._taskTimer = setTimeout(async () => {\n      if (!this._task) {\n        this._onStop();\n        return;\n      }\n      if (!(await this._task())) {\n        this._onStop();\n        return;\n      }\n      this._run();\n    }, this._taskInterval);\n  }\n\n  _onStop() {\n    this._callback && this._callback();\n  }\n\n  start(callback?: () => any): void {\n    this._callback = callback;\n    if (this._taskTimer) {\n      return;\n    }\n\n    this._run();\n  }\n\n\n  stop(): void {\n    this._onStop();\n    if (!this._taskTimer) {\n      return;\n    }\n    window.clearTimeout(this._taskTimer);\n    this._taskTimer = undefined;\n  }\n}","import BigNumber from \"bignumber.js\"\n\nexport interface GenericType {\n  name: string;\n  type: string;\n}\n\nexport type Contract = {\n  address: string\n  contractName: string\n  binary: string\n  offChain: string\n  abi: any[]\n}\n\nexport type Network = {\n  id: number\n  networkId: number\n  name: string\n  rpcUrl: string\n  connectorUrl: string\n}\n\nexport type Token = {\n  __typename: string\n  id: string\n  name: string\n  symbol: string\n  originalSymbol: string\n  decimals: number\n  iconUrl: Maybe<string>\n  url: Maybe<string>\n}\n\nexport type Pool = {\n  __typename: string\n  id: number\n  stakingToken: Token\n  rewardToken: Token\n  apr?: Maybe<BigNumber>\n  totalStaked: BigNumber\n  totalRewards: BigNumber\n  startBlock: BigNumber\n  endBlock: BigNumber\n  endTimestamp: number\n  latestRewardBlock: BigNumber\n  rewardPerPeriod: BigNumber\n  rewardPerToken: BigNumber\n  paidOut: BigNumber\n  userInfo?: Maybe<PoolUserInfo>\n  fetchTimestamp: number\n}\n\nexport type ContractPool = {\n  stakingTokenId: string\n  rewardTokenId: string\n  totalStakingBalance: string\n  totalRewardBalance: string\n  startBlock: string\n  endBlock: string\n  latestRewardBlock: string\n  rewardPerPeriod: string\n  rewardPerToken: string\n  paidOut: string\n}\n\nexport type PoolUserInfo = {\n  __typename: string\n  id: string\n  poolId: number\n  account: string\n  stakingBalance: BigNumber\n  rewardDebt: BigNumber\n}\n\nexport type ContractPoolUserInfo = {\n  poolId: number\n  address: string\n  stakingBalance: string\n  rewardDebt: string\n}\n\nexport type PoolFilterValues = {\n  stakedOnly: boolean\n  showLive: boolean\n  sortBy: string\n  search: string\n}\n\nexport enum PoolSortType {\n  DEFAULT = 0,\n  APR = 1,\n  TOTAL_STAKED = 2\n}\n\nexport type PoolDialogState = {\n  type: PoolDialogType\n  open: boolean\n}\n\nexport enum PoolDialogType {\n  DEPOSIT = 0,\n  WITHDRAW = 1,\n  CLAIM = 2\n}\n\nexport enum GlobalEvent {\n  ConfirmTransactionDialog = 'ConfirmTransactionDialog',\n  ConnectWalletDialog = 'ConnectWalletDialog',\n  NetworkBlockHeightChanged = 'NetworkBlockHeightChanged',\n  PoolFilterValuesChanged = 'PoolFilterValuesChanged',\n  PoolDeposit = 'PoolDeposit',\n  PoolWithdraw = 'PoolWithdraw',\n  PoolUpdate = 'PoolUpdate'\n}\n\nexport type VmLog = {\n  event: string\n  topic: string\n  args: any\n}\n\nexport enum VmLogEvent {\n  PoolCreated = 'PoolCreated',\n  Deposit = 'Deposit',\n  Withdraw = 'Withdraw'\n}","import { GenericType, Network, PoolFilterValues, PoolSortType, Token } from \"../util/types\"\n\nexport const CommonConstants = {\n  APP_NAME: 'BeefStake',\n  WEB_WALLET_STORAGE_SPACE: 'VSP_WEB_WALLET',\n  SESSION_WALLET_STORAGE_SPACE: 'VSP_SESSION_WALLET',\n  POOLS_CONTRACT_ADDRESS: 'vite_dcd10d6c5e72d616d5352c891040b49f5b333cfc039e40d5b6',\n  VITE_TOKEN_ID: 'tti_5649544520544f4b454e6e40',\n  REWARD_FACTOR: 1e36 // 10^36 = new BigNumber(10).pow(36)\n}\n\nexport const Networks: Network[] = [\n  {\n    id: 1,\n    networkId: 1,\n    name: 'MAINNET',\n    rpcUrl: 'wss://node-vite.thomiz.dev/ws',\n    connectorUrl: 'wss://viteconnect.thomiz.dev'\n  },\n  {\n    id: 2,\n    networkId: 2,\n    name: 'TESTNET',\n    rpcUrl: 'wss://buidl.vite.net/gvite/ws', // https://buidl.vite.net/gvite\n    connectorUrl: 'wss://viteconnect.thomiz.dev'\n  },\n  {\n    id: 4,\n    networkId: 5,\n    name: 'DEBUG',\n    rpcUrl: 'ws://localhost:23457',\n    connectorUrl: 'wss://viteconnect.thomiz.dev'\n  }\n]\n\nexport const TypeNames = {\n  Pool: \"Pool\",\n  PoolUserInfo: \"PoolUserInfo\",\n  Token: \"Token\"\n}\n\nexport const UnknownToken: Token = {\n  __typename: TypeNames.Token,\n  id: \"-1\",\n  name: \"UNKNOWN\",\n  symbol: \"UNKNOWN\",\n  originalSymbol: \"UNKNOWN\",\n  decimals: 0,\n  iconUrl: undefined,\n  url: undefined\n}\n\nexport const PoolSortTypes: GenericType[] = [\n  {\n    name: \"\",\n    type: \"DEFAULT\"\n  },\n  {\n    name: \"APR\",\n    type: \"APR\"\n  },\n  {\n    name: \"Total staked\",\n    type: \"TOTAL_STAKED\"\n  }\n]\n\nexport const DefaultPoolFilterValues: PoolFilterValues = {\n  stakedOnly: false,\n  showLive: true,\n  sortBy: PoolSortTypes[PoolSortType.DEFAULT].type,\n  search: \"\"\n}","import { CommonUtil } from './common.util';\n\nexport class LogEventModel {\n  banner?: string;\n  args?: any[];\n\n  public constructor(init?: Partial<LogEventModel>) {\n    Object.assign(this, init);\n  }\n}\n\nexport interface ILogger {\n  // Make sure level is selected e.g. 'Verbose' in Chrome\n  readonly debug: any;\n  readonly info: any;\n  readonly warn: any;\n  readonly error: any;\n}\n\nconst noop = (): any => undefined;\n\nexport class ConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return console.debug.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return console.info.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return console.warn.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return console.error.bind(console);\n    } else {\n      return noop;\n    }\n  }\n}\n\nexport class ExtendedConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  private timestamp(type: string): string {\n    return `[${type} ${new Date().toLocaleTimeString()}]`;\n  }\n\n  private createLogEventModel(type: string, ...args: any[]): LogEventModel {\n    const mapFn = (e: any) => {\n      if (CommonUtil.isString(e)) {\n        return e;\n      } else if (e instanceof Error) {\n        return e.message;\n      }\n      return CommonUtil.toJsonString(e);\n    };\n    const result = new LogEventModel({\n      banner: this.timestamp(type),\n      args: args?.map(e => Array.isArray(e) ? e.map(e1 => mapFn(e1)) : mapFn(e))\n    });\n    return result;\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('DEBUG', args);\n        return Function.prototype.bind.call(console.debug, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('INFO', args);\n        return Function.prototype.bind.call(console.info, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('WARN', args);\n        return Function.prototype.bind.call(console.warn, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        if (args?.length > 0) {\n          if (!CommonUtil.isString(args[0])) {\n            args.push('(See console output for more information.)');\n          }\n        }\n        const result = this.createLogEventModel('ERROR', args);\n        return Function.prototype.bind.call(console.error, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n}\n\nconst logger = new ExtendedConsoleLogger();\n\nexport const getLogger = (): ILogger => {\n  return logger;\n}","import fs from 'fs';\n\nexport abstract class FileUtil {\n  abstract readFileAsync(path: string): Promise<any>;\n}\n\nexport class BrowserFileUtil extends FileUtil {\n  async readFileAsync(path: string): Promise<any> {\n    const response = await fetch(path);\n    return response.text();\n  }\n}\n\nexport class LocalFileUtil extends FileUtil {\n  public async readFileAsync(path: string): Promise<any> {\n    return Promise.resolve(fs.readFileSync(path, 'utf8'));\n  }\n}\n\nexport enum FileUtilType {\n  Browser = 0,\n  Local = 1\n}\n\nexport const getFileUtil = (type: FileUtilType = FileUtilType.Browser) => {\n  switch (type) {\n    case FileUtilType.Local:\n      return new LocalFileUtil();\n    default:\n      return new BrowserFileUtil();\n  }\n}","export default __webpack_public_path__ + \"static/media/bg.fa049dbd.svg\";","export class CoinUtil {\n  private readonly _iconUrlMap: Map<string, string>;\n  private readonly _coinMarketCapMap: Map<string, string>;\n  private readonly _coingeckoMap: Map<string, string>;\n\n  constructor() {\n    this._iconUrlMap = new Map<string, string>([\n      [\"https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png\", \"./assets/coins/vite.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/5faa1fa2b952137081e36c51af2b493c.png\", \"./assets/coins/usdc.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/3c231a8309999ad226afa097488a6158.png\", \"./assets/coins/dai.png\"]\n    ]);\n    this._coinMarketCapMap = new Map<string, string>();\n    this._coingeckoMap = new Map<string, string>();\n  }\n\n  mapIconUrl(iconUrl?: Maybe<string>): string {\n    if (!iconUrl) {\n      return \"\";\n    }\n    const existing = this._iconUrlMap.get(iconUrl);\n    return existing ?? iconUrl;\n  }\n\n  mapCoinMarketCapName(name: string): string {\n    const existing = this._coinMarketCapMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n\n  mapCoingeckoName(name: string): string {\n    const existing = this._coingeckoMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n}\n\nconst util = new CoinUtil();\n\nexport const getCoinUtil = (): CoinUtil => {\n  return util;\n}","import BigNumber from \"bignumber.js\";\nimport CoinGecko from \"coingecko-api\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getLogger } from \"../util/logger\";\n\nconst logger = getLogger();\n\nexport class CoingeckoClient {\n  private readonly _client: any;\n  private readonly _coinUtil: CoinUtil;\n\n  constructor() {\n    this._client = new CoinGecko();\n    this._coinUtil = getCoinUtil();\n  }\n\n  async getTokenPriceUSDAsync(name: string): Promise<BigNumber> {\n    try {\n      const mappedName = this._coinUtil.mapCoingeckoName(name);\n      const params = { ids: mappedName };\n      const result = await this._client.simple.price(params);\n      return new BigNumber(result.data[mappedName].usd);\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst client = new CoingeckoClient();\n\nexport const getCoingeckoClient = () => {\n  return client;\n}","import axios from 'axios';\n\ntype BaseResult<T> = {\n  code: number,\n  data: T\n}\n\nexport type TokenDetailResult = {\n  name: string\n  symbol: string\n  originalSymbol: string\n  tokenDecimals: number\n  urlIcon: string\n}\n\nexport class VitexClient {\n  private readonly _baseUrl: string;\n\n  constructor() {\n    this._baseUrl = \"https://vitex.vite.net\"\n  }\n\n  async getTokenDetailAsync(tokenId: string): Promise<Maybe<TokenDetailResult>> {\n    const result = await axios.get<BaseResult<TokenDetailResult>>(this._baseUrl + \"/api/v1/token/detail?tokenId=\" + tokenId);\n    return result.data.data;\n  }\n}\n\nconst client = new VitexClient();\n\nexport const getVitexClient = () => {\n  return client;\n}\n","export class Ensure {\n\n  public static notNull(property: any, propertyName: string, message?: string) {\n    if (property === null || property === undefined) {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static notNullOrWhiteSpace(property: Maybe<string>, propertyName: string, message?: string) {\n    if (property === null || property === undefined || property?.trim() === '') {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static maxLength(property: Maybe<string>, propertyName: string, maxLength: number) {\n    if (property && property.length > maxLength) {\n      throw new Error(`${propertyName} exceeds the maximum length of ${maxLength}`);\n    }\n  }\n\n}\n","import moment from 'moment';\n\nexport class MomentUtil {\n  private readonly _locale: string;\n\n  constructor(locale?: Maybe<string>) {\n    if (locale) {\n      this._locale = locale;\n    } else {\n      this._locale = navigator.language;\n    }\n    moment.locale(this._locale);\n  }\n\n  public getLocale(): string {\n    return this._locale;\n  }\n\n  public get(): moment.Moment {\n    return moment();\n  }\n\n  public getDuration(seconds: number): moment.Duration {\n    return moment.duration(seconds, 'seconds');\n  }\n\n  public getFromUnix(date: number) {\n    return moment.unix(date);\n  }\n\n  public getFromMilliseconds(date: number) {\n    return moment(date, 'x');\n  }\n\n  public getLocal(date: any): moment.Moment {\n    return moment.utc(date).local();\n  }\n\n  public getLocalTime(date: any): string {\n    return this.getLocal(date).format('LTS');\n  }\n\n  public getLocalDate(date: any): string {\n    return this.getLocal(date).format('L');\n  }\n\n  public getLocalFormatted(date: any): string {\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\n  }\n\n  public getLocalReverseFormatted(date: any): string {\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\n  }\n\n  public isExpired(timestamp: number): boolean {\n    try {\n      if (timestamp >= 0) {\n        return moment.utc().unix() >= timestamp;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { CoingeckoClient, getCoingeckoClient } from \"../clients/coingecko.client\";\nimport { getVitexClient, VitexClient } from \"../clients/vitex.client\";\nimport { TypeNames, UnknownToken } from \"../common/constants\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { Ensure } from \"../util/ensure\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo, Token } from \"../util/types\";\nimport { getWalletManager, WalletAccount, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport interface IDataSource {\n  initAsync(): Promise<void>;\n  dispose(): void;\n  getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n  getNetworkBlockHeightAsync(): Promise<BigNumber>;\n  getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n  getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n  getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n  getTokenAsync(_id: string): Promise<Token>;\n  getTotalPoolsAsync(): Promise<number>;\n  depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n  withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}\n\nexport abstract class BaseDataSource implements IDataSource {\n  protected readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _coingeckoClient: CoingeckoClient;\n  private readonly _vitexClient: VitexClient;\n  private readonly _coinUtil: CoinUtil;\n  private readonly _tokens: Map<string, Token>;\n  private _moment: MomentUtil = new MomentUtil();\n\n  constructor() {\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._coingeckoClient = getCoingeckoClient();\n    this._vitexClient = getVitexClient();\n    this._coinUtil = getCoinUtil();\n    this._tokens = new Map<string, Token>();\n  }\n\n  async initAsync(): Promise<void> {\n    logger.info(\"Init BaseDataSource\")();\n    this._moment = new MomentUtil();\n    await this.initAsyncProtected();\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing BaseDataSource\")();\n    this._tokens.clear();\n    this.disposeProtected();\n  }\n\n  getAccount(): WalletAccount {\n    const account = this._walletManager.getActiveAccount();\n    Ensure.notNull(account, \"account\", \"Please connect your wallet first.\");\n    return account as WalletAccount;\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    try {\n      if (pool.endTimestamp >= 0 && (this._moment.isExpired(pool.endTimestamp) || pool.latestRewardBlock === pool.endBlock)) {\n        // pool is closed, should not display numeric APR.\n        return undefined;\n      }\n      const stakingTokenPrice = await this._coingeckoClient.getTokenPriceUSDAsync(pool.stakingToken.name);\n      const rewardTokenPrice = await this._coingeckoClient.getTokenPriceUSDAsync(pool.rewardToken.name);\n      const totalTime = pool.endBlock.minus(pool.startBlock);\n      const secondsInYear = new BigNumber(365 * 24 * 60 * 60);\n      const toPercent = new BigNumber(100);\n      const apr = rewardTokenPrice.times(pool.totalRewards).dividedBy(stakingTokenPrice.times(pool.totalStaked).times(totalTime)).times(secondsInYear).times(toPercent);\n      return !apr.isFinite() || apr.isNaN() ? undefined : apr;\n    } catch (error) {\n      logger.error(error)();\n      return undefined;\n    }\n  }\n\n  async getEndTimestampAsync(endBlock: BigNumber): Promise<number> {\n    try {\n      if (!endBlock || endBlock.lte(0)) {\n        return -1;\n      }\n      const networkBlockHeight = await this.getNetworkBlockHeightAsync();\n      const remainingSeconds = endBlock.minus(networkBlockHeight);\n      if (remainingSeconds.lte(0)) {\n        return 0;\n      }\n      return this._moment.get().add(remainingSeconds.toNumber(), \"seconds\").unix();\n    } catch (error) {\n      logger.error(error)();\n    }\n    return 0;\n  }\n\n  async getTokenAsync(id: string): Promise<Token> {\n    try {\n      const existing = this._tokens.get(id);\n      if (existing) {\n        return existing;\n      }\n      const result = await this._vitexClient.getTokenDetailAsync(id);\n      if (result) {\n        const token = {\n          __typename: \"Token\",\n          id,\n          name: result.name,\n          symbol: result.symbol,\n          originalSymbol: result.originalSymbol,\n          decimals: result.tokenDecimals,\n          iconUrl: result.urlIcon,\n          url: \"https://coinmarketcap.com/currencies/\" + this._coinUtil.mapCoinMarketCapName(result.name)\n        }\n        this._tokens.set(id, token);\n        return token;\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n    const unknownToken = {\n      ...UnknownToken,\n      id\n    }\n    this._tokens.set(id, unknownToken);\n    return unknownToken;\n  }\n\n  protected async toPoolAsync(id: number, p: ContractPool): Promise<Pool> {\n    const stakingToken = await this.getTokenAsync(p.stakingTokenId);\n    const rewardToken = await this.getTokenAsync(p.rewardTokenId);\n    const endTimestamp = await this.getEndTimestampAsync(new BigNumber(p.endBlock));\n    const pool: Pool = {\n      __typename: TypeNames.Pool,\n      id,\n      stakingToken,\n      rewardToken,\n      totalStaked: new BigNumber(p.totalStakingBalance),\n      totalRewards: new BigNumber(p.totalRewardBalance),\n      startBlock: new BigNumber(p.startBlock),\n      endBlock: new BigNumber(p.endBlock),\n      endTimestamp,\n      latestRewardBlock: new BigNumber(p.latestRewardBlock),\n      rewardPerPeriod: new BigNumber(p.rewardPerPeriod),\n      rewardPerToken: new BigNumber(p.rewardPerToken),\n      paidOut: new BigNumber(p.paidOut),\n      fetchTimestamp: this._moment.get().unix()\n    };\n    return pool;\n  }\n\n  protected async toPoolUserInfoAsync(u: ContractPoolUserInfo): Promise<PoolUserInfo> {\n    return {\n      __typename: TypeNames.PoolUserInfo,\n      id: `${u.address}_${u.poolId}`,\n      poolId: u.poolId,\n      account: u.address,\n      stakingBalance: new BigNumber(u.stakingBalance),\n      rewardDebt: new BigNumber(u.rewardDebt)\n    }\n  }\n\n  protected abstract initAsyncProtected(): Promise<void>;\n\n  protected abstract disposeProtected(): void;\n\n  abstract getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n\n  abstract getNetworkBlockHeightAsync(): Promise<BigNumber>;\n\n  abstract getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n\n  abstract getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n\n  abstract getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n\n  abstract getTotalPoolsAsync(): Promise<number>;\n\n  abstract depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n\n  abstract withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\n\nconst logger = getLogger();\n\nexport class MockDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private _pools: Pool[];\n  private _users: PoolUserInfo[];\n  private _networkBlockHeight: BigNumber;\n  private _networkBlockHeightInterval?: NodeJS.Timeout;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._pools = [];\n    this._users = [];\n    this._networkBlockHeight = new BigNumber(0);\n    logger.info(\"MockDataSource loaded\")();\n  }\n\n  private initNetworkBlockHeight() {\n    this._networkBlockHeight = new BigNumber(0);\n    this._networkBlockHeightInterval = setInterval(() => {\n      this._networkBlockHeight = this._networkBlockHeight.plus(1);\n      // console.log(this._networkBlockHeight.toString())\n    }, 1000);\n  }\n\n  private async initPoolsAsync(): Promise<void> {\n    let pools = await this._fileUtil.readFileAsync(\"./assets/data/mock_pool_info.json\");\n    pools = JSON.parse(pools);\n    this._pools = [];\n    for (let index = 0; index < pools.length; index++) {\n      const p: ContractPool = pools[index];\n      const pool = await this.toPoolAsync(index, p);\n      pool.apr = await this.getAprAsync(pool);\n      this._pools.push(pool);\n    }\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    switch (pool.id) {\n      case 0:\n        return new BigNumber(2.12345678)\n      case 1:\n        return new BigNumber(3.55555555)\n      default:\n        return super.getAprAsync(pool)\n    };\n  }\n\n  private async initPoolUsersAsync(): Promise<void> {\n    let users = await this._fileUtil.readFileAsync(\"./assets/data/mock_user_info.json\");\n    users = JSON.parse(users);\n    this._users = [];\n    for (let index = 0; index < users.length; index++) {\n      const u: ContractPoolUserInfo = users[index];\n      const info = await this.toPoolUserInfoAsync(u);\n      this._users.push(info);\n    }\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    logger.info(\"MockDataSource initAsyncProtected\")();\n    this.initNetworkBlockHeight();\n    await this.initPoolsAsync();\n    await this.initPoolUsersAsync();\n  }\n\n  protected disposeProtected(): void {\n    if (this._networkBlockHeightInterval) {\n      clearInterval(this._networkBlockHeightInterval);\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    return new BigNumber(0);\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    return this._networkBlockHeight;\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    await CommonUtil.timeout(CommonUtil.random(100, 500));\n    const pool = this._pools[_id];\n    if (!_account) {\n      return pool;\n    }\n    return {\n      ...pool,\n      userInfo: await this.getPoolUserInfoAsync(_id, _account)\n    }\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    await CommonUtil.timeout(1000);\n    if (!_account) {\n      return this._pools;\n    }\n    const pools = [];\n    for (const p of this._pools) {\n      pools.push(await this.getPoolAsync(p.id, _account))\n    }\n    return pools;\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    return this._users.find(e => e.poolId === _poolId && e.account.toLowerCase() === _account?.toLowerCase());\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    return this._pools.length;\n  }\n\n  private async _updatePoolAsync(pool: Pool): Promise<void> {\n    const blockNumber = await this.getNetworkBlockHeightAsync();\n    const latestBlock = blockNumber < pool.endBlock ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock <= pool.latestRewardBlock) {\n      return;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(0)) {\n      pool.latestRewardBlock = latestBlock;\n      return;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    let userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (userInfo) {\n      // dispense rewards\n      if (userInfo.stakingBalance.gt(0)) {\n        const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n        pool.paidOut = pool.paidOut.plus(pendingAmount);\n      }\n      // update balances & recompute rewardDebt\n      userInfo.stakingBalance = userInfo.stakingBalance.plus(amount);\n      userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n    } else {\n      userInfo = await this.toPoolUserInfoAsync({\n        poolId: _id,\n        address: account,\n        stakingBalance: amount.toString(),\n        rewardDebt: \"0\"\n      });\n      this._users.push(userInfo);\n    }\n    pool.totalStaked = pool.totalStaked.plus(amount);\n    this._emitter.emitPoolDeposit(_id, new BigNumber(_amount), account);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    const userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (!userInfo) {\n      throw new Error(\"Withdraw not possible\")\n    }\n    if (userInfo.stakingBalance.lte(0) || amount.gt(userInfo.stakingBalance)) {\n      throw new Error(\"Insufficient balance\")\n    }\n\n    // dispense rewards\n    const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n    pool.paidOut = pool.paidOut.plus(pendingAmount);\n\n    // update balances & recompute rewardDebt\n    userInfo.stakingBalance = userInfo.stakingBalance.minus(amount);\n    pool.totalStaked = pool.totalStaked.minus(amount);\n    userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n\n    this._emitter.emitPoolWithdraw(_id, new BigNumber(_amount), account);\n    return true;\n  }\n}\n\nconst ds = new MockDataSource();\n\nexport const getMockDataSource = () => {\n  return ds;\n}","export class CachedFunctionCall<T> {\n  private readonly _duration: number;\n  private readonly _callbackFn: () => Promise<T>;\n  private _currentValue?: Maybe<T>;\n  private _lastExecution: number;\n\n  constructor(duration: number, callbackFn: () => Promise<T>) {\n    this._duration = duration;\n    this._callbackFn = callbackFn;\n    this._lastExecution = new Date(0).getTime();\n  }\n\n  private isExpired(): boolean {\n    return new Date().getTime() >= this._lastExecution + this._duration;\n  }\n\n  async getAsync(): Promise<T> {\n    if (!this._currentValue || this.isExpired()) {\n      this._currentValue = await this._callbackFn();\n      this._lastExecution = new Date().getTime();\n    }\n    return this._currentValue;\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { CommonConstants } from \"../common/constants\";\nimport { CachedFunctionCall } from \"../util/cache\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Contract, ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo, VmLog, VmLogEvent } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\n\nconst logger = getLogger();\n\nexport class ViteDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private readonly _client: ViteClient;\n  private readonly _offchainMethods: Map<string, string> = new Map<string, string>();\n  private readonly _cachedNetworkBlockHeight: CachedFunctionCall<number>;\n  private _contract?: Contract;\n  private _listener: any;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._client = getViteClient();\n    this._cachedNetworkBlockHeight = new CachedFunctionCall(500, async () => {\n      // prevent function from being called more than once every 500 milliseconds\n      return await this._client.requestAsync(\"ledger_getSnapshotChainHeight\")\n    });\n    logger.info(\"ViteDataSource loaded\")();\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools.json');\n    this._contract = JSON.parse(contract) as Contract;\n    this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS;\n    logger.info(`Contract ${this._contract?.contractName} loaded`)();\n    this._listener = await this._client.createAddressListenerAsync(this._contract.address);\n    this._listener.on((results: any[]) => {\n      if (!this._contract?.abi) {\n        logger.info('Could not decode vmlog because contract abi is not defined.')();\n      } else {\n        for (let index = 0; index < results.length; index++) {\n          const result = results[index];\n          const vmLog = this._client.decodeVmLog(result.vmlog, this._contract.abi);\n          logger.info(vmLog ?? result)();\n          if (vmLog) {\n            this.handleVmLogAsync(vmLog);\n          }\n        }\n      }\n    });\n  }\n\n  protected disposeProtected(): void {\n    this.removeAddressListener();\n    this._offchainMethods.clear();\n  }\n\n  private removeAddressListener(): void {\n    if (this._listener) {\n      this._client.removeListener(this._listener);\n    }\n  }\n\n  private get contract(): Contract {\n    if (this._contract?.address === undefined) {\n      throw new Error(\"Contract is not defined.\");\n    } else {\n      return this._contract;\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    try {\n      if (CommonUtil.isNullOrWhitespace(_account)) {\n        return new BigNumber(0);\n      }\n      const result = await this._client.requestAsync(\"ledger_getAccountInfoByAddress\", _account);\n      if (!result?.balanceInfoMap) {\n        return new BigNumber(0);\n      }\n      return new BigNumber(result.balanceInfoMap[CommonConstants.VITE_TOKEN_ID].balance).div(new BigNumber(10).pow(18));\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    try {\n      const result = await this._cachedNetworkBlockHeight.getAsync();\n      return new BigNumber(result);\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolInfo\"), this.contract.offChain, [_id]);\n    const p = this.objectFromEntries(result) as ContractPool;\n    const pool = await this.toPoolAsync(_id, p);\n    pool.apr = await this.getAprAsync(pool);\n    pool.userInfo = await this.getPoolUserInfoAsync(_id, _account);\n    return pool;\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    const amount = await this.getTotalPoolsAsync();\n    const pools = [];\n    for (let index = 0; index < amount; index++) {\n      try {\n        const pool = await this.getPoolAsync(index, _account);\n        pools.push(pool)\n      } catch (error) {\n        logger.error(error)();\n      }\n    }\n    return pools;\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (!_account || CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getUserInfo\"), this.contract.offChain, [_poolId, _account]);\n    const u = this.objectFromEntries(result) as ContractPoolUserInfo;\n    const info = await this.toPoolUserInfoAsync(u);\n    return info;\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolCount\"), this.contract.offChain, []);\n    return Number(result[0].value);\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"deposit\", this.contract.abi, [_id], _tokenId, _amount, this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"withdraw\", this.contract.abi, [_id, _amount], undefined, \"0\", this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  private getOffchainMethodAbi(name: string): any {\n    let result: Maybe<any>\n    if (this._offchainMethods.has(name)) {\n      result = this._offchainMethods.get(name)\n    } else {\n      result = this.contract.abi.find(e => e.type === \"offchain\" && e.name === name)\n      if (result) {\n        this._offchainMethods.set(name, result)\n      }\n    }\n    if (result) {\n      return result\n    } else {\n      throw new Error(`The offchain method '${name}' does not exist.'`)\n    }\n  }\n\n  private handleResponseAsync = async (address: string, height: string) => new Promise<void>((resolve, reject) => {\n    this._client.waitForAccountBlockAsync(address, height).then((result: any) => {\n      if (result?.status === 0) {\n        resolve()\n      } else {\n        reject(result?.statusTxt ?? \"Something went wrong.\")\n      }\n    })\n  })\n\n  private async handleVmLogAsync(vmlog: VmLog): Promise<void> {\n    try {\n      if (vmlog.event === VmLogEvent.Deposit && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolDeposit(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else if (vmlog.event === VmLogEvent.Withdraw && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolWithdraw(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else {\n        logger.info('Unknown vmlog event.', vmlog)();\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  private objectFromEntries = (entries: any) => {\n    return Object.fromEntries(\n      entries.map((entry: any) => {\n        return [entry.name, entry.value];\n      })\n    );\n  }\n}\n\nconst ds = new ViteDataSource();\n\nexport const getViteDataSource = () => {\n  return ds;\n}","import { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { getMockDataSource, getViteDataSource, IDataSource } from \"../datasources\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\n\nconst logger = getLogger();\n\nexport class CommonContext {\n  private readonly _vite: ViteClient;\n  private _datasource: IDataSource;\n\n  constructor() {\n    this._vite = getViteClient();\n    this._datasource = getMockDataSource();\n  }\n\n  async initAsync(network: Network): Promise<void> {\n    await this.initViteClientAsync(network);\n    switch (network.id) {\n      case 3:\n        this._datasource = getMockDataSource();\n        break;\n      default:\n        this._datasource = getViteDataSource();\n        break;\n    }\n    await this._datasource.initAsync();\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing CommonContext\")();\n    this._datasource.dispose();\n    this._vite.dispose();\n  }\n\n  get datasource(): IDataSource {\n    return this._datasource;\n  }\n\n  private async initViteClientAsync(network: Network): Promise<void> {\n    try {\n      await this._vite.initAsync(network);\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n}\n\nconst context = new CommonContext();\n\nexport const getCommonContext = () => {\n  return context;\n}","import { gql } from \"@apollo/client\";\nimport { ApolloContext } from \"../clients/apollo.client\";\n\nexport const DEPOSIT_MUTATION = gql`\nmutation Deposit($id: ID!, $tokenId: String!, $amount: String!) {\n  deposit(id: $id, tokenId: $tokenId, amount: $amount) @client\n}\n`;\n\nexport const WITHDRAW_MUTATION = gql`\nmutation Withdraw($id: ID!, $amount: String!) {\n  withdraw(id: $id, amount: $amount) @client\n}\n`;\n\nexport const PoolMutations = {\n  async deposit(parent: any, { id, tokenId, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.depositAsync(Number(id), tokenId, amount);\n  },\n  async withdraw(parent: any, { id, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.withdrawAsync(Number(id), amount);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_ACCOUNT_BALANCE_QUERY = gql`\n  query GetAccountBalance($account: String) {\n    accountBalance(account: $account) @client\n  }\n`;\n\nexport const AccountQueries = {\n  async accountBalance(parent: any, { account }: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getAccountBalanceAsync(account);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_NETWORK_BLOCK_HEIGHT_QUERY = gql`\n  query GetNetworkBlockHeight {\n    networkBlockHeight @client\n  }\n`;\n\nexport const NetworkQueries = {\n  async networkBlockHeight(parent: any, params: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getNetworkBlockHeightAsync();\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Token } from '../util/types';\n\nexport const TOKEN_FIELDS = gql`\n  fragment TokenFields on Token {\n    id\n    name\n    symbol\n    originalSymbol\n    decimals\n    iconUrl\n    url\n  }\n`;\n\nexport const GET_TOKEN_QUERY = gql`\n  ${TOKEN_FIELDS}\n  query GetToken($id: ID!) {\n    token(id: $id) @client {\n      ...TokenFields\n    }\n  }\n`;\n\nexport const TokenQueries = {\n  async token(parent: any, { id }: any, context: ApolloContext): Promise<Token> {\n    return context.client.datasource.getTokenAsync(id);\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Pool, PoolUserInfo } from '../util/types';\nimport { TOKEN_FIELDS } from './token';\n\nexport const POOL_FIELDS = gql`\n  fragment PoolFields on Pool {\n    id\n    stakingToken {\n      ...TokenFields\n    }\n    rewardToken {\n      ...TokenFields\n    }\n    apr\n    totalStaked\n    totalRewards\n    startBlock\n    endBlock\n    endTimestamp\n    latestRewardBlock\n    rewardPerPeriod\n    rewardPerToken\n    paidOut\n    userInfo {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const POOL_USER_INFO_FIELDS = gql`\n  fragment PoolUserInfoFields on PoolUserInfo {\n    id\n    poolId\n    account\n    stakingBalance\n    rewardDebt\n  }\n`;\n\nexport const GET_POOL_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPool($id: ID!, $account: String) {\n    pool(id: $id, account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_POOLS_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPools($account: String) {\n    pools(account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_TOTAL_POOLS_QUERY = gql`\n  query GetTotalPools {\n    totalPools @client\n  }\n`;\n\nexport const GET_POOL_USER_INFO_QUERY = gql`\n  ${POOL_USER_INFO_FIELDS}\n  query GetPoolUserInfo($poolId: Int!, $account: String) {\n    poolUserInfo(poolId: $poolId, account: $account) @client {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const PoolQueries = {\n  async pool(parent: any, { id, account }: any, context: ApolloContext): Promise<Pool> {\n    return context.client.datasource.getPoolAsync(Number(id), account);\n  },\n  async pools(parent: any, { account }: any, context: ApolloContext): Promise<Pool[]> {\n    return context.client.datasource.getPoolsAsync(account);\n  },\n  async totalPools(parent: any, params: any, context: ApolloContext): Promise<number> {\n    return await context.client.datasource.getTotalPoolsAsync();\n  },\n  async poolUserInfo(parent: any, { poolId, account }: any, context: ApolloContext): Promise<Maybe<PoolUserInfo>> {\n    return context.client.datasource.getPoolUserInfoAsync(Number(poolId), account);\n  }\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { GraphQLScalarType } from 'graphql';\nimport { getCommonContext } from '../contexts/common';\nimport { IDataSource } from '../datasources';\nimport { PoolMutations } from '../mutations';\nimport { NetworkQueries, PoolQueries, TokenQueries } from '../queries';\nimport { AccountQueries } from '../queries/account';\n\nexport type ApolloContext = {\n  cache: InMemoryCache,\n  client: ApolloClientWrapper,\n  clientAwareness: any,\n  getCacheKey: (obj: any) => string | undefined\n}\n\nexport class ApolloClientWrapper extends ApolloClient<NormalizedCacheObject> {\n  get datasource(): IDataSource {\n    return getCommonContext().datasource;\n  }\n}\n\nconst cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n      }\n    }\n  }\n});\n\nconst bigNumberScalar = new GraphQLScalarType({\n  name: 'BigNumber',\n  description: 'BigNumber custom scalar type',\n  serialize(value: BigNumber) {\n    return value.toString();\n  },\n  parseValue(value: string) {\n    return new BigNumber(value);\n  }\n});\n\nconst resolvers: any = {\n  BigNumber: bigNumberScalar,\n  Query: {\n    ...AccountQueries,\n    ...NetworkQueries,\n    ...PoolQueries,\n    ...TokenQueries\n  },\n  Mutation: {\n    ...PoolMutations\n  }\n};\n\n// https://www.apollographql.com/docs/react/networking/authentication/#header\nconst client = new ApolloClientWrapper({\n  // link: authLink.concat(httpLink),\n  cache: cache,\n  resolvers,\n  headers: {\n    'client-name': process.env.REACT_APP_NAME || 'client',\n    'client-version': process.env.REACT_APP_VERSION || '0',\n  },\n})\n\nexport const getApolloClient = () => {\n  return client;\n}","import BigNumber from \"bignumber.js\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\nimport { Networks } from \"./constants\";\n\nconst logger = getLogger();\n\nexport class NetworkManager {\n  private _networkHeight: BigNumber;\n  private _network?: Maybe<Network>;\n  private _setNetworkCallback?: (network?: Maybe<Network>) => void;\n\n  constructor() {\n    this._networkHeight = new BigNumber(0);\n  }\n\n  set networkHeight(height: BigNumber) {\n    this._networkHeight = height;\n  }\n\n  get networkHeight(): BigNumber {\n    return this._networkHeight;\n  }\n\n  set onSetNetworkCallback(cb: (network?: Maybe<Network>) => void) {\n    this._setNetworkCallback = cb;\n  }\n\n  getNetwork(): Maybe<Network> {\n    return this._network;\n  }\n\n  setNetwork(network?: Maybe<Network>): void {\n    this._network = network;\n    if (this._setNetworkCallback) {\n      this._setNetworkCallback(this._network);\n    }\n  }\n\n  getNetworks(): Network[] {\n    try {\n      const ids = process.env.REACT_APP_NETWORKS?.split(\",\").map(e => Number(e));\n      return Networks.filter(e => ids?.includes(e.id))\n    } catch (error) {\n      logger.error(error)\n    }\n    return Networks;\n  }\n}\n\nconst manager = new NetworkManager();\n\nexport const getNetworkManager = () => {\n  return manager;\n}","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\n\nexport const LightTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}));\n\nexport const BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nexport const HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}));","import CropSquareIcon from '@mui/icons-material/CropSquare';\nimport { Box, Chip, Grid, Typography } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\n\nexport const Footer: React.FC = () => {\n  const [networkBlockHeight, setNetworkBlockHeight] = useState(new BigNumber(0))\n  const [rotated, setRotated] = useState(false)\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (height: BigNumber) => {\n      const heightString = height.toString();\n      let heightRef = height;\n      if (heightString.length > 1) {\n        heightRef = new BigNumber(heightString.substr(heightString.length - 1, heightString.length))\n      }\n      setRotated(heightRef.mod(2).eq(0));\n      setNetworkBlockHeight(height);\n    }\n    emitter.on(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    };\n  }, [emitter]);\n\n  return (\n    <Box sx={{ py: \"10px\", px: \"24px\" }}>\n      <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <BootstrapTooltip title=\"Network block height\" placement=\"top\" arrow>\n            <Typography variant=\"caption\" sx={{ verticalAlign: \"middle\", display: \"inline-flex\" }}>\n              <CropSquareIcon sx={{\n                color: \"gray\",\n                mr: \"2px\",\n                transform: rotated ? \"rotate(45deg)\" : \"rotate(0deg)\",\n                fontSize: \"17px\"\n              }} />\n              {networkBlockHeight.toString()}\n            </Typography>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip title=\"Version\" placement=\"top\" arrow>\n            <Chip label={'v' + process.env.REACT_APP_VERSION} variant=\"outlined\" size=\"small\" />\n          </BootstrapTooltip>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n","import React from 'react';\nimport { AppBar, styled, Toolbar, Typography } from '@mui/material';\nimport { CommonConstants } from '../../../../common/constants';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`,\n);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`,\n);\n\nexport const HeaderLoading: React.FC = (props: any) => {\n  return (\n    <Root>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <img src={\"./logo_white.png\"} alt=\"logo\" width=\"30\" /> */}\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n          </TitleTypography>\n        </Toolbar>\n      </AppBar>\n    </Root>\n  )\n}","import { Container, styled } from '@mui/material';\nimport * as React from 'react';\n\nconst MainScrollStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: center;\n  padding-bottom: 15px;\n  padding-top: 30px;\n  overflow: auto;\n  overflow-x: hidden;\n`,\n);\n\nconst MainScrollInner = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`,\n);\n\nexport const MainScroll: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return (\n    <MainScrollStyled {...restProps}>\n      <Container maxWidth=\"lg\">\n        <MainScrollInner>{children}</MainScrollInner>\n      </Container>\n    </MainScrollStyled>\n  )\n}\n","import { styled } from '@mui/material';\nimport React from 'react';\n\nconst MainWrapperStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`,\n);\n\nexport const MainWrapper: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\n}\n","import React, { useState } from 'react';\nimport { getNetworkManager } from '../common/network';\nimport { Network } from '../util/types';\nimport { getWalletManager, SessionWallet, WebWallet } from '../wallet';\n\nexport interface IWeb3Context {\n  setError: (error: Error) => void,\n  error?: Maybe<Error>,\n  wallet?: Maybe<WebWallet | SessionWallet>\n  network?: Maybe<Network>\n}\n\nconst Web3Context = React.createContext<Maybe<IWeb3Context>>(undefined)\n\nexport const useWeb3Context = () => {\n  const context = React.useContext(Web3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\nexport const Web3Provider: React.FC<Props> = (props: Props) => {\n  const [error, setError] = useState<Maybe<Error>>(null)\n  const [wallet, setWallet] = useState<Maybe<WebWallet | SessionWallet>>(null)\n  const [network, setNetwork] = useState<Maybe<Network>>(null)\n\n  const walletManager = getWalletManager()\n  walletManager.onSetWalletCallback = setWallet\n\n  const networkManager = getNetworkManager()\n  networkManager.onSetNetworkCallback = setNetwork\n\n  const context: IWeb3Context = {\n    setError,\n    error,\n    wallet,\n    network\n  }\n\n  return (\n    <Web3Context.Provider value={context}>{props.children}</Web3Context.Provider>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Networks } from '../common/constants';\nimport { getNetworkManager } from '../common/network';\nimport { MainLoading } from '../features/main/components/loading';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\nimport { getWalletManager } from '../wallet';\nimport { getCommonContext } from './common';\nimport { useWeb3Context } from './web3';\n\nconst logger = getLogger()\n\nexport interface IConnectedWeb3Context {\n  account?: string\n  network?: Maybe<Network>\n  logout: () => void\n}\n\nconst ConnectedWeb3Context = React.createContext<Maybe<IConnectedWeb3Context>>(undefined)\n\n/**\n * This hook can only be used by components under the `ConnectedWeb3` component. Otherwise it will throw.\n */\nexport const useConnectedWeb3Context = () => {\n  const context = React.useContext(ConnectedWeb3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\n/**\n * Component used to render components that depend on Web3 being available. These components can then\n * `useConnectedWeb3Context` safely to get web3 stuff without having to null check it.\n */\nexport const ConnectedWeb3: React.FC<Props> = (props: Props) => {\n  const [connection, setConnection] = useState<IConnectedWeb3Context | null>(null)\n  const web3Context = useWeb3Context()\n  const commonContext = getCommonContext()\n\n  const { wallet, network } = web3Context\n\n  useEffect(() => {\n    if (!wallet) {\n      const walletManager = getWalletManager()\n      walletManager.initWallet()\n    }\n  }, [wallet])\n\n  useEffect(() => {\n    if (!network) {\n      const networkManager = getNetworkManager()\n      const networkId = Number(process.env.REACT_APP_DEFAULT_NETWORK ?? \"2\");\n      networkManager.setNetwork(Networks.find(e => e.id === networkId))\n      logger.info(\"Network:\", networkManager.getNetwork())()\n    }\n  }, [network])\n\n  const logout = useCallback(() => {\n    const walletManager = getWalletManager()\n    walletManager.removeWallet()\n    window.location.reload()\n  }, [])\n\n  useEffect(() => {\n    const value = {\n      account: wallet?.active?.address,\n      network,\n      logout\n    }\n\n    logger.info('ConnectedWeb3.account', wallet?.active?.address)()\n\n    const initAsync = async () => {\n      if (network) {\n        logger.info('Init ConnectedWeb3')()\n        try {\n          setConnection(null)\n          await commonContext.initAsync(network)\n          setConnection(value)\n        } catch (error) {\n          logger.error(error)();\n        }\n      }\n    }\n    initAsync()\n    return () => {\n      commonContext.dispose()\n    }\n  }, [wallet, network, logout, commonContext])\n\n  if (!connection) {\n    return MainLoading()\n  }\n\n  const value = {\n    ...connection\n  }\n\n  return (\n    <ConnectedWeb3Context.Provider value={value}>{props.children}</ConnectedWeb3Context.Provider>\n  )\n}","\nimport { Typography } from '@mui/material';\nimport { Footer } from '../../../layout/components/footer';\nimport { HeaderLoading } from '../../../layout/components/header-loading';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\n\nexport const MainLoading = () => {\n\n  return (\n    <MainWrapper>\n      <HeaderLoading />\n      <MainScroll>\n        <Typography>Loading...</Typography>\n      </MainScroll>\n      <Footer />\n    </MainWrapper>\n  )\n}\n","import { CommonUtil } from './common.util';\n\nexport abstract class FormatUtil {\n  static formatMessage(data: any): string {\n    const defaultMessage = \"Something went wrong.\"\n    if (data) {\n      console.log(data)\n      let message: string\n      if (!CommonUtil.isString(data)) {\n        if (data.message) {\n          message = data.message\n        }\n        else if (data.error?.message) {\n          message = data.error.message\n        } else if (data.graphQLErrors) {\n          if (data.graphQLErrors.length > 0) {\n            message = data.graphQLErrors[0].message\n          } else {\n            message = defaultMessage\n          }\n        } else {\n          message = JSON.stringify(data)\n          if (message === \"{}\") {\n            message = defaultMessage\n          }\n        }\n      } else {\n        message = data\n      }\n      if (message.length > 128) {\n        return message.substr(0, 128) + \"...\"\n      }\n      return message\n    }\n    return defaultMessage\n  }\n}","import { ProviderContext } from \"notistack\";\nimport { FormatUtil } from \"./format.util\";\n\nexport abstract class SnackbarUtil {\n  static snackbar: ProviderContext;\n  static enqueueError(error: any): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(FormatUtil.formatMessage(error));\n  }\n  static enqueueMessage(message: string): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(message);\n  }\n}","import React, { useEffect, useRef } from 'react';\nimport { qrcode, modes, ecLevel } from 'qrcode.es';\n\ninterface Props {\n  text?: string\n}\n\nexport const QrCode: React.FC<Props> = (props: Props) => {\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const defaultOpt = {\n      size: 240,\n      ecLevel: ecLevel.HIGH,\n      minVersion: 4,\n      background: '#fff',\n      mode: modes.DRAW_WITH_IMAGE_BOX,\n      radius: 0,\n      image: process.env.PUBLIC_URL + '/icon.png',\n      mSize: 0.3\n    };\n\n    if (props.text && elementRef.current) {\n      elementRef.current.innerHTML = ''\n      const q = new qrcode(elementRef.current);\n      q.generate(props.text, defaultOpt).then(() => {\n        console.log('QR code generated')\n      });\n    }\n  }, [props.text])\n\n  return (\n    <div ref={elementRef}></div>\n  );\n}\n","import { Dialog, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect } from 'react';\nimport { getViteClient } from '../../../../clients/vite.client';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { QrCode } from '../qrcode';\n\ninterface Props {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  onClose: () => void;\n}\n\nexport const LoginDialog: React.FC<Props> = (props: Props) => {\n  const { onClose, open, setOpen } = props;\n  const viteClient = getViteClient();\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConnectWalletDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConnectWalletDialog, handleEvent)\n    };\n  }, [emitter, setOpen]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  if (!viteClient.connector) {\n    return (\n      <>\n      </>\n    )\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={open} maxWidth=\"xs\">\n      <DialogTitle>Connect Wallet</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Scan the QR code via Vite Wallet App\n        </DialogContentText>\n        <Box sx={{ mt: 2, textAlign: \"center\" }}>\n          <QrCode text={viteClient.connector?.uri}></QrCode>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent, styled } from '@mui/material';\nimport React, { useState } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { Network } from '../../../../util/types';\n\nconst NetworksFormControl = styled(FormControl)(\n  ({ theme }) => ({\n    margin: theme.spacing(1),\n    '& .MuiSelect-root': {\n      color: theme.palette.common.white\n    },\n    '& .MuiSvgIcon-root': {\n      color: theme.palette.common.white\n    }\n  }));\n\nexport const NetworkList: React.FC = () => {\n  const networkManager = getNetworkManager()\n  const networks = networkManager.getNetworks()\n  const [network, setNetwork] = useState<Maybe<Network>>(networkManager.getNetwork())\n\n  const handleChange = (event: SelectChangeEvent) => {\n    const selectedNetwork = networks.find(e => e.id.toString() === event.target.value)\n    if (selectedNetwork) {\n      setNetwork(selectedNetwork)\n      networkManager.setNetwork(selectedNetwork)\n    }\n  }\n\n  return (\n    networks.length > 0 ? (\n      <NetworksFormControl variant=\"outlined\" size=\"small\">\n        <InputLabel id=\"select-network-label\"></InputLabel>\n        <Select\n          labelId=\"select-network-label\"\n          id=\"select-network-label\"\n          value={network?.id.toString()}\n          onChange={handleChange}\n        >\n          {networks.map(e => {\n            return (\n              <MenuItem key={e.id.toString()} value={e.id.toString()}>{e.name}</MenuItem>\n            )\n          })}\n        </Select>\n      </NetworksFormControl>\n    ) : (\n      <></>\n    )\n  );\n}","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { AppBar, Button, Chip, styled, Toolbar, tooltipClasses, Typography } from '@mui/material';\nimport React from 'react';\nimport { CommonConstants } from '../../../../common/constants';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\nimport { LoginDialog } from '../../../main/components/login';\nimport { NetworkList } from '../../../main/components/network-list';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`);\n\nexport const Header: React.FC = (props: any) => {\n  const context = useConnectedWeb3Context();\n  const [loginOpen, setLoginOpen] = React.useState(false);\n\n  const handleClickLogin = () => {\n    setLoginOpen(true);\n  };\n\n  const handleClickLogout = () => {\n    context.logout();\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen(false);\n  };\n\n  const truncateAddress = (address?: string) => {\n    return CommonUtil.truncateStringInTheMiddle(address, 10, 5)\n  }\n\n  return (\n    <Root>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <img src={\"./icon.png\"} alt=\"logo\" width=\"30\" />\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n          </TitleTypography>\n          <NetworkList></NetworkList>\n          {context.account ? (\n            <>\n              <BootstrapTooltip sx={{ [`& .${tooltipClasses.tooltip}`]: { maxWidth: \"none\" } }} title={context.account} placement=\"bottom\" arrow>\n                <Chip sx={{ color: \"white\", '& .MuiChip-icon': { color: \"white\" } }} icon={<AccountCircleIcon />} label={truncateAddress(context.account)} variant=\"outlined\" />\n              </BootstrapTooltip >\n              <Button color=\"inherit\" onClick={handleClickLogout}>\n                Logout\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button color=\"inherit\" onClick={handleClickLogin}>\n                Login\n              </Button>\n              <LoginDialog open={loginOpen} setOpen={setLoginOpen} onClose={handleLoginClose}></LoginDialog>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Root >\n  )\n}","import React from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { CommonUtil } from '../../../../util/common.util';\n\ninterface Props {\n  message: string\n  type: 'default' | 'warning'\n  error?: any\n  color?: string\n  backgroundColor?: string\n}\n\nexport const Alert: React.FC<Props> = (props: Props) => {\n  let color = '#000000';\n  let backgroundColor = 'rgba(255, 255, 255, 0.5)';\n\n  switch (props.type) {\n    case 'warning':\n      color = '#611a15';\n      backgroundColor = 'rgba(255, 0, 0, 0.1)';\n      break;\n    default:\n      break;\n  }\n\n  if (props.error) {\n    console.log(CommonUtil.toJsonString(props.error));\n  }\n\n  return (\n    <Paper>\n      <Box sx={{\n        color: props.color ?? color,\n        backgroundColor: props.backgroundColor ?? backgroundColor,\n        padding: '15px',\n        textAlign: 'center'\n      }}>\n        <Typography>{props.message}</Typography>\n      </Box>\n    </Paper>\n  );\n}\n","import { Checkbox, FormControl, FormControlLabel, FormGroup, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack, Switch, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { DefaultPoolFilterValues, PoolSortTypes } from \"../../../../common/constants\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { PoolFilterValues } from \"../../../../util/types\";\n\nexport const PoolFilter: React.FC = () => {\n  const [values, setValues] = useState<PoolFilterValues>(DefaultPoolFilterValues);\n  const emitter = getEmitter();\n\n  const emitEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n    emitter.emitPoolFilterValuesChanged(oldValues, newValues);\n  }\n\n  const handleSortByChange = (event: SelectChangeEvent) => {\n    const newValues = { ...values, sortBy: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleCheckedChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.checked };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mb: 2 }}>\n      <Grid item xs={12} md={10}>\n        <Grid container>\n          <Grid item xs sx={{ mr: 2 }}>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControlLabel control={<Checkbox\n                  checked={values.stakedOnly}\n                  onChange={handleCheckedChange('stakedOnly')} />} label=\"Staked only\" />\n                <Stack direction=\"row\" alignItems=\"center\" >\n                  <Typography>Ended</Typography>\n                  <Switch checked={values.showLive} onChange={handleCheckedChange('showLive')} />\n                  <Typography>Live</Typography>\n                </Stack>\n              </Stack>\n            </FormGroup>\n          </Grid>\n          <Grid item>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControl size=\"small\" sx={{ minWidth: \"120px\" }}>\n                  <InputLabel id=\"sortby-select-label\">Sort by</InputLabel>\n                  <Select\n                    labelId=\"sortby-select-label\"\n                    id=\"sortby-select\"\n                    value={values.sortBy}\n                    label=\"Sort by\"\n                    onChange={handleSortByChange}\n                  >\n                    {PoolSortTypes.map(e => (\n                      <MenuItem key={e.type} value={e.type}>{e.name}&nbsp;</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  id=\"search\"\n                  value={values.search}\n                  label=\"Search\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  autoComplete=\"off\"\n                  onChange={handleChange('search')}\n                />\n              </Stack>\n            </FormGroup>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { MomentUtil } from \"../util/moment.util\";\n\nexport class MomentFactory {\n  private readonly _map: Map<string, MomentUtil>\n\n  constructor() {\n    this._map = new Map<string, MomentUtil>();\n  }\n\n  create(locale?: Maybe<string>): MomentUtil {\n    const _locale = locale ?? navigator.language;\n    let util = this._map.get(_locale);\n    if (!util) {\n      util = new MomentUtil(_locale);\n      this._map.set(_locale, util);\n    }\n    return util;\n  }\n}\n\nconst factory = new MomentFactory();\n\nexport const getMomentFactory = (): MomentFactory => {\n  return factory;\n}","import { orderBy, partition } from \"lodash\";\nimport { PoolSortTypes } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories/moment.factory\";\nimport { Pool, PoolFilterValues, PoolSortType } from \"./types\";\n\nexport abstract class FilterUtil {\n  static filterPools(filter: PoolFilterValues, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools) {\n      return pools;\n    }\n    const moment = getMomentFactory().create();\n    const [closedPools, openPools] = partition(pools, (pool) => pool.endTimestamp >= 0 && moment.get().unix() >= pool.endTimestamp);\n    let filtered: Pool[] = openPools;\n    if (filter.showLive) {\n      if (filter.stakedOnly) {\n        filtered = openPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = openPools;\n      }\n    } else {\n      if (filter.stakedOnly) {\n        filtered = closedPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = closedPools;\n      }\n    }\n    const sorted = FilterUtil.sortPools(filter.sortBy, filtered);\n    return FilterUtil.searchPools(filter.search, sorted);\n  }\n\n  static sortPools(sortBy: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !sortBy) {\n      return pools;\n    }\n    switch (sortBy) {\n      case PoolSortTypes[PoolSortType.APR].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.apr?.toNumber() ?? 0,\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.TOTAL_STAKED].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.totalStaked.toNumber(),\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.DEFAULT].type:\n      default:\n        return pools;\n    }\n  }\n\n  static searchPools(term: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !term) {\n      return pools;\n    }\n    const lowerCaseTerm = term.toLowerCase();\n    return pools.filter((pool: Pool) =>\n      pool.rewardToken.originalSymbol.toLowerCase().includes(lowerCaseTerm) || pool.stakingToken.originalSymbol.toLowerCase().includes(lowerCaseTerm)\n    );\n  }\n}","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { CommonConstants } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories\";\nimport { DEPOSIT_MUTATION, WITHDRAW_MUTATION } from \"../mutations\";\nimport { Deposit, DepositVariables } from \"../mutations/__generated__/Deposit\";\nimport { Withdraw, WithdrawVariables } from \"../mutations/__generated__/Withdraw\";\nimport { GET_POOL_QUERY, GET_POOL_USER_INFO_QUERY } from \"../queries\";\nimport { GetPool, GetPoolVariables } from \"../queries/__generated__/GetPool\";\nimport { GetPoolUserInfo, GetPoolUserInfoVariables } from \"../queries/__generated__/GetPoolUserInfo\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { Pool } from \"../util/types\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class PoolService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n  private readonly _moment: MomentUtil;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n    this._moment = getMomentFactory().create();\n  }\n\n  async getAsync(_id: number, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<Maybe<Pool>> {\n    try {\n      const poolQuery = await this._apollo.query<GetPool, GetPoolVariables>({\n        query: GET_POOL_QUERY,\n        variables: {\n          id: _id.toString()\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const userInfoQuery = await this._apollo.query<GetPoolUserInfo, GetPoolUserInfoVariables>({\n        query: GET_POOL_USER_INFO_QUERY,\n        variables: {\n          poolId: _id,\n          account: this._walletManager.getActiveAccount()?.address\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const pool = poolQuery.data.pool as unknown as Pool;\n      return {\n        ...pool,\n        userInfo: userInfoQuery.data.poolUserInfo,\n        fetchTimestamp: this._moment.get().unix()\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Deposit, DepositVariables>({\n      mutation: DEPOSIT_MUTATION,\n      variables: {\n        id: _id.toString(),\n        tokenId: _tokenId,\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.deposit ?? false);\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Withdraw, WithdrawVariables>({\n      mutation: WITHDRAW_MUTATION,\n      variables: {\n        id: _id.toString(),\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.withdraw ?? false);\n  }\n\n  updateRewardPerToken(pool: Maybe<Pool>, blockNumber: BigNumber): boolean {\n    if (!pool?.userInfo) {\n      return false;\n    }\n\n    const latestBlock = blockNumber.lt(pool.endBlock) ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock.lte(pool.latestRewardBlock)) {\n      return false;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(new BigNumber(0))) {\n      pool.latestRewardBlock = latestBlock;\n      return true;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n    return true;\n  }\n}\n\nconst service = new PoolService();\n\nexport const getPoolService = () => {\n  return service;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { Pool } from \"./types\";\n\nexport abstract class ViteUtil {\n  static calculateRewardTokens(pool: Maybe<Pool>): BigNumber {\n    if (!pool?.userInfo) {\n      return new BigNumber(0);\n    }\n    return (pool.userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(pool.userInfo.rewardDebt));\n  }\n\n  static formatBigNumber(bn: BigNumber, tokenDecimals: number, decimals: number): string {\n    return bn.div(new BigNumber(10).pow(tokenDecimals)).decimalPlaces(decimals, BigNumber.ROUND_DOWN).toFormat();\n  }\n}","import { LoadingButton } from '@mui/lab';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode\n  size?: 'small' | 'medium' | 'large'\n  variant?: 'text' | 'outlined' | 'contained'\n  color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning',\n  fullWidth?: boolean\n  autoFocus?: boolean\n  disabled?: boolean\n  callbackFn: () => Promise<void>\n}\n\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\n  const [isDisabled, setIsDisabled] = React.useState(false)\n\n  const handleClick = async () => {\n    setIsDisabled(true)\n    try {\n      await props.callbackFn()\n    } catch (error) {\n      console.log(error)\n    }\n    setIsDisabled(false)\n  }\n\n  return (\n    <LoadingButton\n      loading={isDisabled}\n      size={props.size ?? \"small\"}\n      variant={props.variant ?? \"contained\"}\n      color={props.color ?? \"primary\"}\n      fullWidth={props.fullWidth}\n      onClick={handleClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </LoadingButton>\n  );\n}\n","import { Skeleton, Typography } from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getMomentFactory } from \"../../../../factories\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  pool: Maybe<Pool>\n}\n\nexport const PoolCountdown: React.FC<Props> = (props: Props) => {\n  const [hasStarted, setHasStarted] = useState<boolean>(false);\n  const [remainingBlocks, setRemainingBlocks] = useState<BigNumber>(new BigNumber(0));\n  const [countdown, setCountdown] = useState<string>(\"\");\n  const moment = useMemo(() => getMomentFactory().create(), []);\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (props.pool?.endBlock) {\n        let remainingBlocks = new BigNumber(0);\n        if (height.lte(props.pool.startBlock)) {\n          setHasStarted(false);\n          remainingBlocks = props.pool.startBlock.minus(height);\n        } else {\n          setHasStarted(true);\n          remainingBlocks = props.pool.endBlock.minus(height);\n        }\n        if (remainingBlocks.gte(0)) {\n          setRemainingBlocks(remainingBlocks);\n          const duration = moment.getDuration(remainingBlocks.toNumber());\n          if (duration.days() > 0) {\n            setCountdown(duration.days() + \" days \" + duration.hours() + \" hours\")\n          } else if (duration.hours() > 0) {\n            setCountdown(duration.hours() + \" hours \" + duration.minutes() + \" minutes\")\n          } else if (duration.minutes() > 0) {\n            setCountdown(duration.minutes() + \" minutes \" + duration.seconds() + \" seconds\")\n          } else {\n            setCountdown(duration.seconds() + \" seconds\")\n          }\n        } else {\n          setRemainingBlocks(new BigNumber(0));\n          setCountdown(\"\");\n        }\n      }\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, moment, networkManager]);\n\n  return (\n    <>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {hasStarted ? 'Ends in' : 'Starts in'}\n      </Typography>\n      {!props.pool ? (\n        <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n      ) : (\n        <>\n          {remainingBlocks.gt(0) ? (\n            <Typography variant=\"subtitle1\">\n              {remainingBlocks.toString()} Blocks\n              <Typography variant=\"body2\" color=\"text.secondary\" display=\"inline\" sx={{ ml: 1 }}>\n                {countdown}\n              </Typography>\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">-</Typography>\n          )}\n        </>\n      )}\n    </>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport { BigNumber } from 'bignumber.js';\nimport React, { useEffect, useState } from 'react';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDepositDialog: React.FC<Props> = (props: Props) => {\n  const [amount, setAmount] = useState<string>(\"\");\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(\"\")\n    }\n  }, [props.state])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.depositAsync(props.pool.id, props.pool.stakingToken.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Stake</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Earn {props.pool.rewardToken.originalSymbol} by staking {props.pool.stakingToken.originalSymbol}\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { GET_ACCOUNT_BALANCE_QUERY } from \"../queries\";\nimport { GetAccountBalance, GetAccountBalanceVariables } from \"../queries/__generated__/GetAccountBalance\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { getLogger } from \"../util/logger\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class AccountService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n  }\n\n  async getBalanceAsync(_account?: Maybe<string>, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<BigNumber> {\n    try {\n      const account = _account ?? this._walletManager.getActiveAccount()?.address;\n      if (!account || CommonUtil.isNullOrWhitespace(account)) {\n        return new BigNumber(0);\n      }\n      const poolQuery = await this._apollo.query<GetAccountBalance, GetAccountBalanceVariables>({\n        query: GET_ACCOUNT_BALANCE_QUERY,\n        variables: {\n          account\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const balance = poolQuery.data.accountBalance as unknown as BigNumber;\n      return balance;\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst service = new AccountService();\n\nexport const getAccountService = () => {\n  return service;\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { getAccountService } from '../../../../services/account.service';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { getLogger } from '../../../../util/logger';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ViteUtil } from '../../../../util/vite.util';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\nconst logger = getLogger();\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolWithdrawDialog: React.FC<Props> = (props: Props) => {\n  const getStakedAmount = useCallback(() => {\n    if (props.pool.userInfo?.stakingBalance.gt(0)) {\n      return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, 18).replace(',', '')\n    }\n    return \"\"\n  }, [props.pool])\n\n  const [amount, setAmount] = useState<string>(getStakedAmount());\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const accountService = getAccountService();\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(getStakedAmount())\n    }\n  }, [props.state, getStakedAmount])\n\n  useEffect(() => {\n    async function getBalanceAsync() {\n      const balance = await accountService.getBalanceAsync();\n      logger.info(\"Account balance:\", balance.toString())();\n    }\n    if (props.state.open) {\n      getBalanceAsync();\n    }\n  }, [props.state, accountService])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.withdrawAsync(props.pool.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Withdraw</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Enter the {props.pool.stakingToken.originalSymbol} amount to withdraw.\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import * as React from 'react';\nimport { Pool, PoolDialogState, PoolDialogType } from '../../../../util/types';\nimport { PoolDepositDialog } from '../dialog-deposit';\nimport { PoolWithdrawDialog } from '../dialog-withdraw';\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDialog: React.FC<Props> = (props: Props) => {\n  switch (props.state.type) {\n    case PoolDialogType.WITHDRAW:\n      return <PoolWithdrawDialog pool={props.pool} state={props.state} setState={props.setState}></PoolWithdrawDialog>\n    case PoolDialogType.DEPOSIT:\n      return <PoolDepositDialog pool={props.pool} state={props.state} setState={props.setState}></PoolDepositDialog>\n    default:\n      return <></>\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getPoolService } from \"../../../../services/pool.service\";\nimport { Pool } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\n\ninterface Props {\n  pool: Maybe<Pool>\n  account?: Maybe<string>\n  decimals: number\n  setCanClaim?: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const Rewards: React.FC<Props> = (props: Props) => {\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const [rewardTokens, setRewardTokens] = useState<BigNumber>(new BigNumber(0));\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    setPool(props.pool);\n  }, [props.pool]);\n\n  useEffect(() => {\n    if (pool) {\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\n      setRewardTokens(newRewardTokens);\n      if (props.setCanClaim) {\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\n      }\n    } else {\n      setRewardTokens(new BigNumber(0));\n      if (props.setCanClaim) {\n        props.setCanClaim(false);\n      }\n    }\n  }, [pool, props]);\n\n  useEffect(() => {\n    if (pool) {\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\n      setRewardTokens(newRewardTokens);\n      if (props.setCanClaim) {\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\n      }\n    } else {\n      setRewardTokens(new BigNumber(0));\n      if (props.setCanClaim) {\n        props.setCanClaim(false);\n      }\n    }\n  }, [pool, props]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (pool) {\n        const updated = poolService.updateRewardPerToken(pool, height);\n        if (updated) {\n          const newPool: Pool = {\n            ...pool\n          }\n          setPool(newPool);\n        }\n      }\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [pool, poolService, networkManager]);\n\n  const showRewardTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(rewardTokens, pool.rewardToken.decimals, decimals);\n  }\n\n  return (\n    <>\n      {showRewardTokens(props.decimals)}\n    </>\n  );\n}","import { Avatar, Badge, Grid, Skeleton, styled, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { getCoinUtil } from \"../../../../util/coin.util\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  loading: boolean\n  pool: Maybe<Pool>\n}\n\nexport const Tokens: React.FC<Props> = (props: Props) => {\n  const BigCoin = styled(Avatar)(({ theme }) => ({\n    width: 50,\n    height: 50,\n    backgroundColor: \"white\",\n    border: \"1px solid black\"\n  }));\n  const SmallCoin = styled(Avatar)(({ theme }) => ({\n    width: 30,\n    height: 30,\n    backgroundColor: \"white\",\n    border: `1px solid ${theme.palette.grey[600]}`\n  }));\n  const coinUtil = getCoinUtil();\n\n  return (\n    <Grid container alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <Badge\n          overlap=\"circular\"\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n          badgeContent={\n            <SmallCoin alt={props.pool?.stakingToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.stakingToken.iconUrl)} />\n          }\n        >\n          <BigCoin alt={props.pool?.rewardToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.rewardToken.iconUrl)} />\n        </Badge>\n      </Grid>\n      <Grid item>\n        {props.loading ? (\n          <>\n            <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n            <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n          </>\n        ) : (\n          <>\n            <Typography variant=\"subtitle1\">\n              Earn {props.pool?.rewardToken.originalSymbol}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Stake {props.pool?.stakingToken.originalSymbol}\n            </Typography>\n          </>\n        )}\n      </Grid>\n    </Grid >\n  );\n}","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Grid, Link, Paper, Skeleton, styled, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from '../../../../common/network';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { getLogger } from \"../../../../util/logger\";\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState, PoolDialogType } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\nimport { PoolCountdown } from \"../countdown\";\nimport { PoolDialog } from \"../dialog\";\nimport { Rewards } from '../rewards';\nimport { Tokens } from \"../tokens\";\n\nconst logger = getLogger()\n\nconst TransparentPaper = styled(Paper)(\n  ({ theme }) => ({\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    backgroundColor: \"transparent\"\n  }));\n\ninterface Props {\n  account?: Maybe<string>\n  pool?: Maybe<Pool>\n}\n\nexport const PoolListItem: React.FC<Props> = (props: Props) => {\n  const [dialogState, setDialogState] = useState<PoolDialogState>({\n    type: PoolDialogType.DEPOSIT,\n    open: false\n  });\n  const [canStake, setCanStake] = useState<boolean>(false);\n  const [canClaim, setCanClaim] = useState<boolean>(false);\n  const [canWithdraw, setCanWithdraw] = useState<boolean>(false);\n  const emitter = getEmitter();\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    if (props.pool) {\n      logger.info(`Pool loaded: ${props.pool?.id}`)();\n      setCanWithdraw(!!props.pool && !!props.account && (props.pool.userInfo?.stakingBalance.gt(0) ?? false));\n    } else {\n      setCanWithdraw(false);\n    }\n  }, [props.pool, props.account]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setCanStake(!!props.pool && !!props.account && networkManager.networkHeight.gte(props.pool.startBlock));\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, props.account, networkManager]);\n\n  const showApr = (): Maybe<string> => {\n    if (!props.pool || !props.pool.apr) {\n      return \"0\";\n    }\n    return props.pool.apr.toFormat(2);\n  }\n\n  const showTotalStaked = (): string => {\n    if (!props.pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.totalStaked, props.pool.stakingToken.decimals, 2);\n  }\n\n  const showStaked = (decimals: number): string => {\n    if (!props.pool?.userInfo) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, decimals);\n  }\n\n  const handleConnectWallet = () => {\n    emitter.emitConnectWalletDialog(true);\n  }\n\n  const handleClickDeposit = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.DEPOSIT,\n      open: true\n    })\n  }\n\n  const handleClickWithdraw = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.WITHDRAW,\n      open: true\n    })\n  }\n\n  const handleClickClaimAsync = async () => {\n    try {\n      if (props.pool) {\n        await poolService.withdrawAsync(props.pool.id, \"0\");\n      }\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <>\n      <Accordion defaultExpanded>\n        <AccordionSummary sx={{ backgroundColor: \"rgba(217, 217, 217, 0.1)\" }} expandIcon={<ExpandMoreIcon />}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item>\n              <Tokens loading={!props.pool} pool={props.pool}></Tokens>\n            </Grid>\n            <Grid item xs container alignItems=\"center\">\n              <Grid item xs container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item>\n                  {!props.pool ? (\n                    <>\n                      <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n                      <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n                    </>\n                  ) : (\n                    <>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {props.pool?.rewardToken.originalSymbol} earned\n                      </Typography>\n                      <Typography variant=\"subtitle1\">\n                        <Rewards pool={props.pool} decimals={4}></Rewards>\n                      </Typography>\n                    </>\n                  )}\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    APR\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"60px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {props.pool.apr ? (\n                        <>\n                          {showApr()}%\n                        </>\n                      ) : (\n                        <>\n                          -\n                        </>\n                      )}\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Total staked\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"120px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {showTotalStaked()}\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item>\n                  <PoolCountdown pool={props.pool} />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails sx={{ backgroundColor: \"rgba(217, 217, 217, 0.3)\", pt: 2 }}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item sx={{ mr: 4 }}>\n              <Link underline=\"none\" href={props.pool?.rewardToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                View {props.pool?.rewardToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n              </Link>\n              <Link underline=\"none\" href={props.pool?.stakingToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                View {props.pool?.stakingToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n              </Link>\n            </Grid>\n            <Grid item xs container alignItems=\"center\">\n              <Grid item container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item xs={12} md={6} lg={5} zeroMinWidth>\n                  <TransparentPaper variant=\"outlined\">\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {props.pool?.rewardToken.originalSymbol} earned\n                    </Typography>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      {!props.pool ? (\n                        <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                      ) : (\n                        <Typography sx={{ width: \"100%\" }} noWrap>\n                          <Rewards pool={props.pool} decimals={18} account={props.account} setCanClaim={setCanClaim}></Rewards>\n                        </Typography>\n                      )}\n                      <Box sx={{ ml: 2 }} >\n                        <ClickOnceButton variant=\"contained\" size=\"large\" callbackFn={handleClickClaimAsync} disabled={!canClaim}>\n                          Claim\n                        </ClickOnceButton>\n                      </Box>\n                    </Box>\n                  </TransparentPaper>\n                </Grid>\n                {!props.account ? (\n                  <Grid item xs={12} md={6} lg={5}>\n                    <TransparentPaper variant=\"outlined\">\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Start staking\n                      </Typography>\n                      <Button variant=\"contained\" size=\"large\" fullWidth disabled={!props.pool} onClick={handleConnectWallet}>Connect wallet</Button>\n                    </TransparentPaper>\n                  </Grid>\n                ) : (\n                  <>\n                    <Grid item xs={12} md={6} lg={5} zeroMinWidth>\n                      <TransparentPaper variant=\"outlined\">\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Staked\n                        </Typography>\n                        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                          {!props.pool ? (\n                            <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                          ) : (\n                            <Typography sx={{ width: \"100%\" }} noWrap>\n                              {showStaked(18)}\n                            </Typography>\n                          )}\n                          <Button variant=\"contained\" size=\"large\" sx={{ ml: 2 }} onClick={handleClickWithdraw} disabled={!canWithdraw}>\n                            Withdraw\n                          </Button>\n                        </Box>\n                      </TransparentPaper>\n                    </Grid>\n                    <Grid item xs={12} md sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      <Button variant=\"contained\" size=\"large\" fullWidth onClick={handleClickDeposit} disabled={!canStake}>\n                        Stake\n                      </Button>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n      {props.pool && (\n        <PoolDialog pool={props.pool} state={dialogState} setState={setDialogState}></PoolDialog>\n      )}\n    </>\n  );\n}","import { Grid } from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport { useEffect, useState } from \"react\";\nimport { DefaultPoolFilterValues } from \"../../../../common/constants\";\nimport { getCommonContext } from \"../../../../contexts/common\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { FilterUtil } from \"../../../../util/filter.util\";\nimport { getLogger } from \"../../../../util/logger\";\nimport { GlobalEvent, Pool, PoolFilterValues } from \"../../../../util/types\";\nimport { Alert } from \"../../../common/components/alert\";\nimport { PoolListItem } from \"../list-item\";\n\nconst logger = getLogger()\n\ninterface Props {\n  account?: Maybe<string>\n  pools?: Maybe<Pool[]>\n}\n\nexport const PoolList: React.FC<Props> = (props: Props) => {\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [allPools, setAllPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [pools, setPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [filter, setFilter] = useState<PoolFilterValues>(DefaultPoolFilterValues)\n  const emitter = getEmitter()\n  const commonContext = getCommonContext()\n\n  useEffect(() => {\n    if (props.pools) {\n      setIsLoading(false)\n    } else {\n      setIsLoading(true)\n    }\n    setAllPools(props.pools)\n  }, [props.pools])\n\n  useEffect(() => {\n    setPools(FilterUtil.filterPools(filter, allPools))\n  }, [allPools, filter])\n\n  useEffect(() => {\n    const handleEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n      setFilter(newValues)\n    }\n    emitter.on(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolFilterValuesChanged)()\n      emitter.off(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    };\n  }, [emitter])\n\n  useEffect(() => {\n    const replacePool = (pool: Pool) => {\n      if (allPools && pool) {\n        const index = allPools.findIndex(e => e.id === pool.id)\n        if (index >= 0) {\n          // Replace existing\n          const updatedPools = [...allPools]\n          updatedPools[index] = {\n            ...pool\n          }\n          setAllPools(updatedPools)\n        } else {\n          // Prepend to existing pools\n          setAllPools([pool, ...allPools])\n        }\n      }\n    }\n    const handlePoolEvent = async (id: number, amount: BigNumber, account: string) => {\n      const pool = await commonContext.datasource.getPoolAsync(id, props.account)\n      replacePool(pool)\n    }\n    emitter.on(GlobalEvent.PoolDeposit, handlePoolEvent)\n    emitter.on(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolDeposit)()\n      emitter.off(GlobalEvent.PoolDeposit, handlePoolEvent)\n      emitter.off(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    };\n  }, [emitter, allPools, commonContext, props.account])\n\n  if (!isLoading && pools && pools.length <= 0) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message=\"No pools found.\" type=\"default\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n      {isLoading ? (\n        <>\n          {[0, 1, 2].map((index: number) => (\n            <Grid item key={index} xs={12} md={10}>\n              <PoolListItem></PoolListItem>\n            </Grid>\n          ))}\n        </>\n      ) : (\n        <>\n          {pools?.map((p: Pool) => (\n            <Grid item key={p.id} xs={12} md={10}>\n              <PoolListItem account={props.account} pool={p}></PoolListItem>\n            </Grid>\n          ))}\n        </>\n      )}\n    </Grid>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { Container, Grid } from '@mui/material';\nimport React from 'react';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { GET_POOLS_QUERY } from '../../../../queries';\nimport { GetPools, GetPoolsVariables } from '../../../../queries/__generated__/GetPools';\nimport { Pool } from '../../../../util/types';\nimport { Alert } from '../../../common/components/alert';\nimport { PoolFilter } from '../filter';\nimport { PoolList } from '../list';\n\nexport const Pools: React.FC = () => {\n  const context = useConnectedWeb3Context();\n  const poolQuery = useQuery<GetPools, GetPoolsVariables>(GET_POOLS_QUERY, {\n    variables: {\n      account: context.account\n    },\n    fetchPolicy: 'network-only'\n  });\n\n  const error = poolQuery.error\n\n  if (error) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message={error.message} type=\"warning\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Container sx={{ pt: 6, pb: 6 }} maxWidth=\"lg\">\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n        <PoolFilter></PoolFilter>\n        <PoolList account={context.account} pools={poolQuery.data?.pools as Maybe<Pool[]>}></PoolList>\n      </Grid>\n    </Container>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\nimport React, { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  // @ts-ignore\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ConfirmTransactionDialog: React.FC = () => {\n  const [open, setOpen] = useState(false);\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    };\n  }, [emitter, setOpen])\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      style={{ zIndex: 9999 }}\n    >\n      <DialogTitle>ViteConnect</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please confirm transaction on VITE Wallet App\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { GET_NETWORK_BLOCK_HEIGHT_QUERY } from '../../../../queries';\nimport { GetNetworkBlockHeight } from '../../../../queries/__generated__/GetNetworkBlockHeight';\nimport { getEmitter } from '../../../../util/emitter.util';\n\nexport const Network: React.FC = () => {\n  const networkManager = getNetworkManager();\n  const emitter = getEmitter();\n  const query = useQuery<GetNetworkBlockHeight>(GET_NETWORK_BLOCK_HEIGHT_QUERY, {\n    fetchPolicy: 'network-only'\n  });\n\n  useEffect(() => {\n    let interval = setInterval(async () => {\n      await query.refetch();\n      if (query.data?.networkBlockHeight) {\n        const height = query.data.networkBlockHeight;\n        emitter.emitNetworkBlockHeightChanged(height);\n        networkManager.networkHeight = height;\n      }\n    }, 1000)\n    return () => {\n      clearInterval(interval);\n    }\n  })\n\n  return (\n    <>\n    </>\n  )\n}\n","import { useSnackbar } from 'notistack';\nimport React from 'react';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Footer } from '../../../layout/components/footer';\nimport { Header } from '../../../layout/components/header';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\nimport { Pools } from '../../../pool/components/main';\nimport { ConfirmTransactionDialog } from '../dialog-transaction';\nimport { Network } from '../network';\n\nexport const Main: React.FC = (props: any) => {\n  SnackbarUtil.snackbar = useSnackbar();\n  return (\n    <MainWrapper>\n      <Header />\n      <Network />\n      <MainScroll>\n        <Pools></Pools>\n        <ConfirmTransactionDialog></ConfirmTransactionDialog>\n      </MainScroll>\n      <Footer />\n    </MainWrapper>\n  )\n}\n","import { ApolloProvider } from '@apollo/client';\nimport { styled } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport BackgroundSVG from './bg.svg';\nimport { getApolloClient } from './clients/apollo.client';\nimport { ConnectedWeb3 } from './contexts/connectedWeb3';\nimport { Web3Provider } from './contexts/web3';\nimport { Main } from './features/main/components/main';\n\nconst Background = styled('div')(`\n  width: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  background-image: url('${BackgroundSVG}');\n`\n);\n\nconst App: React.FC = () => {\n  const apolloClient = React.useMemo(() => getApolloClient(), [])\n  // Almost never return exponential notation\n  BigNumber.config({ EXPONENTIAL_AT: 1e+9 })\n  return (\n    <Background>\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={apolloClient}>\n          <Web3Provider>\n            <ConnectedWeb3>\n              <Main />\n            </ConnectedWeb3>\n          </Web3Provider>\n        </ApolloProvider>\n      </SnackbarProvider>\n    </Background>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\nimport { red } from '@mui/material/colors';\n\n// A custom theme for this app\n// https://github.com/mui-org/material-ui/tree/master/examples/create-react-app-with-typescript\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#d6352f',\n    },\n    secondary: {\n      main: '#ff0000',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export abstract class CommonUtil {\n  static isString(value: any): boolean {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  static isNullOrWhitespace(value?: Maybe<string>): boolean {\n    if (!CommonUtil.isString(value)) {\n      return true;\n    } else {\n      return value === null || value === undefined || value.trim() === '';\n    }\n  }\n\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\n    return CommonUtil.isNullOrWhitespace(value) || value === defaultValue\n  }\n\n  static timeout(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\n    if (str) {\n      if (maxLength < str.length) {\n        return `${str.substr(0, maxLength)}...`\n      }\n    }\n    return str\n  }\n\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\n    if (str) {\n      const minTruncatedLength = strPositionStart + strPositionEnd\n      if (minTruncatedLength < str.length) {\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\n      }\n    }\n    return str\n  }\n\n  static toJsonString(data: any): string {\n    return JSON.stringify(data, null, 2);\n  }\n\n  static async imageUrlToBlob(url: string): Promise<Blob> {\n    return (await fetch(url)).blob();\n  }\n\n  static random(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  static equals(lh: any, rh: any): boolean {\n    // The ORDER of the properties IS IMPORTANT\n    return JSON.stringify(lh) === JSON.stringify(rh);\n  }\n}","import BigNumber from 'bignumber.js';\nimport EventEmitter from 'events';\nimport { GlobalEvent, Pool, PoolFilterValues } from './types';\n\nexport interface IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void\n  emitConnectWalletDialog(open: boolean): void\n  emitNetworkBlockHeightChanged(height: BigNumber): void\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void\n  emitPoolUpdate(pool: Pool): void\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class GlobalEmitter extends EventEmitter implements IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConfirmTransactionDialog, open)\n  }\n  emitConnectWalletDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConnectWalletDialog, open)\n  }\n  emitNetworkBlockHeightChanged(height: BigNumber): void {\n    this.emit(GlobalEvent.NetworkBlockHeightChanged, height)\n  }\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void {\n    this.emit(GlobalEvent.PoolFilterValuesChanged, oldValues, newValues)\n  }\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolDeposit, id, amount, account)\n  }\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolWithdraw, id, amount, account)\n  }\n  emitPoolUpdate(pool: Pool): void {\n    this.emit(GlobalEvent.PoolUpdate, pool)\n  }\n}\n\nconst emitter = new GlobalEmitter();\n\nexport const getEmitter = (): IGlobalEmitter => {\n  return emitter;\n}\n","export enum WalletType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class Wallet<T> {\n  private readonly _type: WalletType\n\n  active?: T\n  accounts: T[] = []\n\n  constructor(type: WalletType, init?: Partial<Wallet<T>>) {\n    this._type = type\n    this.baseInitinit(init)\n  }\n\n  static fromJS(data: any): Maybe<WebWallet | SessionWallet> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWallet(data)\n      case WalletType.Session:\n        return new SessionWallet(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletType {\n    return this._type\n  }\n\n  protected abstract createAccount(data: any): T\n\n  private baseInitinit(data?: any): void {\n    if (data) {\n      this.active = data.active ? this.createAccount(data.active) : undefined\n      if (data.accounts && Array.isArray(data.accounts)) {\n        data.accounts.forEach((account: any) => {\n          this.accounts.push(this.createAccount(account))\n        })\n      }\n    }\n    if (!this.accounts) {\n      this.accounts = []\n    }\n  }\n}\n\nexport class WebWallet extends Wallet<WebWalletAccount> {\n  mnemonic!: string\n\n  constructor(init?: Partial<WebWallet>) {\n    super(WalletType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.mnemonic = data.mnemonic\n    }\n  }\n\n  protected createAccount(data: any): WebWalletAccount {\n    return new WebWalletAccount(data)\n  }\n}\n\nexport class SessionWallet extends Wallet<SessionWalletAccount> {\n  session!: string\n  timestamp!: number\n\n  constructor(init?: Partial<SessionWallet>) {\n    super(WalletType.Session, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.session = data.session\n      this.timestamp = data.timestamp\n    }\n  }\n\n  protected createAccount(data: any): SessionWalletAccount {\n    return new SessionWalletAccount(data)\n  }\n}\n\nexport enum WalletAccountType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class WalletAccount {\n  private readonly _type: WalletAccountType\n\n  id!: string\n  address!: string\n\n  constructor(type: WalletAccountType, init?: Partial<WalletAccount>) {\n    this._type = type\n    this.baseInit(init)\n  }\n\n  static fromJS(data: any): Maybe<WalletAccount> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWalletAccount(data)\n      case WalletType.Session:\n        return new SessionWalletAccount(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletAccountType {\n    return this._type\n  }\n\n  private baseInit(data?: any): void {\n    if (data) {\n      this.id = data.id\n      this.address = data.address\n    }\n  }\n}\n\nexport class WebWalletAccount extends WalletAccount {\n  privateKey!: string\n\n  constructor(init?: Partial<WebWalletAccount>) {\n    super(WalletAccountType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.privateKey = data.privateKey\n    }\n  }\n}\n\nexport class SessionWalletAccount extends WalletAccount {\n  constructor(init?: Partial<SessionWalletAccount>) {\n    super(WalletAccountType.Session, init)\n  }\n}","import Connector from '@vite/connector';\nimport { WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { SessionWallet, SessionWalletAccount } from './types';\n\nconst logger = getLogger()\n\nexport interface IWalletConnector {\n  readonly uri: string\n  sendTransactionAsync(...args: any): Promise<any>\n  signMessageAsync(...args: any): Promise<any>\n  killSessionAsync(): Promise<void>\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class WalletConnector extends Connector implements IWalletConnector {\n  private readonly _walletManager: WalletManager;\n\n  constructor(walletManager: WalletManager, opts: any, meta?: any) {\n    super(opts, meta);\n    this._walletManager = walletManager;\n    this.on('connect', (err: any, payload: any) => {\n      logger.info('WalletConnector.connect', err, payload)()\n      const { accounts } = payload.params[0];\n      this.saveSession(accounts);\n    });\n    this.on('disconnect', (err: any, payload: any) => {\n      logger.info('WalletConnector.disconnect', err, payload)()\n      this.stopBizHeartBeat()\n      this._walletManager.removeWallet()\n    });\n    this.on('session_update', (err: any, payload: any) => {\n      logger.info('WalletConnector.session_update', err, payload)()\n      const session = payload[0];\n      if (session && session.accounts) {\n        this.saveSession(session.accounts);\n      }\n    });\n  }\n\n  get uri(): string {\n    return super.uri\n  }\n\n  on(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.on(event, listener)\n  }\n\n  off(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.off(event, listener)\n  }\n\n  saveSession(accounts: string[]): void {\n    if (!accounts || !accounts[0]) {\n      throw new Error('address is null');\n    }\n    const sessionAccounts: SessionWalletAccount[] = []\n    for (let index = 0; index < accounts.length; index++) {\n      const address = accounts[index];\n      sessionAccounts.push(new SessionWalletAccount({\n        id: index.toString(),\n        address: address\n      }))\n    }\n    const wallet = new SessionWallet({\n      active: sessionAccounts[0],\n      accounts: sessionAccounts,\n      session: this.session,\n      timestamp: new Date().getTime()\n    })\n    this._walletManager.setWallet(wallet)\n  }\n\n  updateSession(): void {\n    const existing = this._walletManager.getWallet()\n    if (existing && existing instanceof SessionWallet) {\n      existing.timestamp = new Date().getTime()\n      this._walletManager.updateWalletStore(existing)\n    }\n  }\n\n  async createSession(): Promise<string> {\n    await super.createSession();\n    return this.uri;\n  }\n\n  async sendTransactionAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signAndSendTx', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async signMessageAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signMessage', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async killSessionAsync(): Promise<any> {\n    await super.killSession();\n  }\n}","import { IWalletConnector, WalletConnector, WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\n\nconst logger = getLogger()\n\nexport class WalletConnectorFactory {\n  private readonly _walletManager: WalletManager\n\n  constructor(walletManager: WalletManager) {\n    this._walletManager = walletManager\n  }\n\n  create(network: Network): IWalletConnector {\n    const session = this._walletManager.getValidSession()\n    const account = this._walletManager.getActiveAccount()\n    const opts = {\n      bridge: network.connectorUrl,\n      session\n    }\n    const meta = account ? { lastAccount: account.address } : undefined\n    const connector = new WalletConnector(this._walletManager, opts, meta)\n\n    if (!session) {\n      connector.createSession().then(() => logger.info('IWalletConnector connected', connector.uri)())\n    }\n\n    return connector\n  }\n}","import { SessionWallet, Wallet, WebWallet } from '.';\nimport { CommonConstants } from '../common/constants';\nimport { getLogger } from '../util/logger';\nimport { WalletType } from './types';\n\nconst logger = getLogger()\n\nexport class WalletStore {\n\n  private readonly _webWalletKey = CommonConstants.WEB_WALLET_STORAGE_SPACE;\n  private readonly _sessionWalletKey = CommonConstants.SESSION_WALLET_STORAGE_SPACE\n\n  clear(): void {\n    localStorage.removeItem(this._webWalletKey);\n    sessionStorage.removeItem(this._sessionWalletKey);\n  }\n\n  getItem(): Maybe<WebWallet | SessionWallet> {\n    let data;\n\n    try {\n      data = localStorage.getItem(this._webWalletKey);\n      if (!data) {\n        data = sessionStorage.getItem(this._sessionWalletKey);\n      }\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n\n    if (!data) {\n      return undefined;\n    }\n\n    try {\n      return Wallet.fromJS(JSON.parse(data));\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n  }\n\n  setItem(data: WebWallet | SessionWallet): void {\n    const saveData = JSON.stringify(data);\n\n    try {\n      switch (data.type) {\n        case WalletType.Web:\n          localStorage.setItem(this._webWalletKey, saveData);\n          break;\n        case WalletType.Session:\n          sessionStorage.setItem(this._sessionWalletKey, saveData);\n          break;\n        default:\n          throw new Error(`Wallet type '${data.type}' is not supported.`)\n      }\n    } catch (err) {\n      logger.error(err)();\n    }\n  }\n}","import { wallet } from '@vite/vitejs';\nimport { SessionWallet, WalletAccount, WebWallet, WebWalletAccount } from '.';\nimport { getLogger } from '../util/logger';\nimport { WalletStore } from './store';\n\nconst logger = getLogger()\n\nexport class WalletManager {\n  private readonly _store: WalletStore;\n  private _wallet?: WebWallet | SessionWallet;\n  private _mnemonicDeriveIndex = 0;\n  private _setWalletCallback?: (wallet?: WebWallet | SessionWallet | undefined) => void;\n\n  constructor() {\n    this._store = new WalletStore();\n  }\n\n  initWallet(): void {\n    const wallet = this._store.getItem();\n    if (wallet) {\n      this._wallet = wallet;\n      this._mnemonicDeriveIndex = wallet.accounts.length;\n      this.updateWallet();\n    }\n  }\n\n  set onSetWalletCallback(cb: (wallet?: WebWallet | SessionWallet | undefined) => void) {\n    this._setWalletCallback = cb;\n  }\n\n  getWallet(): Maybe<WebWallet | SessionWallet> {\n    return this._wallet;\n  }\n\n  setWallet(wallet?: WebWallet | SessionWallet): void {\n    this._wallet = wallet;\n    this.updateWalletStore(wallet)\n    this.updateWallet()\n  }\n\n  updateWallet(): void {\n    if (this._setWalletCallback) {\n      this._setWalletCallback(this._wallet);\n    }\n  }\n\n  updateWalletStore(wallet?: WebWallet | SessionWallet): void {\n    if (wallet) {\n      this._store.setItem(wallet);\n    }\n  }\n\n  createWebWallet(mnemonic: string): Maybe<WebWallet> {\n    if (!this.validateMnemonic(mnemonic)) {\n      return undefined;\n    }\n    this.resetWallet();\n    const account = this.createWebWalletAccount(mnemonic, 0);\n    const wallet = new WebWallet({\n      active: account,\n      mnemonic,\n      accounts: [\n        account\n      ]\n    });\n    this.setWallet(wallet);\n    return wallet;\n  }\n\n  removeWallet(): void {\n    this.resetWallet();\n    this.updateWallet();\n  }\n\n  getAccountByAddress(address: string): Maybe<WalletAccount> {\n    return this._wallet?.accounts?.find(e => e.address === address)\n  }\n\n  addAccount(): Maybe<WalletAccount> {\n    if (this._wallet instanceof WebWallet) {\n      const account = this.createWebWalletAccount(this._wallet.mnemonic);\n      this._wallet.accounts.push(account);\n      this.setActiveAccount(account);\n      return account;\n    }\n    return undefined\n  }\n\n  getActiveAccount(): Maybe<WalletAccount> {\n    return this._wallet?.active\n  }\n\n  setActiveAccount(account: WalletAccount): boolean {\n    if (this._wallet) {\n      this._wallet.active = account;\n      this._store.setItem(this._wallet);\n      this.updateWallet();\n      return true;\n    }\n    return false;\n  }\n\n  getAccounts(): WalletAccount[] {\n    if (this._wallet) {\n      return this._wallet.accounts;\n    }\n    return [];\n  }\n\n  getValidSession(): Maybe<string> {\n    const wallet = this._store.getItem();\n    if (wallet && wallet instanceof SessionWallet) {\n      if (new Date().getTime() - wallet.timestamp < 1000 * 60 * 10) {\n        return wallet.session;\n      } else {\n        logger.info('Found expired session.', wallet)();\n      }\n    }\n    return undefined;\n  }\n\n  private resetWallet(): void {\n    this._wallet = undefined;\n    this._mnemonicDeriveIndex = 0;\n    this._store.clear();\n  }\n\n  private createWebWalletAccount(mnemonic: string, index = this._mnemonicDeriveIndex): WebWalletAccount {\n    const { privateKey } = wallet.deriveAddress({\n      mnemonics: mnemonic,\n      index\n    });\n    let account = new WebWalletAccount({\n      id: index.toString(),\n      privateKey,\n      address: wallet.createAddressByPrivateKey(privateKey).address\n    });\n    this._mnemonicDeriveIndex = index + 1;\n    return account;\n  }\n\n  private validateMnemonic(mnemonic: Maybe<string>): Boolean {\n    if (mnemonic) {\n      return wallet.validateMnemonics(mnemonic);\n    }\n    return false;\n  }\n}\n\nconst manager = new WalletManager();\n\nexport const getWalletManager = () => {\n  return manager;\n}","import { abi as abiutils, accountBlock, utils, ViteAPI } from \"@vite/vitejs\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Task } from \"../util/task\";\nimport { Network, VmLog } from \"../util/types\";\nimport { getWalletManager, IWalletConnector, SessionWalletAccount, WalletAccount, WalletConnectorFactory, WalletManager, WebWalletAccount } from \"../wallet\";\nconst { WS_RPC } = require('@vite/vitejs-ws');\n\nconst logger = getLogger();\n\nconst providerTimeout = 60000;\nconst providerOptions = { retryTimes: 10, retryInterval: 5000 };\n\nexport class ViteClient {\n  private _isConnected: boolean;\n  private _connector?: IWalletConnector;\n  private _provider?: any;\n  private _client?: any;\n  private readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _connectorFactory: WalletConnectorFactory;\n\n  constructor() {\n    this._isConnected = false;\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._connectorFactory = new WalletConnectorFactory(this._walletManager);\n  }\n\n  get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  get connector(): Maybe<IWalletConnector> {\n    return this._connector;\n  }\n\n  initAsync = async (network: Network) => new Promise<void>((resolve, reject) => {\n    this._connector = this._connectorFactory.create(network)\n    this._provider = new WS_RPC(network.rpcUrl, providerTimeout, providerOptions);\n    let isResolved = false;\n    this._provider.on('error', (err: any) => {\n      logger.error(err)();\n      if (isResolved) return;\n      reject(err);\n      this._isConnected = false;\n    });\n    this._client = new ViteAPI(this._provider, () => {\n      logger.info(`ViteAPI connected to ${this._provider.path}`)();\n      isResolved = true;\n      resolve();\n      this._isConnected = true;\n    });\n  });\n\n  dispose(): void {\n    logger.info(\"Disposing ViteClient\")();\n    this._provider?.disconnect();\n    this._isConnected = false;\n  }\n\n  async requestAsync(method: string, ...args: any[]): Promise<any> {\n    if (this._isConnected && this._client) {\n      return this._client.request(method, ...args);\n    } else {\n      return Promise.reject('Vite client is not ready to make requests.');\n    }\n  }\n\n  async callContractAsync(account: WalletAccount, methodName: string, abi: any, params: any, tokenId: any, amount: string, toAddress: string): Promise<any> {\n    let block = accountBlock\n      .createAccountBlock(\"callContract\", {\n        address: account.address,\n        abi,\n        methodName,\n        tokenId,\n        amount,\n        toAddress,\n        params,\n      })\n\n    if (account instanceof WebWalletAccount) {\n      block = block.setProvider(this._client).setPrivateKey(account.privateKey);\n      await block.autoSetPreviousAccountBlock();\n      const result = await block.sign().send();\n      return result;\n    } else if (account instanceof SessionWalletAccount) {\n      if (this.connector) {\n        this._emitter.emitConfirmTransactionDialog(true);\n        try {\n          const result = await this.connector.sendTransactionAsync({\n            block: block.accountBlock\n          });\n          this._emitter.emitConfirmTransactionDialog(false);\n          return result;\n        } catch (error) {\n          this._emitter.emitConfirmTransactionDialog(false);\n          throw error\n        }\n      } else {\n        throw new Error(\"Connector is not defined\");\n      }\n    } else {\n      throw new Error(\"Account not supported\");\n    }\n  }\n\n  async callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any> {\n    let data = abiutils.encodeFunctionCall(abi, params);\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\n    let result = await this.requestAsync(\"contract_callOffChainMethod\", {\n      selfAddr: contractAddress,\n      offChainCode: offchaincode,\n      data: dataBase64,\n    });\n    if (result) {\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\n      let outputs = [];\n      for (let i = 0; i < abi.outputs.length; i++) {\n        outputs.push(abi.outputs[i].type);\n      }\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\n      let resultList = [];\n      if (offchainDecodeResult) {\n        for (let i = 0; i < abi.outputs.length; i++) {\n          if (abi.outputs[i].name) {\n            resultList.push({\n              name: abi.outputs[i].name,\n              value: offchainDecodeResult[i],\n            });\n          } else {\n            resultList.push({\n              name: \"\",\n              value: offchainDecodeResult[i],\n            });\n          }\n        }\n      }\n      return resultList;\n    }\n    return \"\";\n  }\n\n  decodeVmLog(vmLog: any, abi: any): Maybe<VmLog> {\n    let topics = vmLog.topics;\n    for (let j = 0; j < abi.length; j++) {\n      let abiItem = abi[j];\n      if (abiutils.encodeLogSignature(abiItem) === topics[0]) {\n        if (vmLog.data) {\n          let log: VmLog = {\n            topic: topics[0],\n            args: abiutils.decodeLog(\n              abiItem.inputs,\n              utils._Buffer.from(vmLog.data, \"base64\").toString(\"hex\"),\n              topics.slice(1)\n            ),\n            event: abiItem.name,\n          };\n          return log;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  async createAddressListenerAsync(address: string): Promise<any> {\n    const payload = {\n      addressHeightRange: {\n        placeholder: {\n          fromHeight: \"0\",\n          toHeight: \"0\",\n        },\n      },\n    };\n    let tempPayload = JSON.stringify(payload);\n    tempPayload = tempPayload.replace(\"placeholder\", address);\n    const result = await this._client?.subscribe(\"createVmlogSubscription\", JSON.parse(tempPayload));\n    return result;\n  }\n\n  removeListener(event: any): void {\n    this._client?.unsubscribe(event);\n  }\n\n  async waitForAccountBlockAsync(address: string, height: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      let result: any = undefined;\n      let error: any = undefined;\n      const task = new Task(async () => {\n        try {\n          let blockByHeight = await this.requestAsync(\n            'ledger_getAccountBlockByHeight',\n            address,\n            height\n          );\n\n          if (!blockByHeight) {\n            return true;\n          }\n\n          let receiveBlockHash = blockByHeight.receiveBlockHash;\n          if (!receiveBlockHash) {\n            return true;\n          }\n\n          let blockByHash = await this.requestAsync('ledger_getAccountBlockByHash', receiveBlockHash);\n          if (!blockByHash) {\n            return true;\n          }\n\n          result = {\n            ...this.getAccountBlockStatus(blockByHash),\n            accountBlock: blockByHash\n          }\n\n          return false;\n        } catch (err) {\n          error = err\n          return false;\n        }\n      }, 500);\n      task.start(() => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  private getAccountBlockStatus(accountBlock: any) {\n    let status = this.resolveAccountBlockData(accountBlock);\n    let statusTxt = '';\n    switch (status) {\n      case 0:\n        statusTxt = '0, Execution succeed';\n        break;\n      case 1:\n        statusTxt = '1, Execution reverted';\n        break;\n      case 2:\n        statusTxt = '2, Max call depth exceeded';\n        break;\n    }\n    return {\n      status,\n      statusTxt\n    };\n  }\n\n  private resolveAccountBlockData(accountBlock: any) {\n    if (\n      (accountBlock.blockType !== 4 && accountBlock.blockType !== 5) ||\n      !accountBlock.data\n    ) {\n      return 0;\n    }\n    let bytes = utils._Buffer.from(accountBlock.data, 'base64');\n\n    if (bytes.length !== 33) {\n      return 0;\n    }\n    return bytes[32];\n  }\n}\n\nconst client = new ViteClient();\n\nexport const getViteClient = () => {\n  return client;\n}"],"sourceRoot":""}